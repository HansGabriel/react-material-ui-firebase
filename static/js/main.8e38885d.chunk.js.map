{"version":3,"sources":["firebase.js","services/theming.js","services/authentication.js","components/LaunchScreen/LaunchScreen.js","components/Bar/Bar.js","components/EmptyState/EmptyState.js","components/HomeContent/HomeContent.js","components/NotFoundContent/NotFoundContent.js","components/Router/Router.js","components/AuthProviderList/AuthProviderList.js","constraints.js","components/SignUpDialog/SignUpDialog.js","components/SignInDialog/SignInDialog.js","components/AccountTab/AccountTab.js","components/AppearanceTab/AppearanceTab.js","components/ConnectionsTab/ConnectionsTab.js","components/SecurityTab/SecurityTab.js","components/SettingsDialog/SettingsDialog.js","components/AlertDialog/AlertDialog.js","components/DialogHost/DialogHost.js","components/App/App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","firestore","storage","colors","red","id","name","import","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","types","light","dark","getColor","colorId","_","camelCase","getType","typeId","defaultPrimaryColor","defaultSecondaryColor","defaultType","defaultTheme","createMuiTheme","palette","primary","secondary","type","primaryColor","secondaryColor","theming","isDefaultTheme","theme","createTheme","changeTheme","Promise","resolve","reject","currentUser","uid","reference","collection","doc","update","then","value","logEvent","catch","reason","changePrimaryColor","changeSecondaryColor","changeType","resetTheme","avatarFileTypes","authentication","fields","firstName","lastName","username","emailAddress","password","createUserWithEmailAndPassword","user","set","method","signInWithEmailAndPassword","providerId","provider","OAuthProvider","signInWithPopup","linkWithPopup","unlink","providerData","find","authProvider","signOut","sendPasswordResetEmail","avatar","includes","size","ref","child","put","uploadTaskSnapshot","getDownloadURL","updateProfile","photoURL","delete","updateEmail","updatePassword","lastPasswordChange","FieldValue","serverTimestamp","sendEmailVerification","LaunchScreen","Box","position","top","left","CircularProgress","Component","Bar","props","getNameInitials","userData","displayName","charAt","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","this","performingAction","signedIn","onSignUpClick","onSignInClick","AppBar","color","Toolbar","variant","flexGrow","Typography","IconButton","disabled","onClick","Avatar","alt","src","Menu","open","Boolean","onClose","MenuItem","mr","Button","defaultProps","EmptyState","classes","icon","title","description","button","className","center","withStyles","transform","textAlign","HomeContent","emptyStateIcon","Fab","href","rel","target","buttonIcon","fontSize","spacing","marginTop","marginRight","NotFoundContent","component","Link","to","Router","basename","path","exact","render","AuthProviderList","gutterBottom","onAuthProviderClick","authProviders","main","contrastText","Grid","grid","container","direction","map","key","item","fullWidth","startIcon","marginBottom","constraints","presence","allowEmpty","length","minimum","maximum","email","message","emailAddressConfirmation","equality","attribute","passwordConfirmation","initialState","errors","SignUpDialog","signUp","validate","dialogProps","code","openSnackbar","finally","signInWithAuthProvider","handleKeyPress","altKey","ctrlKey","metaKey","shiftKey","handleExited","handleFirstNameChange","handleLastNameChange","handleUsernameChange","handleEmailAddressChange","handleEmailAddressConfirmationChange","handlePasswordChange","handlePasswordConfirmationChange","Dialog","maxWidth","onKeyPress","onExited","DialogTitle","Hidden","smDown","DialogContent","dialogContent","xs","Divider","divider","orientation","TextField","autoComplete","error","helperText","label","placeholder","required","onChange","mdUp","DialogActions","overflowY","margin","SignInDialog","resetPassword","signIn","xsDown","smUp","profileCompletion","securityRating","showingField","avatarUrl","loadingAvatar","sentVerificationEmail","AccountTab","uploadAvatar","changeAvatar","calculateProfileCompletion","removeAvatar","URL","revokeObjectURL","callback","emailVerified","forEach","field","Math","floor","calculateSecurityRating","metadata","creationTime","moment","toDate","diff","showField","fieldId","hideFields","changeFirstName","changeLastName","changeUsername","changeEmailAddress","verifyEmailAddress","deleteAccount","changeField","handleKeyDown","handleAvatarChange","files","createObjectURL","root","mb","alignItems","Badge","badge","badgeContent","Tooltip","sizeSmall","small","loadingBadge","Fade","style","transitionDelay","in","unmountOnExit","thickness","nameInitials","hidden","accept","htmlFor","List","disablePadding","ListItem","ListItemIcon","autoFocus","onBlur","onKeyDown","ListItemText","ListItemSecondaryAction","clone","lastSignInTime","format","mt","paddingTop","right","marginLeft","width","height","cursor","minHeight","AppearanceTab","handlePrimaryColorChange","handleSecondaryColorChange","handleTypeChange","handleResetClick","FormControl","InputLabel","Select","native","Object","keys","ConnectionsTab","linkAuthProvider","unlinkAuthProvider","authProviderData","identifier","phoneNumber","SecurityTab","changePassword","tabs","SettingsDialog","handleTabChange","selectedTab","handleIndexChange","index","disableTypography","closeButton","Tabs","overflow","indicatorColor","textColor","tab","Tab","scrollButtons","onChangeIndex","display","AlertDialog","contentText","dismissiveAction","confirmingAction","acknowledgementAction","console","noTitlePadding","DialogContentText","DialogHost","dialogs","signUpDialog","signInDialog","settingsDialog","signOutDialog","fullScreen","App","openDialog","dialogId","dialog","undefined","closeDialog","autoHideDuration","snackbar","readingTime","time","closeSnackbar","clearMessage","ready","CssBaseline","disableEscapeKeyDown","Snackbar","mounted","removeAuthStateChangedObserver","onAuthStateChanged","removeReferenceListener","onSnapshot","snapshot","exists","data","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","document","getElementById","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8e38885d.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\n\nimport 'firebase/analytics';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/performance';\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n});\n\nexport default firebase;\nexport const analytics = firebase.analytics();\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\nexport const performance = firebase.performance();\n","import _ from 'lodash';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nimport { analytics, auth, firestore } from '../firebase';\n\nconst colors = {\n  red: {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n\n  pink: {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n\n  purple: {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n\n  deepPurple: {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n\n  indigo: {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n\n  blue: {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n\n  lightBlue: {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n\n  cyan: {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n\n  teal: {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n\n  green: {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n\n  lightGreen: {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n\n  lime: {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n\n  yellow: {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n\n  amber: {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n\n  orange: {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n\n  deepOrange: {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n\n  brown: {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n\n  gray: {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n\n  blueGray: {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n};\n\nconst types = {\n  light: {\n    id: 'light',\n    name: 'Light'\n  },\n\n  dark: {\n    id: 'dark',\n    name: 'Dark'\n  }\n};\n\nconst getColor = (colorId) => {\n  if (!colorId) {\n    return null;\n  }\n\n  colorId = _.camelCase(colorId);\n\n  return colors[colorId];\n};\n\nconst getType = (typeId) => {\n  if (!typeId) {\n    return null;\n  }\n\n  return types[typeId];\n};\n\nconst defaultPrimaryColor = getColor(process.env.REACT_APP_THEME_PRIMARY_COLOR);\nconst defaultSecondaryColor = getColor(process.env.REACT_APP_THEME_SECONDARY_COLOR);\nconst defaultType = getType(process.env.REACT_APP_THEME_TYPE);\n\nconst defaultTheme = createMuiTheme({\n  palette: {\n    primary: defaultPrimaryColor.import,\n    secondary: defaultSecondaryColor.import,\n    type: defaultType.id\n  },\n\n  primaryColor: defaultPrimaryColor,\n  secondaryColor: defaultSecondaryColor,\n  type: defaultType\n});\n\nconst theming = {};\n\ntheming.colors = colors;\ntheming.types = types;\n\ntheming.defaultPrimaryColor = defaultPrimaryColor;\ntheming.defaultSecondaryColor = defaultSecondaryColor;\ntheming.defaultType = defaultType;\n\ntheming.defaultTheme = defaultTheme;\n\n/**\n * Returns whether a theme is the default theme.\n * @param theme\n * @returns {boolean}\n */\ntheming.isDefaultTheme = (theme) => {\n  if (!theme) {\n    return;\n  }\n\n  if (theme.primaryColor.id === defaultPrimaryColor.id &&\n      theme.secondaryColor.id === defaultSecondaryColor.id &&\n      theme.type.id === defaultType.id) {\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Creates a Material-UI theme from a JSON theme object.\n * @param theme\n * @returns {null|Theme}\n */\ntheming.createTheme = (theme) => {\n  if (!theme) {\n    return null;\n  }\n\n  let primaryColor = theme.primaryColor;\n  let secondaryColor = theme.secondaryColor;\n  let type = theme.type;\n\n  if (!primaryColor || !secondaryColor || !type) {\n    return null;\n  }\n\n  primaryColor = getColor(primaryColor);\n  secondaryColor = getColor(secondaryColor);\n  type = getType(type);\n\n  if (!primaryColor || !secondaryColor || !type) {\n    return null;\n  }\n\n  theme = createMuiTheme({\n    palette: {\n      primary: primaryColor.import,\n      secondary: secondaryColor.import,\n      type: type.id\n    },\n\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor,\n    type: type\n  });\n\n  return theme;\n};\n\n/**\n * Changes the theme for the current user.\n * @param theme\n * @returns {Promise<unknown>}\n */\ntheming.changeTheme = (theme) => {\n  return new Promise((resolve, reject) => {\n    if (!theme) {\n      reject();\n\n      return;\n    }\n\n    let primaryColor = theme.primaryColor;\n    let secondaryColor = theme.secondaryColor;\n    let type = theme.type;\n\n    if (!primaryColor || !secondaryColor || !type) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n    secondaryColor = getColor(secondaryColor);\n    type = getType(type);\n\n    if (!primaryColor || !secondaryColor || !type) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      theme: {\n        primaryColor: primaryColor.id,\n        secondaryColor: secondaryColor.id,\n        type: type.id\n      }\n    }).then((value) => {\n      analytics.logEvent('change_theme', {\n        value: {\n          primaryColor: primaryColor.id,\n          secondaryColor: secondaryColor.id,\n          type: type.id\n        }\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Changes the primary color for the current user.\n * @param primaryColor\n * @returns {Promise<unknown>}\n */\ntheming.changePrimaryColor = (primaryColor) => {\n  return new Promise((resolve, reject) => {\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      'theme.primaryColor': primaryColor.id\n    }).then((value) => {\n      analytics.logEvent('change_primary_color', {\n        value: primaryColor.id\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Changes the secondary color for the current user.\n * @param secondaryColor\n * @returns {Promise<unknown>}\n */\ntheming.changeSecondaryColor = (secondaryColor) => {\n  return new Promise((resolve, reject) => {\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    secondaryColor = getColor(secondaryColor);\n\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      'theme.secondaryColor': secondaryColor.id\n    }).then((value) => {\n      analytics.logEvent('change_secondary_color', {\n        value: secondaryColor.id\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Changes the type for the current user.\n * @param type\n * @returns {Promise<unknown>}\n */\ntheming.changeType = (type) => {\n  return new Promise((resolve, reject) => {\n    if (!type) {\n      reject();\n\n      return;\n    }\n\n    type = getType(type);\n\n    if (!type) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      'theme.type': type.id\n    }).then((value) => {\n      analytics.logEvent('change_type', {\n        value: type.id\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Resets the theme for the current user.\n * @returns {Promise<unknown>}\n */\ntheming.resetTheme = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      theme: {\n        primaryColor: defaultPrimaryColor.id,\n        secondaryColor: defaultSecondaryColor.id,\n        type: defaultType.id\n      }\n    }).then((value) => {\n      analytics.logEvent('reset_theme');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nexport default theming;\n","import firebase, { analytics, auth, firestore, storage } from '../firebase';\nimport theming from './theming';\n\nconst avatarFileTypes = [\n  'image/gif',\n  'image/jpeg',\n  'image/png',\n  'image/webp',\n  'image/svg+xml'\n];\n\nconst authentication = {};\n\nauthentication.signUp = (fields) => {\n  return new Promise((resolve, reject) => {\n    if (!fields) {\n      reject();\n\n      return;\n    }\n\n    const firstName = fields.firstName;\n    const lastName = fields.lastName;\n    const username = fields.username;\n    const emailAddress = fields.emailAddress;\n    const password = fields.password;\n\n    if (!firstName || !lastName || !username || !emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n      const user = value.user;\n\n      if (!user) {\n        reject();\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        reject();\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.set({\n        firstName: firstName,\n        lastName: lastName,\n        username: username,\n        theme: {\n          primaryColor: theming.defaultPrimaryColor.id,\n          secondaryColor: theming.defaultSecondaryColor.id,\n          type: theming.defaultType.id\n        }\n      }).then((value) => {\n        analytics.logEvent('sign_up', {\n          method: 'password'\n        });\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signIn = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signInWithEmailAndPassword(emailAddress, password).then((value) => {\n      analytics.logEvent('login', {\n        method: 'password'\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signInWithAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signInWithPopup(provider).then((value) => {\n      analytics.logEvent('login', {\n        method: providerId\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.linkAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.linkWithPopup(provider).then((value) => {\n      analytics.logEvent('link_auth_provider', {\n        value: providerId\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.unlinkAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.unlink(providerId).then((value) => {\n      analytics.logEvent('unlink_auth_provider', {\n        value: providerId\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.authProviderData = (providerId) => {\n  if (!providerId) {\n    return;\n  }\n\n  const currentUser = auth.currentUser;\n\n  if (!currentUser) {\n    return;\n  }\n\n  const providerData = currentUser.providerData;\n\n  if (!providerData) {\n    return;\n  }\n\n  return providerData.find(authProvider => authProvider.providerId === providerId);\n};\n\nauthentication.signOut = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signOut().then((value) => {\n      analytics.logEvent('sign_out');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.resetPassword = (emailAddress) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.sendPasswordResetEmail(emailAddress).then((value) => {\n      analytics.logEvent('reset_password');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeAvatar = (avatar) => {\n  return new Promise((resolve, reject) => {\n    if (!avatar) {\n      reject();\n\n      return;\n    }\n\n    if (!avatarFileTypes.includes(avatar.type)) {\n      reject();\n\n      return;\n    }\n\n    if (avatar.size > (20 * 1024 * 1024)) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = storage.ref().child('images').child('avatars').child(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.put(avatar).then((uploadTaskSnapshot) => {\n      reference.getDownloadURL().then((value) => {\n        currentUser.updateProfile({\n          photoURL: value\n        }).then((value) => {\n          analytics.logEvent('change_avatar');\n\n          resolve(value);\n        }).catch((reason) => {\n          reject(reason);\n        });\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.removeAvatar = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updateProfile({\n      photoURL: null\n    }).then((value) => {\n      const reference = storage.ref().child('images').child('avatars').child(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.delete().then((value) => {\n        analytics.logEvent('remove_avatar');\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeFirstName = (firstName) => {\n  return new Promise((resolve, reject) => {\n    if (!firstName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      firstName: firstName\n    }).then((value) => {\n      analytics.logEvent('change_first_name');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeLastName = (lastName) => {\n  return new Promise((resolve, reject) => {\n    if (!lastName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      lastName: lastName\n    }).then((value) => {\n      analytics.logEvent('change_last_name');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeUsername = (username) => {\n  return new Promise((resolve, reject) => {\n    if (!username) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      username: username\n    }).then((value) => {\n      analytics.logEvent('change_username');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeEmailAddress = (emailAddress) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updateEmail(emailAddress).then((value) => {\n      analytics.logEvent('change_email_address');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changePassword = (password) => {\n  return new Promise((resolve, reject) => {\n    if (!password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updatePassword(password).then((value) => {\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.update({\n        lastPasswordChange: firebase.firestore.FieldValue.serverTimestamp()\n      }).then((value) => {\n        analytics.logEvent('change_password');\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.verifyEmailAddress = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.sendEmailVerification().then((value) => {\n      analytics.logEvent('verify_email_address');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.deleteAccount = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.delete().then((value) => {\n      analytics.logEvent('delete_account');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nexport default authentication;\n","import React, {Component} from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass LaunchScreen extends Component {\n  render() {\n    return (\n      <Box position=\"absolute\" top=\"50%\" left=\"50%\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n}\n\nLaunchScreen.propTypes = {};\n\nexport default LaunchScreen;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  getNameInitials = () => {\n    const { user, userData } = this.props;\n\n    const firstName = userData.firstName;\n    const lastName = userData.lastName;\n    const username = userData.username;\n    const displayName = user.displayName;\n\n    if (firstName && lastName) {\n      return firstName.charAt(0) + lastName.charAt(0);\n    } else if (firstName) {\n      return firstName.charAt(0)\n    } else if (lastName) {\n      return lastName.charAt(0);\n    } else if (username) {\n      return username.charAt(0);\n    } else if (displayName) {\n      return displayName.charAt(0);\n    } else {\n      return 'NN';\n    }\n  };\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Properties\n    const { performingAction, signedIn, user } = this.props;\n\n    // Events\n    const { onSignUpClick, onSignInClick } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Box flexGrow={1}>\n            <Typography color=\"inherit\" variant=\"h6\">{process.env.REACT_APP_NAME}</Typography>\n          </Box>\n\n          {signedIn &&\n            <>\n              <IconButton color=\"inherit\" disabled={performingAction} onClick={this.openMenu}>\n                {user.photoURL &&\n                  <Avatar alt=\"Avatar\" src={user.photoURL} />\n                }\n\n                {!user.photoURL &&\n                  <Avatar alt=\"Avatar\">\n                    {this.getNameInitials()}\n                  </Avatar>\n                }\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem disabled={performingAction} onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem disabled={performingAction} onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </>\n          }\n\n          {!signedIn &&\n            <>\n              <Box mr={1}>\n                <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              </Box>\n\n              <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.defaultProps = {\n  performingAction: false,\n  signedIn: false\n};\n\nBar.propTypes = {\n  // Properties\n  performingAction: PropTypes.bool.isRequired,\n  signedIn: PropTypes.bool.isRequired,\n  user: PropTypes.object,\n  userData: PropTypes.object,\n\n  // Events\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default Bar;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n};\n\nclass EmptyState extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { icon, title, description, button } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon}\n        {title && <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>}\n        {description && <Typography color=\"textSecondary\" variant=\"subtitle1\">{description}</Typography>}\n        {button}\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  button: PropTypes.element\n};\n\nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nimport EmptyState from '../EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: theme.spacing(12)\n  },\n\n  button: {\n    marginTop: theme.spacing(1)\n  },\n\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass HomeContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { signedIn } = this.props;\n\n    if (signedIn) {\n      return (\n        <EmptyState\n          icon={<HomeIcon className={classes.emptyStateIcon} color=\"action\" />}\n          title=\"Home\"\n        />\n      );\n    }\n\n    return (\n      <EmptyState\n        title={process.env.REACT_APP_NAME}\n        description=\"The three musketeers, all in one pack in the form of a boilerplate app\"\n        button={\n          <Fab className={classes.button} color=\"secondary\" href=\"https://github.com/Phoqe/react-material-ui-firebase\" rel=\"noopener noreferrer\" target=\"_blank\" variant=\"extended\">\n            <GitHubCircleIcon className={classes.buttonIcon} />\n            GitHub\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nHomeContent.defaultProps = {\n  signedIn: false\n};\n\nHomeContent.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  signedIn: PropTypes.bool.isRequired\n};\n\nexport default withStyles(styles)(HomeContent);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport FindIcon from '@material-ui/icons/FindInPage';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: theme.spacing(12)\n  },\n\n  button: {\n    marginTop: theme.spacing(1)\n  },\n\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass NotFoundContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<FindIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Content Not Found\"\n        description=\"The requested URL was not found on this server\"\n        button={\n          <Fab className={classes.button} color=\"secondary\" component={Link} to=\"/\" variant=\"extended\">\n            <HomeIcon className={classes.buttonIcon} /> Go Home\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nNotFoundContent.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NotFoundContent);\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types';\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport HomeContent from '../HomeContent';\nimport NotFoundContent from '../NotFoundContent';\n\nclass Router extends Component {\n  render() {\n    // Properties\n    const { signedIn } = this.props;\n\n    return (\n      <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\n        <Switch>\n          <Route path=\"/\" exact render={() => (<HomeContent signedIn={signedIn} />)} />\n          <Route component={NotFoundContent} />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nRouter.defaultProps = {\n  signedIn: false\n};\n\nRouter.propTypes = {\n  // Properties\n  signedIn: PropTypes.bool.isRequired\n};\n\nexport default Router;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { createMuiTheme, withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport MicrosoftIcon from 'mdi-material-ui/Microsoft';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport YahooIcon from 'mdi-material-ui/Yahoo';\n\nconst styles = (theme) => ({\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nclass AuthProviderList extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { gutterBottom, performingAction } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    const authProviders = [\n      {\n        providerId: 'facebook.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#3c5a99',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <FacebookBoxIcon />,\n        name: 'Facebook'\n      },\n      {\n        providerId: 'github.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#24292e',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <GitHubCircleIcon />,\n        name: 'GitHub'\n      },\n      {\n        providerId: 'google.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#4285f4',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <GoogleIcon />,\n        name: 'Google'\n      },\n      {\n        providerId: 'microsoft.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#f65314',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <MicrosoftIcon />,\n        name: 'Microsoft'\n      },\n      {\n        providerId: 'twitter.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#1da1f2',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <TwitterIcon />,\n        name: 'Twitter'\n      },\n      {\n        providerId: 'yahoo.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#410093',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <YahooIcon />,\n        name: 'Yahoo'\n      }\n    ];\n\n    if (gutterBottom) {\n      return (\n        <Grid className={classes.grid} container direction=\"column\" spacing={1}>\n          {authProviders.map((authProvider) => {\n            return (\n              <Grid key={authProvider.providerId} item>\n                <MuiThemeProvider theme={authProvider.theme}>\n                  <Button\n                    color=\"primary\"\n                    disabled={performingAction}\n                    fullWidth\n                    startIcon={authProvider.icon}\n                    variant=\"contained\"\n                    onClick={() => onAuthProviderClick(authProvider.providerId)}>\n                    {authProvider.name}\n                  </Button>\n                </MuiThemeProvider>\n              </Grid>\n            );\n          })}\n        </Grid>\n      );\n    }\n\n    return (\n      <Grid container direction=\"column\" spacing={1}>\n        {authProviders.map((authProvider) => {\n          return (\n            <Grid key={authProvider.providerId} item>\n              <MuiThemeProvider theme={authProvider.theme}>\n                <Button\n                  color=\"primary\"\n                  disabled={performingAction}\n                  fullWidth\n                  startIcon={authProvider.icon}\n                  variant=\"contained\"\n                  onClick={() => onAuthProviderClick(authProvider.providerId)}>\n                  {authProvider.name}\n                </Button>\n              </MuiThemeProvider>\n            </Grid>\n          );\n        })}\n      </Grid>\n    );\n  }\n}\n\nAuthProviderList.defaultProps = {\n  gutterBottom: false,\n  performingAction: false\n};\n\nAuthProviderList.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  gutterBottom: PropTypes.bool,\n  performingAction: PropTypes.bool,\n\n  // Events\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AuthProviderList);\n","const constraints = {\n  firstName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  lastName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  username: {\n    length: {\n      minimum: 2,\n      maximum: 20\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  emailAddress: {\n    email: {\n      message: '^E-mail address is invalid'\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  emailAddressConfirmation: {\n    email: {\n      message: '^E-mail address confirmation is invalid'\n    },\n\n    equality: {\n      attribute: 'emailAddress',\n      message: '^E-mail address confirmation is not equal to e-mail address'\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  password: {\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  passwordConfirmation: {\n    equality: 'password',\n\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n};\n\nexport default constraints;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthProviderList from '../AuthProviderList';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = (theme) => ({\n  dialogContent: {\n    overflowY: 'hidden'\n  },\n\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: 'auto'\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n\n  firstName: '',\n  lastName: '',\n  username: '',\n  emailAddress: '',\n  emailAddressConfirmation: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const {\n      firstName,\n      lastName,\n      username,\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    const errors = validate({\n      firstName: firstName,\n      lastName: lastName,\n      username: username,\n      emailAddress: emailAddress,\n      emailAddressConfirmation: emailAddressConfirmation,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }, {\n      firstName: constraints.firstName,\n      lastName: constraints.lastName,\n      username: constraints.username,\n      emailAddress: constraints.emailAddress,\n      emailAddressConfirmation: constraints.emailAddressConfirmation,\n      password: constraints.password,\n      passwordConfirmation: constraints.passwordConfirmation\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState({\n        performingAction: true,\n\n        errors: null\n      }, () => {\n        authentication.signUp({\n          firstName: firstName,\n          lastName: lastName,\n          username: username,\n          emailAddress: emailAddress,\n          password: password\n        }).then((value) => {\n          this.props.dialogProps.onClose();\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            case 'auth/email-already-in-use':\n            case 'auth/invalid-email':\n            case 'auth/operation-not-allowed':\n            case 'auth/weak-password':\n              this.props.openSnackbar(message);\n              return;\n\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    }\n  };\n\n  signInWithAuthProvider = (providerId) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.signInWithAuthProvider(providerId).then((value) => {\n        this.props.dialogProps.onClose(() => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.props.openSnackbar(message);\n            return;\n\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleKeyPress = (event) => {\n    const {\n      firstName,\n      lastName,\n      username,\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    if (!firstName ||\n      !lastName ||\n      !username ||\n      !emailAddress ||\n      !emailAddressConfirmation ||\n      !password ||\n      !passwordConfirmation) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleFirstNameChange = (event) => {\n    const firstName = event.target.value;\n\n    this.setState({\n      firstName: firstName\n    });\n  };\n\n  handleLastNameChange = (event) => {\n    const lastName = event.target.value;\n\n    this.setState({\n      lastName: lastName\n    });\n  };\n\n  handleUsernameChange = (event) => {\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handleEmailAddressConfirmationChange = (event) => {\n    const emailAddressConfirmation = event.target.value;\n\n    this.setState({\n      emailAddressConfirmation: emailAddressConfirmation\n    });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const {\n      performingAction,\n\n      firstName,\n      lastName,\n      username,\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation,\n\n      errors\n    } = this.state;\n\n    return (\n      <Dialog fullWidth maxWidth=\"md\" {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <Hidden smDown>\n          <DialogContent className={classes.dialogContent}>\n            <Grid container direction=\"row\">\n              <Grid item xs={3}>\n                <AuthProviderList\n                  performingAction={performingAction}\n\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={8}>\n                <Grid container spacing={4}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"given-name\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.firstName)}\n                      fullWidth\n                      helperText={(errors && errors.firstName) ? errors.firstName[0] : ''}\n                      label=\"First name\"\n                      placeholder=\"John\"\n                      required\n                      type=\"text\"\n                      value={firstName}\n                      variant=\"outlined\"\n\n                      onChange={this.handleFirstNameChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"family-name\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.lastName)}\n                      fullWidth\n                      helperText={(errors && errors.lastName) ? errors.lastName[0] : ''}\n                      label=\"Last name\"\n                      placeholder=\"Doe\"\n                      required\n                      type=\"text\"\n                      value={lastName}\n                      variant=\"outlined\"\n\n                      onChange={this.handleLastNameChange}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={4}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"username\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.username)}\n                      fullWidth\n                      helperText={(errors && errors.username) ? errors.username[0] : ''}\n                      label=\"Username\"\n                      placeholder=\"John\"\n                      required\n                      type=\"text\"\n                      value={username}\n                      variant=\"outlined\"\n\n                      onChange={this.handleUsernameChange}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={4}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddressConfirmation)}\n                      fullWidth\n                      helperText={(errors && errors.emailAddressConfirmation) ? errors.emailAddressConfirmation[0] : ''}\n                      label=\"E-mail address confirmation\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddressConfirmation}\n                      variant=\"outlined\"\n\n                      onChange={this.handleEmailAddressConfirmationChange}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={4}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"new-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={(errors && errors.password) ? errors.password[0] : ''}\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.passwordConfirmation)}\n                      fullWidth\n                      helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n                      label=\"Password confirmation\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={passwordConfirmation}\n                      variant=\"outlined\"\n\n                      onChange={this.handlePasswordConfirmationChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <Hidden mdUp>\n          <DialogContent>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"given-name\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.firstName)}\n                  fullWidth\n                  helperText={(errors && errors.firstName) ? errors.firstName[0] : ''}\n                  label=\"First name\"\n                  placeholder=\"John\"\n                  required\n                  type=\"text\"\n                  value={firstName}\n                  variant=\"outlined\"\n\n                  onChange={this.handleFirstNameChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"family-name\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.lastName)}\n                  fullWidth\n                  helperText={(errors && errors.lastName) ? errors.lastName[0] : ''}\n                  label=\"Last name\"\n                  placeholder=\"Doe\"\n                  required\n                  type=\"text\"\n                  value={lastName}\n                  variant=\"outlined\"\n\n                  onChange={this.handleLastNameChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"username\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.username)}\n                  fullWidth\n                  helperText={(errors && errors.username) ? errors.username[0] : ''}\n                  label=\"Username\"\n                  placeholder=\"John\"\n                  required\n                  type=\"text\"\n                  value={username}\n                  variant=\"outlined\"\n\n                  onChange={this.handleUsernameChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddressConfirmation)}\n                  fullWidth\n                  helperText={(errors && errors.emailAddressConfirmation) ? errors.emailAddressConfirmation[0] : ''}\n                  label=\"E-mail address confirmation\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddressConfirmation}\n                  variant=\"outlined\"\n\n                  onChange={this.handleEmailAddressConfirmationChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"new-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={(errors && errors.password) ? errors.password[0] : ''}\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.passwordConfirmation)}\n                  fullWidth\n                  helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n                  label=\"Password confirmation\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={passwordConfirmation}\n                  variant=\"outlined\"\n\n                  onChange={this.handlePasswordConfirmationChange}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={dialogProps.onClose}>Cancel</Button>\n\n          <Button\n            color=\"primary\"\n            disabled={\n              !firstName ||\n              !lastName ||\n              !username ||\n              !emailAddress ||\n              !emailAddressConfirmation ||\n              !password ||\n              !passwordConfirmation ||\n              performingAction\n            }\n            variant=\"contained\"\n\n            onClick={this.signUp}>\n            Sign up\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignUpDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthProviderList from '../AuthProviderList';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = (theme) => ({\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: 'auto'\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.setState({\n          performingAction: true\n        }, () => {\n          authentication.resetPassword(emailAddress).then((value) => {\n            this.props.openSnackbar(`Sent password reset e-mail to ${emailAddress}`);\n          }).catch((reason) => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              case 'auth/invalid-email':\n              case 'auth/missing-android-pkg-name':\n              case 'auth/missing-continue-uri':\n              case 'auth/missing-ios-bundle-id':\n              case 'auth/invalid-continue-uri':\n              case 'auth/unauthorized-continue-uri':\n              case 'auth/user-not-found':\n                this.props.openSnackbar(message);\n                return;\n\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          }).finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n        });\n      });\n    }\n  };\n\n  signIn = () => {\n    const { emailAddress, password } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress,\n      password: password\n    }, {\n      emailAddress: constraints.emailAddress,\n      password: constraints.password\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState({\n        performingAction: true,\n\n        errors: null\n      }, () => {\n        authentication.signIn(emailAddress, password).then((value) => {\n          this.props.dialogProps.onClose(() => {\n            const user = value.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            case 'auth/invalid-email':\n            case 'auth/user-disabled':\n            case 'auth/user-not-found':\n            case 'auth/wrong-password':\n              this.props.openSnackbar(message);\n              return;\n\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    }\n  };\n\n  signInWithAuthProvider = (providerId) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.signInWithAuthProvider(providerId).then((value) => {\n        this.props.dialogProps.onClose(() => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.props.openSnackbar(message);\n            return;\n\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleKeyPress = (event) => {\n    const { emailAddress, password } = this.state;\n\n    if (!emailAddress || !password) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const {\n      performingAction,\n\n      emailAddress,\n      password,\n\n      errors\n    } = this.state;\n\n    return (\n      <Dialog fullWidth maxWidth=\"sm\" {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <Hidden xsDown>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <AuthProviderList\n                  performingAction={performingAction}\n\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={7}>\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"current-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={(errors && errors.password) ? errors.password[0] : ''}\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"current-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={(errors && errors.password) ? errors.password[0] : ''}\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n            </Grid>\n          </Hidden>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={dialogProps.onClose}>Cancel</Button>\n\n          <Button\n            color=\"primary\"\n            disabled={!emailAddress || performingAction}\n            variant=\"outlined\"\n\n            onClick={this.resetPassword}>\n            Reset password\n          </Button>\n\n          <Button\n            color=\"primary\"\n            disabled={(!emailAddress || !password) || performingAction}\n            variant=\"contained\"\n\n            onClick={this.signIn}>\n            Sign in\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignInDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport Avatar from '@material-ui/core/Avatar';\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = (theme) => ({\n  dialogContent: {\n    paddingTop: theme.spacing(2)\n  },\n\n  badge: {\n    top: theme.spacing(2),\n    right: -theme.spacing(2)\n  },\n\n  loadingBadge: {\n    top: '50%',\n    right: '50%'\n  },\n\n  avatar: {\n    marginRight: 'auto',\n    marginLeft: 'auto',\n\n    width: theme.spacing(14),\n    height: theme.spacing(14)\n  },\n\n  nameInitials: {\n    cursor: 'default'\n  },\n\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n\n    minHeight: 'initial'\n  }\n});\n\nconst initialState = {\n  profileCompletion: 0,\n  securityRating: 0,\n\n  showingField: '',\n\n  avatar: null,\n  avatarUrl: '',\n  firstName: '',\n  lastName: '',\n  username: '',\n  emailAddress: '',\n\n  performingAction: false,\n  loadingAvatar: false,\n  sentVerificationEmail: false,\n\n  errors: null\n};\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  getNameInitials = () => {\n    const { user, userData } = this.props;\n\n    const firstName = userData.firstName;\n    const lastName = userData.lastName;\n    const username = userData.username;\n    const displayName = user.displayName;\n\n    if (firstName && lastName) {\n      return firstName.charAt(0) + lastName.charAt(0);\n    } else if (firstName) {\n      return firstName.charAt(0)\n    } else if (lastName) {\n      return lastName.charAt(0);\n    } else if (username) {\n      return username.charAt(0);\n    } else if (displayName) {\n      return displayName.charAt(0);\n    } else {\n      return 'NN';\n    }\n  };\n\n  uploadAvatar = () => {\n    const { avatar } = this.state;\n\n    if (!avatar) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true,\n      loadingAvatar: true\n    }, () => {\n      authentication.changeAvatar(avatar).then((value) => {\n        this.calculateProfileCompletion(() => {\n          this.props.openSnackbar('Changed avatar');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false,\n          loadingAvatar: false,\n\n          avatar: null,\n          avatarUrl: ''\n        });\n      });\n    });\n  };\n\n  removeAvatar = () => {\n    const { user } = this.props;\n    const { avatar, avatarUrl } = this.state;\n\n    if (!user.photoURL && !avatar && !avatarUrl) {\n      return;\n    }\n\n    if ((!user.photoURL && avatar && avatarUrl) || (user.photoURL && avatar && avatarUrl)) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatar: null,\n        avatarUrl: ''\n      }, () => {\n        this.props.openSnackbar(`Removed image “${avatar.name}”`, 5);\n      });\n    } else if (user.photoURL && !avatar && !avatarUrl) {\n      this.setState({\n        performingAction: true,\n        loadingAvatar: true\n      }, () => {\n        authentication.removeAvatar().then((value) => {\n          this.calculateProfileCompletion(() => {\n            this.props.openSnackbar('Removed avatar');\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false,\n            loadingAvatar: false\n          });\n        });\n      });\n    }\n  };\n\n  calculateProfileCompletion = (callback) => {\n    const { user, userData } = this.props;\n\n    if (!user || !userData) {\n      return;\n    }\n\n    let profileCompletion = 0;\n\n    const fields = [\n      user.photoURL,\n      userData.firstName,\n      userData.lastName,\n      userData.username,\n      user.email,\n      user.email && user.emailVerified\n    ];\n\n    fields.forEach((field) => {\n      if (field) {\n        profileCompletion += 100 / fields.length;\n      }\n    });\n\n    this.setState({\n      profileCompletion: Math.floor(profileCompletion)\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  calculateSecurityRating = (callback) => {\n    const { user, userData } = this.props;\n\n    if (!user || !user.metadata || !userData) {\n      return;\n    }\n\n    let creationTime = user.metadata.creationTime;\n\n    if (!creationTime) {\n      return;\n    }\n\n    creationTime = moment(creationTime);\n\n    let lastPasswordChange = userData.lastPasswordChange;\n    let securityRating = 0;\n\n    if (lastPasswordChange) {\n      lastPasswordChange = moment(lastPasswordChange.toDate());\n\n      if (creationTime.diff(lastPasswordChange, 'days') >= 365.242199) {\n        securityRating = 50;\n      } else {\n        securityRating = 100;\n      }\n    } else {\n      if (moment().diff(creationTime, 'days') >= 365.242199) {\n        securityRating = 50;\n      } else {\n        securityRating = 100;\n      }\n    }\n\n    this.setState({\n      securityRating: securityRating\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showField = (fieldId) => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = (callback) => {\n    this.setState({\n      showingField: '',\n\n      firstName: '',\n      lastName: '',\n      username: '',\n      emailAddress: '',\n\n      errors: null\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  changeFirstName = () => {\n    const { firstName } = this.state;\n\n    const errors = validate({\n      firstName: firstName\n    }, {\n      firstName: constraints.firstName\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (firstName === userData.firstName) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeFirstName(firstName).then(() => {\n          this.calculateProfileCompletion(() => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed first name');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeLastName = () => {\n    const { lastName } = this.state;\n\n    const errors = validate({\n      lastName: lastName\n    }, {\n      lastName: constraints.lastName\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (lastName === userData.lastName) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeLastName(lastName).then(() => {\n          this.calculateProfileCompletion(() => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed last name');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeUsername = () => {\n    const { username } = this.state;\n\n    const errors = validate({\n      username: username\n    }, {\n      username: constraints.username\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (username === userData.username) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeUsername(username).then(() => {\n          this.calculateProfileCompletion(() => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed username');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeEmailAddress = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { user } = this.props;\n\n      if (emailAddress === user.email) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeEmailAddress(emailAddress).then(() => {\n          this.calculateProfileCompletion(() => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed e-mail address');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.verifyEmailAddress().then(() => {\n        this.setState({\n          sentVerificationEmail: true\n        }, () => {\n          this.props.openSnackbar('Sent verification e-mail');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  deleteAccount = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.deleteAccount().then(() => {\n        this.props.openSnackbar('Deleted account');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  changeField = (fieldId) => {\n    switch (fieldId) {\n      case 'first-name':\n        this.changeFirstName();\n        return;\n\n      case 'last-name':\n        this.changeLastName();\n        return;\n\n      case 'username':\n        this.changeUsername();\n        return;\n\n      case 'email-address':\n        this.changeEmailAddress();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === 'Escape') {\n      this.hideFields();\n    } else if (key === 'Enter') {\n      this.changeField(fieldId);\n    }\n  };\n\n  handleAvatarChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const files = event.target.files;\n\n    if (!files) {\n      return;\n    }\n\n    const avatar = files[0];\n\n    if (!avatar) {\n      return;\n    }\n\n    const fileTypes = [\n      'image/gif',\n      'image/jpeg',\n      'image/png',\n      'image/webp',\n      'image/svg+xml'\n    ];\n\n    if (!fileTypes.includes(avatar.type)) {\n      return;\n    }\n\n    if (avatar.size > (20 * 1024 * 1024)) {\n      return;\n    }\n\n    this.setState({\n      avatar: avatar,\n      avatarUrl: URL.createObjectURL(avatar)\n    }, () => {\n      this.props.openSnackbar(`Selected image “${avatar.name}”`, 5);\n    });\n  };\n\n  handleFirstNameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const firstName = event.target.value;\n\n    this.setState({\n      firstName: firstName\n    });\n  };\n\n  handleLastNameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const lastName = event.target.value;\n\n    this.setState({\n      lastName: lastName\n    });\n  };\n\n  handleUsernameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  handleEmailAddressChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const {\n      user,\n      userData\n    } = this.props;\n\n    const {\n      profileCompletion,\n      securityRating,\n\n      showingField,\n\n      performingAction,\n      loadingAvatar,\n\n      avatar,\n      avatarUrl,\n      firstName,\n      lastName,\n      username,\n      emailAddress,\n\n      sentVerificationEmail,\n\n      errors\n    } = this.state;\n\n    return (\n      <DialogContent classes={{ root: classes.dialogContent }}>\n        <Box mb={2}>\n          <Hidden xsDown>\n            <Grid alignItems=\"center\" container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Box mb={1.5}>\n                    {(avatar && avatarUrl) &&\n                      <Badge classes={{ badge: classes.badge }} badgeContent={\n                        <Tooltip title=\"Remove\">\n                          <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                            <CloseIcon fontSize=\"small\" />\n                          </Fab>\n                        </Tooltip>\n                      }>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <Fade\n                              style={{ transitionDelay: '1s' }}\n                              in={loadingAvatar}\n                              unmountOnExit>\n                              <CircularProgress size={120} thickness={1.8} />\n                            </Fade>\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                        }\n                      </Badge>\n                    }\n\n                    {(!avatar && !avatarUrl) &&\n                      <>\n                        {user.photoURL &&\n                          <Badge classes={{ badge: classes.badge }} badgeContent={\n                            <Tooltip title=\"Remove\">\n                              <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                                <CloseIcon fontSize=\"small\" />\n                              </Fab>\n                            </Tooltip>\n                          }>\n                            {loadingAvatar &&\n                              <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                                <Fade\n                                  style={{ transitionDelay: '1s' }}\n                                  in={loadingAvatar}\n                                  unmountOnExit>\n                                  <CircularProgress size={120} thickness={1.8} />\n                                </Fade>\n                              }>\n                                <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                              </Badge>\n                            }\n\n                            {!loadingAvatar &&\n                              <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                            }\n                          </Badge>\n                        }\n\n                        {!user.photoURL &&\n                          <>\n                            {loadingAvatar &&\n                              <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                                <Fade\n                                  style={{ transitionDelay: '1s' }}\n                                  in={loadingAvatar}\n                                  unmountOnExit>\n                                  <CircularProgress size={120} thickness={1.8} />\n                                </Fade>\n                              }>\n                                <Avatar className={classes.avatar} alt=\"Avatar\">\n                                  <Typography className={classes.nameInitials} variant=\"h2\">{this.getNameInitials()}</Typography>\n                                </Avatar>\n                              </Badge>\n                            }\n\n                            {!loadingAvatar &&\n                              <Avatar className={classes.avatar} alt=\"Avatar\">\n                                <Typography className={classes.nameInitials} variant=\"h2\">{this.getNameInitials()}</Typography>\n                              </Avatar>\n                            }\n                          </>\n                        }\n                      </>\n                    }\n                  </Box>\n\n                  {(avatar && avatarUrl) &&\n                    <Button color=\"primary\" disabled={performingAction} startIcon={<CloudUploadIcon />} variant=\"contained\" onClick={this.uploadAvatar}>\n                      Upload\n                    </Button>\n                  }\n\n                  {(!avatar && !avatarUrl) &&\n                    <>\n                      <input\n                        id=\"avatar-input\"\n                        type=\"file\"\n                        hidden\n                        accept=\"image/*\"\n\n                        onChange={this.handleAvatarChange}\n                      />\n\n                      <label htmlFor=\"avatar-input\">\n                        <Button color=\"primary\" component=\"span\" disabled={performingAction} startIcon={<PhotoIcon />} variant=\"contained\">\n                          Choose...\n                        </Button>\n                      </label>\n                    </>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile Completion</Typography>\n\n                  {profileCompletion === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {profileCompletion === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {(profileCompletion !== 0 && profileCompletion !== 100)  &&\n                    <Typography color=\"secondary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security Rating</Typography>\n\n                  {securityRating === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {securityRating === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {(securityRating !== 0 && securityRating !== 100) &&\n                    <Typography color=\"secondary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <Box textAlign=\"center\" mb={3}>\n              <Box mb={1.5}>\n                {(avatar && avatarUrl) &&\n                  <Badge classes={{ badge: classes.badge }} badgeContent={\n                    <Tooltip title=\"Remove\">\n                      <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                        <CloseIcon fontSize=\"small\" />\n                      </Fab>\n                    </Tooltip>\n                  }>\n                    {loadingAvatar &&\n                      <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                        <Fade\n                          style={{ transitionDelay: '1s' }}\n                          in={loadingAvatar}\n                          unmountOnExit>\n                          <CircularProgress size={120} thickness={1.8} />\n                        </Fade>\n                      }>\n                        <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                      </Badge>\n                    }\n\n                    {!loadingAvatar &&\n                      <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                    }\n                  </Badge>\n                }\n\n                {(!avatar && !avatarUrl) &&\n                  <>\n                    {user.photoURL &&\n                      <Badge classes={{ badge: classes.badge }} badgeContent={\n                        <Tooltip title=\"Remove\">\n                          <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                            <CloseIcon fontSize=\"small\" />\n                          </Fab>\n                        </Tooltip>\n                      }>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <CircularProgress size={120} thickness={1.8} />\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                        }\n                      </Badge>\n                    }\n\n                    {!user.photoURL &&\n                      <>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <Fade\n                              style={{ transitionDelay: '1s' }}\n                              in={loadingAvatar}\n                              unmountOnExit>\n                              <CircularProgress size={120} thickness={1.8} />\n                            </Fade>\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\">\n                              <Typography className={classes.nameInitials} variant=\"h2\">{this.getNameInitials()}</Typography>\n                            </Avatar>\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\">\n                            <Typography className={classes.nameInitials} variant=\"h2\">{this.getNameInitials()}</Typography>\n                          </Avatar>\n                        }\n                      </>\n                    }\n                  </>\n                }\n              </Box>\n\n              {(avatar && avatarUrl) &&\n                <Button color=\"primary\" disabled={performingAction} startIcon={<CloudUploadIcon />} variant=\"contained\" onClick={this.uploadAvatar}>\n                  Upload\n                </Button>\n              }\n\n              {(!avatar && !avatarUrl) &&\n                <>\n                  <input\n                    id=\"avatar-input\"\n                    type=\"file\"\n                    hidden\n                    accept=\"image/*\"\n\n                    onChange={this.handleAvatarChange}\n                  />\n\n                  <label htmlFor=\"avatar-input\">\n                    <Button color=\"primary\" component=\"span\" disabled={performingAction} startIcon={<PhotoIcon />} variant=\"contained\">\n                      Choose...\n                    </Button>\n                  </label>\n                </>\n              }\n            </Box>\n\n            <Grid container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile Completion</Typography>\n\n                  {profileCompletion === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {profileCompletion === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {(profileCompletion !== 0 && profileCompletion !== 100)  &&\n                    <Typography color=\"secondary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security Rating</Typography>\n\n                  {securityRating === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {securityRating === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {(securityRating !== 0 && securityRating !== 100) &&\n                    <Typography color=\"secondary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n        </Box>\n\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!userData.firstName &&\n              <ListItemIcon>\n                <Tooltip title=\"No first name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'first-name' &&\n              <TextField\n                autoComplete=\"given-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.firstName)}\n                fullWidth\n                helperText={(errors && errors.firstName) ? errors.firstName[0] : 'Press Enter to change your first name'}\n                label=\"First name\"\n                placeholder={userData.firstName}\n                required\n                type=\"text\"\n                value={firstName}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'first-name')}\n\n                onChange={this.handleFirstNameChange}\n              />\n            }\n\n            {showingField !== 'first-name' &&\n              <>\n                <ListItemText\n                  primary=\"First name\"\n                  secondary={userData.firstName ? userData.firstName : 'You don’t have a first name'}\n                />\n\n                <ListItemSecondaryAction>\n                  {userData.firstName &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('first-name')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!userData.firstName &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('first-name')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!userData.lastName &&\n              <ListItemIcon>\n                <Tooltip title=\"No last name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'last-name' &&\n              <TextField\n                autoComplete=\"family-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.lastName)}\n                fullWidth\n                helperText={(errors && errors.lastName) ? errors.lastName[0] : 'Press Enter to change your last name'}\n                label=\"Last name\"\n                placeholder={userData.lastName}\n                required\n                type=\"text\"\n                value={lastName}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'last-name')}\n\n                onChange={this.handleLastNameChange}\n              />\n            }\n\n            {showingField !== 'last-name' &&\n              <>\n                <ListItemText\n                  primary=\"Last name\"\n                  secondary={userData.lastName ? userData.lastName : 'You don’t have a last name'}\n                />\n\n                <ListItemSecondaryAction>\n                  {userData.lastName &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('last-name')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!userData.lastName &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('last-name')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonOutlineIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!userData.username &&\n              <ListItemIcon>\n                <Tooltip title=\"No username\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'username' &&\n              <TextField\n                autoComplete=\"username\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.username)}\n                fullWidth\n                helperText={(errors && errors.username) ? errors.username[0] : 'Press Enter to change your username'}\n                label=\"Username\"\n                placeholder={userData.username}\n                required\n                type=\"text\"\n                value={username}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'username')}\n\n                onChange={this.handleUsernameChange}\n              />\n            }\n\n            {showingField !== 'username' &&\n              <>\n                <ListItemText\n                  primary=\"Username\"\n                  secondary={userData.username ? userData.username : 'You don’t have a username'}\n                />\n\n                <ListItemSecondaryAction>\n                  {userData.username &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('username')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!userData.username &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('username')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <EmailIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {user.email &&\n              <ListItemIcon>\n                <>\n                  {user.emailVerified &&\n                    <Tooltip title=\"Verified\">\n                      <CheckIcon color=\"primary\" />\n                    </Tooltip>\n                  }\n\n                  {!user.emailVerified &&\n                    <Tooltip title=\"Not verified\">\n                      <WarningIcon color=\"error\" />\n                    </Tooltip>\n                  }\n                </>\n              </ListItemIcon>\n            }\n\n            {!user.email &&\n              <ListItemIcon>\n                <Tooltip title=\"No e-mail address\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'email-address' &&\n              <TextField\n                autoComplete=\"email\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.emailAddress)}\n                fullWidth\n                helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : 'Press Enter to change your e-mail address'}\n                label=\"E-mail address\"\n                placeholder={user.email}\n                required\n                type=\"email\"\n                value={emailAddress}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'email-address')}\n\n                onChange={this.handleEmailAddressChange}\n              />\n            }\n\n            {showingField !== 'email-address' &&\n              <>\n                <ListItemText\n                  primary=\"E-mail address\"\n                  secondary={user.email ? user.email : 'You don’t have an e-mail address'}\n                />\n\n                {(user.email && !user.emailVerified) &&\n                  <Box clone mr={7}>\n                    <ListItemSecondaryAction>\n                      <Tooltip title=\"Verify\">\n                        <div>\n                          <IconButton color=\"secondary\" disabled={performingAction || sentVerificationEmail} onClick={this.verifyEmailAddress}>\n                            <CheckIcon />\n                          </IconButton>\n                        </div>\n                      </Tooltip>\n                    </ListItemSecondaryAction>\n                  </Box>\n                }\n\n                <ListItemSecondaryAction>\n                  {user.email &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('email-address')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!user.email &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('email-address')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <AccessTimeIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <Hidden xsDown>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format('LLLL')}\n              />\n            </Hidden>\n\n            <Hidden smUp>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format('llll')}\n              />\n            </Hidden>\n          </ListItem>\n\n          <Box mt={1} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <DeleteForeverIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Delete account\"\n              secondary=\"Accounts can’t be recovered\"\n            />\n\n            <ListItemSecondaryAction>\n              <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={this.deleteAccount}>Delete</Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n\n  componentDidMount() {\n    this.calculateProfileCompletion();\n    this.calculateSecurityRating();\n  }\n\n  componentWillUnmount() {\n    const { avatarUrl } = this.state;\n\n    if (avatarUrl) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatarUrl: ''\n      });\n    }\n  }\n}\n\nAccountTab.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport Box from '@material-ui/core/Box';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Button from '@material-ui/core/Button';\n\nimport FiberManualRecord from '@material-ui/icons/FiberManualRecord';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport FormatColorResetIcon from '@material-ui/icons/FormatColorReset';\n\nimport theming from '../../services/theming';\n\nclass AppearanceTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n  handlePrimaryColorChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const primaryColor = event.target.value;\n\n    if (!primaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.primaryColor.id === primaryColor) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changePrimaryColor(primaryColor).then((value) => {\n        this.props.openSnackbar('Changed primary color');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleSecondaryColorChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const secondaryColor = event.target.value;\n\n    if (!secondaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.secondaryColor.id === secondaryColor) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeSecondaryColor(secondaryColor).then((value) => {\n        this.props.openSnackbar('Changed secondary color');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleTypeChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const type = event.target.value;\n\n    if (!type) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.type.id === type) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeType(type).then((value) => {\n        this.props.openSnackbar('Changed type');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleResetClick = () => {\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theming.isDefaultTheme(theme)) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.resetTheme().then((value) => {\n        this.props.openSnackbar('Reset theme');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    if (!theme) {\n      return null;\n    }\n\n    const { performingAction } = this.state;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <FiberManualRecord color=\"primary\" />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Primary color</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.primaryColor.id}\n\n                    onChange={this.handlePrimaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>{color.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.primaryColor.id}\n\n                    onChange={this.handlePrimaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <FiberManualRecord color=\"secondary\" />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Secondary color</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.secondaryColor.id}\n\n                    onChange={this.handleSecondaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>{color.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.secondaryColor.id}\n\n                    onChange={this.handleSecondaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <InvertColorsIcon />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Type</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.type.id}\n\n                    onChange={this.handleTypeChange}>\n                    {Object.keys(theming.types).map((type) => {\n                      type = theming.types[type];\n\n                      return (\n                        <option key={type.id} value={type.id}>{type.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.type.id}\n\n                    onChange={this.handleTypeChange}>\n                    {Object.keys(theming.types).map((type) => {\n                      type = theming.types[type];\n\n                      return (\n                        <MenuItem key={type.id} value={type.id}>{type.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mt={2} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <FormatColorResetIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Reset theme\"\n              secondary=\"Changes will be reset\"\n            />\n\n            <ListItemSecondaryAction>\n              <Button\n                color=\"secondary\"\n                disabled={theming.isDefaultTheme(theme) || performingAction}\n                variant=\"contained\"\n\n                onClick={this.handleResetClick}>\n                Reset\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nAppearanceTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default AppearanceTab;\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport LinkIcon from '@material-ui/icons/Link';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\n\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport MicrosoftIcon from 'mdi-material-ui/Microsoft';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport YahooIcon from 'mdi-material-ui/Yahoo';\n\nimport authentication from '../../services/authentication';\n\nclass ConnectionsTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n\n  linkAuthProvider = (authProvider) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.linkAuthProvider(authProvider.providerId).then((value) => {\n        this.props.openSnackbar(`${authProvider.name} linked`, 5);\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  unlinkAuthProvider = (authProvider) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.unlinkAuthProvider(authProvider.providerId).then((value) => {\n        this.props.openSnackbar(`${authProvider.name} unlinked`, 4);\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  render() {\n    const { performingAction } = this.state;\n\n    const authProviders = [\n      {\n        providerId: 'facebook.com',\n        color: '#3c5a99',\n        icon: <FacebookBoxIcon />,\n        name: 'Facebook'\n      },\n      {\n        providerId: 'github.com',\n        color: '#24292e',\n        icon: <GitHubCircleIcon />,\n        name: 'GitHub'\n      },\n      {\n        providerId: 'google.com',\n        color: '#4285f4',\n        icon: <GoogleIcon />,\n        name: 'Google'\n      },\n      {\n        providerId: 'microsoft.com',\n        color: '#f65314',\n        icon: <MicrosoftIcon />,\n        name: 'Microsoft'\n      },\n      {\n        providerId: 'twitter.com',\n        color: '#1da1f2',\n        icon: <TwitterIcon />,\n        name: 'Twitter'\n      },\n      {\n        providerId: 'yahoo.com',\n        color: '#410093',\n        icon: <YahooIcon />,\n        name: 'Yahoo'\n      }\n    ];\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          {authProviders.map((authProvider) => {\n            const authProviderData = authentication.authProviderData(authProvider.providerId);\n            let identifier = null;\n\n            if (authProviderData) {\n              const displayName = authProviderData.displayName;\n              const emailAddress = authProviderData.email;\n              const phoneNumber = authProviderData.phoneNumber;\n\n              identifier = displayName || emailAddress || phoneNumber;\n            }\n\n            return (\n              <ListItem key={authProvider.providerId}>\n                <ListItemIcon>\n                  <Box color={authProvider.color}>\n                    {authProvider.icon}\n                  </Box>\n                </ListItemIcon>\n\n                {authProviderData &&\n                  <ListItemText\n                    primary={authProvider.name}\n                    secondary={identifier}\n                  />\n                }\n\n                {!authProviderData &&\n                  <ListItemText\n                    primary={authProvider.name}\n                  />\n                }\n\n                <ListItemSecondaryAction>\n                  {authProviderData &&\n                    <Tooltip title=\"Unlink\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.unlinkAuthProvider(authProvider)}>\n                          <LinkOffIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!authProviderData &&\n                    <Tooltip title=\"Link\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.linkAuthProvider(authProvider)}>\n                          <LinkIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nConnectionsTab.propTypes = {\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default ConnectionsTab;\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport validate from 'validate.js';\nimport moment from 'moment';\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport LockIcon from '@material-ui/icons/Lock';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst initialState = {\n  showingField: '',\n\n  password: '',\n  passwordConfirmation: '',\n\n  performingAction: false,\n\n  errors: null\n};\n\nclass SecurityTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  showField = (fieldId) => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = (callback) => {\n    this.setState({\n      showingField: '',\n\n      password: '',\n      passwordConfirmation: '',\n\n      errors: null\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  changeField = (fieldId) => {\n    switch (fieldId) {\n      case 'password':\n        const { password } = this.state;\n\n        const errors = validate({\n          password: password\n        }, {\n          password: constraints.password\n        });\n\n        if (errors) {\n          this.setState({\n            errors: errors\n          });\n\n          return;\n        }\n\n        this.setState({\n          errors: null\n        }, () => {\n          this.showField('password-confirmation');\n        });\n        return;\n\n      case 'password-confirmation':\n        this.changePassword();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  changePassword = () => {\n    const { password, passwordConfirmation } = this.state;\n\n    const errors = validate({\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }, {\n      password: constraints.password,\n      passwordConfirmation: constraints.passwordConfirmation\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changePassword(password).then(() => {\n          this.hideFields(() => {\n            this.props.openSnackbar('Changed password');\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === 'Escape') {\n      this.hideFields();\n    } else if (key === 'Enter') {\n      this.changeField(fieldId);\n    }\n  };\n\n  handlePasswordChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Properties\n    const { userData } = this.props;\n\n    const {\n      showingField,\n\n      password,\n      passwordConfirmation,\n\n      performingAction,\n\n      errors\n    } = this.state;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <LockIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {showingField === 'password' &&\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.password)}\n                fullWidth\n                helperText={(errors && errors.password) ? errors.password[0] : 'Press Enter to change your password'}\n                label=\"Password\"\n                required\n                type=\"password\"\n                value={password}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'password')}\n\n                onChange={this.handlePasswordChange}\n              />\n            }\n\n            {showingField === 'password-confirmation' &&\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.passwordConfirmation)}\n                fullWidth\n                helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : 'Press Enter to change your password'}\n                label=\"Password confirmation\"\n                required\n                type=\"password\"\n                value={passwordConfirmation}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'password-confirmation')}\n\n                onChange={this.handlePasswordConfirmationChange}\n              />\n            }\n\n            {(showingField !== 'password' && showingField !== 'password-confirmation') &&\n              <>\n                <Hidden xsDown>\n                  <ListItemText\n                    primary=\"Password\"\n                    secondary={userData.lastPasswordChange ? `Last changed ${moment(userData.lastPasswordChange.toDate()).format('LL')}` : 'Never changed'}\n                  />\n                </Hidden>\n\n                <Hidden smUp>\n                  <ListItemText\n                    primary=\"Password\"\n                    secondary={userData.lastPasswordChange ? `Last changed ${moment(userData.lastPasswordChange.toDate()).format('ll')}` : 'Never changed'}\n                  />\n                </Hidden>\n\n                <ListItemSecondaryAction>\n                  <Tooltip title=\"Change\">\n                    <div>\n                      <IconButton disabled={performingAction} onClick={() => this.showField('password')}>\n                        <EditIcon />\n                      </IconButton>\n                    </div>\n                  </Tooltip>\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nSecurityTab.propTypes = {\n  // Properties\n  userData: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default SecurityTab;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport LinkIcon from '@material-ui/icons/Link';\nimport SecurityIcon from '@material-ui/icons/Security';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport AccountTab from '../AccountTab';\nimport AppearanceTab from '../AppearanceTab';\nimport ConnectionsTab from '../ConnectionsTab';\nimport SecurityTab from '../SecurityTab';\n\nconst styles = (theme) => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  tabs: {\n    display: 'initial'\n  }\n});\n\nconst tabs = [\n  {\n    key: 'account',\n    icon: <AccountCircleIcon />,\n    label: 'Account'\n  },\n\n  {\n    key: 'appearance',\n    icon: <PaletteIcon />,\n    label: 'Appearance'\n  },\n\n  {\n    key: 'connections',\n    icon: <LinkIcon />,\n    label: 'Connections'\n  },\n\n  {\n    key: 'security',\n    icon: <SecurityIcon />,\n    label: 'Security'\n  }\n];\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedTab: 0\n    };\n  }\n\n  handleTabChange = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  handleIndexChange = (index) => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const {\n      user,\n      userData,\n      theme\n    } = this.props;\n\n    // Custom Functions\n    const {\n      openSnackbar\n    } = this.props;\n\n    const { selectedTab } = this.state;\n\n    return (\n      <Dialog {...dialogProps}>\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">\n            Settings\n          </Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton className={classes.closeButton} onClick={dialogProps.onClose}>\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <Hidden xsDown>\n          <Tabs\n            classes={{ root: classes.tabs }}\n            style={{ overflow: 'initial', minHeight: 'initial' }}\n\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            value={selectedTab}\n            variant=\"fullWidth\"\n            onChange={this.handleTabChange}>\n            {tabs.map((tab) => {\n              return (\n                <Tab key={tab.key} icon={tab.icon} label={tab.label} />\n              );\n            })}\n          </Tabs>\n        </Hidden>\n\n        <Hidden smUp>\n          <Tabs\n            classes={{ root: classes.tabs }}\n            style={{ overflow: 'initial', minHeight: 'initial' }}\n\n            indicatorColor=\"primary\"\n            scrollButtons=\"off\"\n            textColor=\"primary\"\n            value={selectedTab}\n            variant=\"scrollable\"\n            onChange={this.handleTabChange}>\n            {tabs.map((tab) => {\n              return (\n                <Tab key={tab.key} icon={tab.icon} label={tab.label} />\n              );\n            })}\n          </Tabs>\n        </Hidden>\n\n        <SwipeableViews index={selectedTab} onChangeIndex={this.handleIndexChange}>\n          <AccountTab\n            user={user}\n            userData={userData}\n\n            openSnackbar={openSnackbar}\n          />\n\n          <AppearanceTab\n            theme={theme}\n\n            openSnackbar={openSnackbar}\n          />\n\n          <ConnectionsTab\n            openSnackbar={openSnackbar}\n          />\n\n          <SecurityTab\n            user={user}\n            userData={userData}\n\n            openSnackbar={openSnackbar}\n          />\n        </SwipeableViews>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SettingsDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst styles = (theme) => ({\n  noTitlePadding: {\n    paddingTop: theme.spacing(3)\n  }\n});\n\nclass AlertDialog extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const {\n      title,\n      contentText,\n      dismissiveAction,\n      confirmingAction,\n      acknowledgementAction\n    } = this.props;\n\n    if ((dismissiveAction || confirmingAction) && acknowledgementAction) {\n      console.error(\n        'Dialogs should contain a maximum of two actions. ' +\n        'If a single action is provided, it must be an acknowledgement action. ' +\n        'If two actions are provided, one must be a confirming action, and the other a dismissing action. ' +\n        'Providing a third action such as “Learn more” is not recommended as it navigates the user away from the dialog, leaving the dialog task unfinished. ' +\n        'https://material.io/design/components/dialogs.html#actions'\n      );\n\n      return null;\n    }\n\n    return (\n      <Dialog {...dialogProps}>\n        {title &&\n          <DialogTitle>{title}</DialogTitle>\n        }\n\n        <DialogContent className={title ? null : classes.noTitlePadding}>\n          <DialogContentText>\n            {contentText}\n          </DialogContentText>\n        </DialogContent>\n\n        {(dismissiveAction || confirmingAction || acknowledgementAction) &&\n          <DialogActions>\n            {dismissiveAction}\n            {confirmingAction}\n            {acknowledgementAction}\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nAlertDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  title: PropTypes.string,\n  contentText: PropTypes.string.isRequired,\n  dismissiveAction: PropTypes.element,\n  confirmingAction: PropTypes.element,\n  acknowledgementAction: PropTypes.element,\n};\n\nexport default withStyles(styles)(AlertDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport SignUpDialog from '../SignUpDialog';\nimport SignInDialog from '../SignInDialog';\nimport SettingsDialog from '../SettingsDialog';\nimport AlertDialog from '../AlertDialog';\n\nclass DialogHost extends Component {\n  render() {\n    // Properties\n    const {\n      signedIn,\n      dialogs\n    } = this.props;\n\n    const signUpDialog = dialogs.signUpDialog;\n    const signInDialog = dialogs.signInDialog;\n    const settingsDialog = dialogs.settingsDialog;\n    const signOutDialog = dialogs.signOutDialog;\n\n    return (\n      <>\n        <Hidden xsDown>\n          {!signedIn &&\n            <>\n              <SignUpDialog\n                dialogProps={signUpDialog.dialogProps}\n\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={signInDialog.dialogProps}\n\n                {...signInDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n\n        <Hidden smDown>\n          {signedIn &&\n            <SettingsDialog\n              dialogProps={settingsDialog.dialogProps}\n\n              {...settingsDialog.props}\n            />\n          }\n        </Hidden>\n\n        <Hidden smUp>\n          {!signedIn &&\n            <>\n              <SignUpDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signUpDialog.dialogProps\n                }}\n\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signInDialog.dialogProps\n                }}\n\n                {...signInDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n\n        <Hidden mdUp>\n          {signedIn &&\n            <SettingsDialog\n              dialogProps={{\n                fullScreen: true,\n\n                ...settingsDialog.dialogProps\n              }}\n\n              {...settingsDialog.props}\n            />\n          }\n        </Hidden>\n\n        {signedIn &&\n          <>\n            <AlertDialog\n              dialogProps={signOutDialog.dialogProps}\n\n              {...signOutDialog.props}\n            />\n          </>\n        }\n      </>\n    );\n  }\n}\n\nDialogHost.defaultProps = {\n  signedIn: false\n};\n\nDialogHost.propTypes = {\n  // Properties\n  signedIn: PropTypes.bool.isRequired,\n  dialogs: PropTypes.object.isRequired\n};\n\nexport default DialogHost;\n","import React, { Component } from 'react';\n\nimport readingTime from 'reading-time';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { auth, firestore } from '../../firebase';\nimport authentication from '../../services/authentication';\nimport theming from '../../services/theming';\n\nimport LaunchScreen from '../LaunchScreen';\n\nimport Bar from '../Bar';\n\nimport Router from '../Router';\nimport DialogHost from '../DialogHost';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      userData: null,\n      theme: theming.defaultTheme,\n\n      signedIn: false,\n      ready: false,\n      performingAction: false,\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  openDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = true;\n\n    this.setState({ dialog }, callback);\n  };\n\n  closeDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = false;\n\n    this.setState({ dialog }, callback);\n  };\n\n  signOut = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.signOut().then(() => {\n        this.closeDialog('signOutDialog', () => {\n          this.openSnackbar('Signed out');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  openSnackbar = (message, autoHideDuration = 2, callback) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * autoHideDuration,\n        message,\n        open: true\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    const {\n      user,\n      userData,\n      theme,\n      signedIn,\n      ready,\n      performingAction,\n    } = this.state;\n\n    const {\n      signUpDialog,\n      signInDialog,\n      settingsDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n\n        {!ready &&\n          <LaunchScreen />\n        }\n\n        {ready &&\n          <>\n            <Bar\n              signedIn={signedIn}\n              performingAction={performingAction}\n\n              user={user}\n              userData={userData}\n\n              onSignUpClick={() => this.openDialog('signUpDialog')}\n              onSignInClick={() => this.openDialog('signInDialog')}\n\n              onSettingsClick={() => this.openDialog('settingsDialog')}\n              onSignOutClick={() => this.openDialog('signOutDialog')}\n            />\n\n            <Router signedIn={signedIn} />\n\n            <DialogHost\n              signedIn={signedIn}\n              dialogs={\n                {\n                  signUpDialog: {\n                    dialogProps: {\n                      open: signUpDialog.open,\n\n                      onClose: (callback) => {\n                        this.closeDialog('signUpDialog');\n\n                        if (callback && typeof callback === 'function') {\n                          callback();\n                        }\n                      }\n                    },\n\n                    props: {\n                      performingAction: performingAction,\n\n                      openSnackbar: this.openSnackbar\n                    }\n                  },\n\n                  signInDialog: {\n                    dialogProps: {\n                      open: signInDialog.open,\n\n                      onClose: (callback) => {\n                        this.closeDialog('signInDialog');\n\n                        if (callback && typeof callback === 'function') {\n                          callback();\n                        }\n                      }\n                    },\n\n                    props: {\n                      performingAction: performingAction,\n\n                      openSnackbar: this.openSnackbar\n                    }\n                  },\n\n                  settingsDialog: {\n                    dialogProps: {\n                      open: settingsDialog.open,\n                      disableEscapeKeyDown: true,\n\n                      onClose: () => this.closeDialog('settingsDialog')\n                    },\n\n                    props: {\n                      user: user,\n                      userData: userData,\n                      theme: theme,\n\n                      openSnackbar: this.openSnackbar\n                    }\n                  },\n\n                  signOutDialog: {\n                    dialogProps: {\n                      open: signOutDialog.open,\n\n                      onClose: () => this.closeDialog('signOutDialog')\n                    },\n\n                    props: {\n                      title: 'Sign out?',\n                      contentText: 'While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.',\n                      dismissiveAction: <Button color=\"primary\" onClick={() => this.closeDialog('signOutDialog')}>Cancel</Button>,\n                      confirmingAction: <Button color=\"primary\" disabled={performingAction} variant=\"contained\" onClick={this.signOut}>Sign Out</Button>\n                    }\n                  }\n                }\n              }\n            />\n\n            <Snackbar\n              autoHideDuration={snackbar.autoHideDuration}\n              message={snackbar.message}\n              open={snackbar.open}\n              onClose={this.closeSnackbar}\n            />\n          </>\n        }\n      </MuiThemeProvider>\n    );\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    this.removeAuthStateChangedObserver = auth.onAuthStateChanged((user) => {\n      if (!user) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: null,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            signedIn: false,\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: null,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            signedIn: false,\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: null,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            signedIn: false,\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      this.removeReferenceListener = reference.onSnapshot((snapshot) => {\n        if (!snapshot.exists) {\n          if (this.removeReferenceListener) {\n            this.removeReferenceListener();\n          }\n\n          if (this.mounted) {\n            this.setState({\n              user: null,\n              userData: null,\n              theme: theming.defaultTheme,\n\n              signedIn: false,\n              ready: true\n            });\n          }\n\n          return;\n        }\n\n        const data = snapshot.data();\n\n        if (!data) {\n          if (this.removeReferenceListener) {\n            this.removeReferenceListener();\n          }\n\n          if (this.mounted) {\n            this.setState({\n              user: null,\n              userData: null,\n              theme: theming.defaultTheme,\n\n              signedIn: false,\n              ready: true\n            });\n          }\n\n          return;\n        }\n\n        if (data.theme) {\n          this.setState({\n            theme: theming.createTheme(data.theme)\n          });\n        } else {\n          this.setState({\n            theme: theming.defaultTheme\n          });\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: data,\n\n            signedIn: true,\n            ready: true\n          });\n        }\n      }, (error) => {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: null,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            signedIn: false,\n            ready: true\n          }, () => {\n            const code = error.code;\n            const message = error.message;\n\n            switch (code) {\n              default:\n                this.openSnackbar(message);\n                return;\n            }\n          });\n        }\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.removeAuthStateChangedObserver) {\n      this.removeAuthStateChangedObserver();\n    }\n\n    if (this.removeReferenceListener) {\n      this.removeReferenceListener();\n    }\n\n    this.mounted = false;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}