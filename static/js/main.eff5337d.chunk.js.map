{"version":3,"sources":["firebase.js","services/authentication.js","services/theming.js","components/ErrorBoundary/ErrorBoundary.js","components/LaunchScreen/LaunchScreen.js","components/Bar/Bar.js","components/EmptyState/EmptyState.js","components/HomeContent/HomeContent.js","components/NotFoundContent/NotFoundContent.js","components/Router/Router.js","components/AboutDialog/AboutDialog.js","components/AuthProviderList/AuthProviderList.js","constraints.js","components/SignUpDialog/SignUpDialog.js","components/SignInDialog/SignInDialog.js","components/AccountTab/AccountTab.js","components/AppearanceTab/AppearanceTab.js","components/LinksTab/LinksTab.js","components/SecurityTab/SecurityTab.js","components/SettingsDialog/SettingsDialog.js","components/DeleteAccountDialog/DeleteAccountDialog.js","components/AlertDialog/AlertDialog.js","components/DialogHost/DialogHost.js","components/App/App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","firestore","storage","avatarFileTypes","authentication","fields","Promise","resolve","reject","firstName","lastName","username","emailAddress","password","currentUser","createUserWithEmailAndPassword","then","value","user","uid","reference","collection","doc","set","logEvent","method","catch","reason","merge","signInWithEmailAndPassword","get","source","exists","providerId","provider","OAuthProvider","signInWithPopup","linkWithPopup","unlink","providerData","find","authProvider","signOut","sendPasswordResetEmail","avatar","includes","type","size","ref","child","put","uploadTaskSnapshot","getDownloadURL","updateProfile","photoURL","delete","update","updateEmail","updatePassword","lastPasswordChange","FieldValue","serverTimestamp","sendEmailVerification","getName","displayName","getFullName","getNameInitials","charAt","getProfileCompletion","email","emailVerified","profileCompletion","forEach","field","length","Math","floor","getSecurityRating","userData","metadata","creationTime","moment","securityRating","toDate","diff","colors","red","id","name","import","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","types","light","dark","getColor","colorId","_","camelCase","getType","typeId","defaultPrimaryColor","defaultSecondaryColor","defaultType","defaultTheme","createMuiTheme","palette","primary","secondary","primaryColor","secondaryColor","theming","isDefaultTheme","theme","createTheme","changeTheme","changePrimaryColor","changeSecondaryColor","changeType","resetTheme","ErrorBoundary","props","state","hasError","eventId","error","errorInfo","Sentry","scope","setExtras","setState","children","this","Component","LaunchScreen","Box","position","top","left","CircularProgress","Bar","getAvatar","photoUrl","Avatar","alt","src","nameInitials","openMenu","event","anchorEl","currentTarget","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","performingAction","onTitleClick","onSignUpClick","onSignInClick","AppBar","color","Toolbar","variant","display","flexGrow","Typography","style","cursor","onClick","IconButton","disabled","Menu","open","Boolean","onClose","MenuItem","mr","Button","defaultProps","EmptyState","section","title","description","button","classes","icon","className","center","mb","getMarginBottomForSection","SvgIcon","withStyles","transform","textAlign","fontSize","spacing","HomeContent","Fab","href","rel","target","buttonIcon","marginRight","NotFoundContent","component","Link","to","Router","basename","path","exact","AboutDialog","dialogProps","Dialog","DialogTitle","DialogContent","List","disablePadding","ListItem","ListItemText","DialogActions","AuthProviderList","gutterBottom","onAuthProviderClick","authProviders","main","contrastText","Grid","grid","container","direction","map","key","item","fullWidth","startIcon","marginBottom","constraints","presence","allowEmpty","minimum","maximum","message","emailAddressConfirmation","equality","attribute","passwordConfirmation","initialState","errors","SignUpDialog","signUp","validate","signUpWithEmailAddressAndPassword","code","openSnackbar","finally","signInWithAuthProvider","handleKeyPress","altKey","ctrlKey","metaKey","shiftKey","handleExited","handleEmailAddressChange","handleEmailAddressConfirmationChange","handlePasswordChange","handlePasswordConfirmationChange","maxWidth","onKeyPress","onExited","Hidden","xsDown","xs","Divider","divider","orientation","TextField","autoComplete","helperText","label","placeholder","required","onChange","smUp","margin","SignInDialog","resetPassword","signIn","showingField","avatarUrl","loadingAvatar","sentVerificationEmail","AccountTab","getNameInitialsOrIcon","personIcon","uploadAvatar","changeAvatar","removeAvatar","URL","revokeObjectURL","showField","fieldId","hideFields","callback","changeFirstName","changeLastName","changeUsername","changeEmailAddress","verifyEmailAddress","deleteAccount","changeField","handleKeyDown","handleAvatarChange","files","createObjectURL","handleFirstNameChange","handleLastNameChange","handleUsernameChange","onDeleteAccountClick","hasFirstName","hasLastName","hasUsername","root","dialogContent","alignItems","Badge","badge","badgeContent","Tooltip","sizeSmall","small","loadingBadge","Fade","transitionDelay","in","unmountOnExit","thickness","hidden","accept","htmlFor","ListItemIcon","autoFocus","onBlur","onKeyDown","ListItemSecondaryAction","clone","lastSignInTime","format","mt","paddingTop","right","marginLeft","width","height","minHeight","AppearanceTab","handlePrimaryColorChange","handleSecondaryColorChange","handleTypeChange","handleResetClick","FormControl","InputLabel","Select","native","Object","keys","LinksTab","linkAuthProvider","unlinkAuthProvider","authProviderData","identifier","phoneNumber","SecurityTab","changePassword","hasChangedPassword","tabs","selectedTab","SettingsDialog","handleTabChange","handleIndexChange","index","disableTypography","closeButton","Tabs","overflow","indicatorColor","textColor","tab","Tab","scrollButtons","onChangeIndex","DeleteAccountDialog","DialogContentText","AlertDialog","contentText","dismissiveAction","confirmingAction","acknowledgementAction","console","noTitlePadding","DialogHost","dialogs","aboutDialog","signUpDialog","signInDialog","settingsDialog","deleteAccountDialog","signOutDialog","smDown","fullScreen","mdUp","App","openDialog","dialogId","dialog","undefined","closeDialog","closeAllDialogs","autoHideDuration","snackbar","readingTime","time","closeSnackbar","clearMessage","ready","CssBaseline","Snackbar","mounted","removeAuthStateChangedObserver","onAuthStateChanged","removeReferenceListener","onSnapshot","snapshot","data","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","dsn","release","ReactDOM","render","document","getElementById","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"0ZAQAA,gBAAuB,CACrBC,OAAQC,0CACRC,WAAYD,6CACZE,YAAaF,oDACbG,UAAWH,6BACXI,cAAeJ,yCACfK,kBAAmBL,eACnBM,MAAON,sCACPO,cAAeP,iBAGFF,QACFU,EAAYV,cACZW,EAAOX,SACPY,EAAYZ,cACZa,EAAUb,Y,GACIA,gB,gBCpBrBc,EAAkB,CACtB,YACA,aACA,YACA,aACA,iBAGIC,EAAiB,CAEvBA,OAAwB,SAACC,GACvB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,GAAKH,EAAL,CAMA,IAAMI,EAAYJ,EAAOI,UACnBC,EAAWL,EAAOK,SAClBC,EAAWN,EAAOM,SAClBC,EAAeP,EAAOO,aACtBC,EAAWR,EAAOQ,SAExB,GAAKJ,GAAcC,GAAaC,GAAaC,GAAiBC,EAM1Cb,EAAKc,YAGvBN,IAKFR,EAAKe,+BAA+BH,EAAcC,GAAUG,MAAK,SAACC,GAChE,IAAMC,EAAOD,EAAMC,KAEnB,GAAKA,EAAL,CAMA,IAAMC,EAAMD,EAAKC,IAEjB,GAAKA,EAAL,CAMA,IAAMC,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAE/CC,EAMLA,EAAUG,IAAI,CACZd,UAAWA,EACXC,SAAUA,EACVC,SAAUA,IACTK,MAAK,SAACC,GACPlB,EAAUyB,SAAS,UAAW,CAC5BC,OAAQ,aAGVlB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAhBPnB,SARAA,SARAA,OAkCDkB,OAAM,SAACC,GACRnB,EAAOmB,WApDPnB,SAZAA,QAqENJ,kCAAmD,SAACQ,EAAcC,GAChE,OAAO,IAAIP,SAAQ,SAACC,EAASC,GACtBI,GAAiBC,EAMFb,EAAKc,YAGvBN,IAKFR,EAAKe,+BAA+BH,EAAcC,GAAUG,MAAK,SAACC,GAChE,IAAMC,EAAOD,EAAMC,KAEnB,GAAKA,EAAL,CAMA,IAAMC,EAAMD,EAAKC,IAEjB,GAAKA,EAAL,CAMA,IAAMC,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAE/CC,EAMLA,EAAUG,IAAI,GAAI,CAAEK,OAAO,IAAQZ,MAAK,SAACC,GACvClB,EAAUyB,SAAS,UAAW,CAC5BC,OAAQ,aAGVlB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAZPnB,SARAA,SARAA,OA8BDkB,OAAM,SAACC,GACRnB,EAAOmB,MAhDPnB,QAqDNJ,OAAwB,SAACQ,EAAcC,GACrC,OAAO,IAAIP,SAAQ,SAACC,EAASC,GACtBI,GAAiBC,EAMFb,EAAKc,YAGvBN,IAKFR,EAAK6B,2BAA2BjB,EAAcC,GAAUG,MAAK,SAACC,GAC5D,IAAMC,EAAOD,EAAMC,KAEnB,GAAKA,EAAL,CAMA,IAAMC,EAAMD,EAAKC,IAEjB,GAAKA,EAAL,CAMA,IAAMC,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAE/CC,EAMLA,EAAUU,IAAI,CAAEC,OAAQ,WAAYf,MAAK,SAACC,GACpCA,EAAMe,QACRjC,EAAUyB,SAAS,QAAS,CAC1BC,OAAQ,aAGVlB,EAAQW,IAERE,EAAUG,IAAI,GAAI,CAAEK,OAAO,IAAQZ,MAAK,SAACC,GACvClB,EAAUyB,SAAS,QAAS,CAC1BC,OAAQ,aAGVlB,EAAQW,MACPQ,OAAM,SAACC,GACRnB,EAAOmB,SAGVD,OAAO,SAAAC,GACRnB,EAAOmB,MAxBPnB,SARAA,SARAA,OA0CDkB,OAAM,SAACC,GACRnB,EAAOmB,MA5DPnB,QAiENJ,uBAAwC,SAAC6B,GACvC,OAAO,IAAI3B,SAAQ,SAACC,EAASC,GAC3B,GAAKyB,EAAL,CAMA,IAAMC,EAAW,IAAI7C,EAASW,KAAKmC,cAAcF,GAEjD,GAAKC,EAMelC,EAAKc,YAGvBN,IAKFR,EAAKoC,gBAAgBF,GAAUlB,MAAK,SAACC,GACnC,IAAMC,EAAOD,EAAMC,KAEnB,GAAKA,EAAL,CAMA,IAAMC,EAAMD,EAAKC,IAEjB,GAAKA,EAAL,CAMA,IAAMC,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAE/CC,EAMLA,EAAUU,IAAI,CAAEC,OAAQ,WAAYf,MAAK,SAACC,GACpCA,EAAMe,QACRjC,EAAUyB,SAAS,QAAS,CAC1BC,OAAQQ,IAGV1B,EAAQW,IAERE,EAAUG,IAAI,GAAI,CAAEK,OAAO,IAAQZ,MAAK,SAACC,GACvClB,EAAUyB,SAAS,QAAS,CAC1BC,OAAQQ,IAGV1B,EAAQW,MACPQ,OAAM,SAACC,GACRnB,EAAOmB,SAGVD,OAAO,SAAAC,GACRnB,EAAOmB,MAxBPnB,SARAA,SARAA,OA0CDkB,OAAM,SAACC,GACRnB,EAAOmB,WA5DPnB,SARAA,QAyENJ,iBAAkC,SAAC6B,GACjC,OAAO,IAAI3B,SAAQ,SAACC,EAASC,GAC3B,GAAKyB,EAAL,CAMA,IAAMC,EAAW,IAAI7C,EAASW,KAAKmC,cAAcF,GAEjD,GAAKC,EAAL,CAMA,IAAMpB,EAAcd,EAAKc,YAEpBA,EAMLA,EAAYuB,cAAcH,GAAUlB,MAAK,SAACC,GACxClB,EAAUyB,SAAS,qBAAsB,CACvCP,MAAOgB,IAGT1B,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAZPnB,SARAA,SARAA,QAiCNJ,mBAAoC,SAAC6B,GACnC,OAAO,IAAI3B,SAAQ,SAACC,EAASC,GAC3B,GAAKyB,EAAL,CAMA,IAAMnB,EAAcd,EAAKc,YAEpBA,EAMLA,EAAYwB,OAAOL,GAAYjB,MAAK,SAACC,GACnClB,EAAUyB,SAAS,uBAAwB,CACzCP,MAAOgB,IAGT1B,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAZPnB,SARAA,QAyBNJ,iBAAkC,SAAC6B,GACjC,GAAKA,EAAL,CAIA,IAAMnB,EAAcd,EAAKc,YAEzB,GAAKA,EAAL,CAIA,IAAMyB,EAAezB,EAAYyB,aAEjC,GAAKA,EAIL,OAAOA,EAAaC,MAAK,SAAAC,GAAY,OAAIA,EAAaR,aAAeA,QAGvE7B,QAAyB,WACvB,OAAO,IAAIE,SAAQ,SAACC,EAASC,GACPR,EAAKc,YAQzBd,EAAK0C,UAAU1B,MAAK,SAACC,GACnBlB,EAAUyB,SAAS,YAEnBjB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAVPnB,QAeNJ,cAA+B,SAACQ,GAC9B,OAAO,IAAIN,SAAQ,SAACC,EAASC,GACtBI,EAMeZ,EAAKc,YAGvBN,IAKFR,EAAK2C,uBAAuB/B,GAAcI,MAAK,SAACC,GAC9ClB,EAAUyB,SAAS,kBAEnBjB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAlBPnB,QAuBNJ,aAA8B,SAACwC,GAC7B,OAAO,IAAItC,SAAQ,SAACC,EAASC,GAC3B,GAAKoC,EAML,GAAKzC,EAAgB0C,SAASD,EAAOE,MAMrC,GAAIF,EAAOG,KAAQ,SACjBvC,QADF,CAMA,IAAMM,EAAcd,EAAKc,YAEzB,GAAKA,EAAL,CAMA,IAAMK,EAAML,EAAYK,IAExB,GAAKA,EAAL,CAMA,IAAMC,EAAYlB,EAAQ8C,MAAMC,MAAM,UAAUA,MAAM,WAAWA,MAAM9B,GAElEC,EAMLA,EAAU8B,IAAIN,GAAQ5B,MAAK,SAACmC,GAC1B/B,EAAUgC,iBAAiBpC,MAAK,SAACC,GAC/BH,EAAYuC,cAAc,CACxBC,SAAUrC,IACTD,MAAK,SAACC,GACPlB,EAAUyB,SAAS,iBAEnBjB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,SAERD,OAAM,SAACC,GACRnB,EAAOmB,SAERD,OAAM,SAACC,GACRnB,EAAOmB,MApBPnB,SARAA,SARAA,SAdAA,SANAA,QA6DNJ,aAA8B,WAC5B,OAAO,IAAIE,SAAQ,SAACC,EAASC,GAC3B,IAAMM,EAAcd,EAAKc,YAEzB,GAAKA,EAAL,CAMA,IAAMK,EAAML,EAAYK,IAEnBA,EAMLL,EAAYuC,cAAc,CACxBC,SAAU,OACTtC,MAAK,SAACC,GACP,IAAMG,EAAYlB,EAAQ8C,MAAMC,MAAM,UAAUA,MAAM,WAAWA,MAAM9B,GAElEC,EAMLA,EAAUmC,SAASvC,MAAK,SAACC,GACvBlB,EAAUyB,SAAS,iBAEnBjB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAVPnB,OAYDkB,OAAM,SAACC,GACRnB,EAAOmB,MAxBPnB,SARAA,QAqCNJ,gBAAiC,SAACK,GAChC,OAAO,IAAIH,SAAQ,SAACC,EAASC,GAC3B,GAAKC,EAAL,CAMA,IAAMK,EAAcd,EAAKc,YAEzB,GAAKA,EAAL,CAMA,IAAMK,EAAML,EAAYK,IAExB,GAAKA,EAAL,CAMA,IAAMC,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAE/CC,EAMLA,EAAUoC,OAAO,CACf/C,UAAWA,IACVO,MAAK,SAACC,GACPlB,EAAUyB,SAAS,qBAEnBjB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAZPnB,SARAA,SARAA,SARAA,QAyCNJ,eAAgC,SAACM,GAC/B,OAAO,IAAIJ,SAAQ,SAACC,EAASC,GAC3B,GAAKE,EAAL,CAMA,IAAMI,EAAcd,EAAKc,YAEzB,GAAKA,EAAL,CAMA,IAAMK,EAAML,EAAYK,IAExB,GAAKA,EAAL,CAMA,IAAMC,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAE/CC,EAMLA,EAAUoC,OAAO,CACf9C,SAAUA,IACTM,MAAK,SAACC,GACPlB,EAAUyB,SAAS,oBAEnBjB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAZPnB,SARAA,SARAA,SARAA,QAyCNJ,eAAgC,SAACO,GAC/B,OAAO,IAAIL,SAAQ,SAACC,EAASC,GAC3B,GAAKG,EAAL,CAMA,IAAMG,EAAcd,EAAKc,YAEzB,GAAKA,EAAL,CAMA,IAAMK,EAAML,EAAYK,IAExB,GAAKA,EAAL,CAMA,IAAMC,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAE/CC,EAMLA,EAAUoC,OAAO,CACf7C,SAAUA,IACTK,MAAK,SAACC,GACPlB,EAAUyB,SAAS,mBAEnBjB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAZPnB,SARAA,SARAA,SARAA,QAyCNJ,mBAAoC,SAACQ,GACnC,OAAO,IAAIN,SAAQ,SAACC,EAASC,GAC3B,GAAKI,EAAL,CAMA,IAAME,EAAcd,EAAKc,YAEzB,GAAKA,EAMOA,EAAYK,IAQxBL,EAAY2C,YAAY7C,GAAcI,MAAK,SAACC,GAC1ClB,EAAUyB,SAAS,wBAEnBjB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAVPnB,SARAA,SARAA,QA+BNJ,eAAgC,SAACS,GAC/B,OAAO,IAAIP,SAAQ,SAACC,EAASC,GAC3B,GAAKK,EAAL,CAMA,IAAMC,EAAcd,EAAKc,YAEzB,GAAKA,EAAL,CAMA,IAAMK,EAAML,EAAYK,IAEnBA,EAMLL,EAAY4C,eAAe7C,GAAUG,MAAK,SAACC,GACzC,IAAMG,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAE/CC,EAMLA,EAAUoC,OAAO,CACfG,mBAAoBtE,EAASY,UAAU2D,WAAWC,oBACjD7C,MAAK,SAACC,GACPlB,EAAUyB,SAAS,mBAEnBjB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAZPnB,OAcDkB,OAAM,SAACC,GACRnB,EAAOmB,MAxBPnB,SARAA,SARAA,QA6CNJ,mBAAoC,WAClC,OAAO,IAAIE,SAAQ,SAACC,EAASC,GAC3B,IAAMM,EAAcd,EAAKc,YAEpBA,EAMLA,EAAYgD,wBAAwB9C,MAAK,SAACC,GACxClB,EAAUyB,SAAS,wBAEnBjB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAVPnB,QAeNJ,cAA+B,WAC7B,OAAO,IAAIE,SAAQ,SAACC,EAASC,GAC3B,IAAMM,EAAcd,EAAKc,YAEpBA,EAMLA,EAAYyC,SAASvC,MAAK,SAACC,GACzBlB,EAAUyB,SAAS,kBAEnBjB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAVPnB,QAeNJ,KAAsB,IAEtBA,EAAec,KAAK6C,QAAU,SAAC1D,GAC7B,IAAKA,EACH,OAAO,KAGT,IAAMI,EAAYJ,EAAOI,UACnBE,EAAWN,EAAOM,SAClBqD,EAAc3D,EAAO2D,YACrBtD,EAAWL,EAAOK,SAExB,OAAID,IAIAE,IAIAqD,IAIAtD,GAIG,SAGTN,EAAec,KAAK+C,YAAc,SAAC5D,GACjC,IAAKA,EACH,OAAO,KAGT,IAAMI,EAAYJ,EAAOI,UACnBC,EAAWL,EAAOK,SAClBsD,EAAc3D,EAAO2D,YAE3B,OAAIvD,GAAaC,EACT,GAAN,OAAUD,EAAV,YAAuBC,GAGrBsD,GAIG,MAGT5D,EAAec,KAAKgD,gBAAkB,SAAC7D,GACrC,IAAKA,EACH,OAAO,KAGT,IAAMI,EAAYJ,EAAOI,UACnBC,EAAWL,EAAOK,SAClBC,EAAWN,EAAOM,SAClBqD,EAAc3D,EAAO2D,YAE3B,OAAIvD,GAAaC,EACRD,EAAU0D,OAAO,GAAKzD,EAASyD,OAAO,GAG3C1D,EACKA,EAAU0D,OAAO,GAGtBxD,EACKA,EAASwD,OAAO,GAGrBzD,EACKA,EAASyD,OAAO,GAGrBH,EACKA,EAAYG,OAAO,GAGrB,MAGT/D,EAAec,KAAKkD,qBAAuB,SAAC/D,GAC1C,IAAKA,EACH,OAAO,KAYT,KATAA,EAAS,CACPA,EAAOiD,SACPjD,EAAOI,UACPJ,EAAOK,SACPL,EAAOM,SACPN,EAAOgE,MACPhE,EAAOgE,OAAShE,EAAOiE,gBAIvB,OAAO,KAGT,IAAIC,EAAoB,EAQxB,OANAlE,EAAOmE,SAAQ,SAACC,GACVA,IACFF,GAAqB,IAAMlE,EAAOqE,WAI/BC,KAAKC,MAAML,IAGpBnE,EAAec,KAAK2D,kBAAoB,SAAC3D,EAAM4D,GAC7C,IAAK5D,IAASA,EAAK6D,SACjB,OAAO,KAGT,IAAIC,EAAe9D,EAAK6D,SAASC,aAEjC,IAAKA,EACH,OAAO,KAGTA,EAAeC,IAAOD,GAEtB,IAAIE,EAAiB,EAErB,GAAIJ,GAAYA,EAASnB,mBAAoB,CAC3C,IAAIA,EAAqBmB,EAASnB,mBAE9BA,IACFA,EAAqBsB,IAAOtB,EAAmBwB,UAG7CD,EADEF,EAAaI,KAAKzB,EAAoB,SAAW,WAClC,GAEA,UAKnBuB,EADED,MAASG,KAAKJ,EAAc,SAAW,WACxB,GAEA,IAIrB,OAAOE,GAGM9E,Q,0YCr4BTiF,GAAS,CACbC,IAAK,CACHC,GAAI,MACJC,KAAM,MACNC,OAAQH,KAGVI,KAAM,CACJH,GAAI,OACJC,KAAM,OACNC,OAAQC,KAGVC,OAAQ,CACNJ,GAAI,SACJC,KAAM,SACNC,OAAQE,KAGVC,WAAY,CACVL,GAAI,cACJC,KAAM,cACNC,OAAQG,KAGVC,OAAQ,CACNN,GAAI,SACJC,KAAM,SACNC,OAAQI,KAGVC,KAAM,CACJP,GAAI,OACJC,KAAM,OACNC,OAAQK,KAGVC,UAAW,CACTR,GAAI,aACJC,KAAM,aACNC,OAAQM,KAGVC,KAAM,CACJT,GAAI,OACJC,KAAM,OACNC,OAAQO,KAGVC,KAAM,CACJV,GAAI,OACJC,KAAM,OACNC,OAAQQ,KAGVC,MAAO,CACLX,GAAI,QACJC,KAAM,QACNC,OAAQS,KAGVC,WAAY,CACVZ,GAAI,cACJC,KAAM,cACNC,OAAQU,MAGVC,KAAM,CACJb,GAAI,OACJC,KAAM,OACNC,OAAQW,MAGVC,OAAQ,CACNd,GAAI,SACJC,KAAM,SACNC,OAAQY,MAGVC,MAAO,CACLf,GAAI,QACJC,KAAM,QACNC,OAAQa,MAGVC,OAAQ,CACNhB,GAAI,SACJC,KAAM,SACNC,OAAQc,MAGVC,WAAY,CACVjB,GAAI,cACJC,KAAM,cACNC,OAAQe,MAGVC,MAAO,CACLlB,GAAI,QACJC,KAAM,QACNC,OAAQgB,MAGVC,KAAM,CACJnB,GAAI,OACJC,KAAM,OACNC,OAAQiB,MAGVC,SAAU,CACRpB,GAAI,YACJC,KAAM,YACNC,OAAQkB,OAINC,GAAQ,CACZC,MAAO,CACLtB,GAAI,QACJC,KAAM,SAGRsB,KAAM,CACJvB,GAAI,OACJC,KAAM,SAIJuB,GAAW,SAACC,GAChB,OAAKA,GAILA,EAAUC,IAAEC,UAAUF,GAEf3B,GAAO2B,IALL,MAQLG,GAAU,SAACC,GACf,OAAKA,EAIER,GAAMQ,GAHJ,MAMLC,GAAsBN,GAASxH,QAC/B+H,GAAwBP,GAASxH,OACjCgI,GAAcJ,GAAQ5H,SAEtBiI,GAAeC,YAAe,CAClCC,QAAS,CACPC,QAASN,GAAoB5B,OAC7BmC,UAAWN,GAAsB7B,OACjC3C,KAAMyE,GAAYhC,IAGpBsC,aAAcR,GACdS,eAAgBR,GAChBxE,KAAMyE,KAGFQ,GAAU,GAEhBA,GAAQ1C,OAASA,GACjB0C,GAAQnB,MAAQA,GAEhBmB,GAAQV,oBAAsBA,GAC9BU,GAAQT,sBAAwBA,GAChCS,GAAQR,YAAcA,GAEtBQ,GAAQP,aAAeA,GAOvBO,GAAQC,eAAiB,SAACC,GACxB,QAAKA,IAIDA,EAAMJ,aAAatC,KAAO8B,GAAoB9B,IAC9C0C,EAAMH,eAAevC,KAAO+B,GAAsB/B,IAClD0C,EAAMnF,KAAKyC,KAAOgC,GAAYhC,KAYpCwC,GAAQG,YAAc,SAACD,GACrB,IAAKA,EACH,OAAO,KAGT,IAAIJ,EAAeI,EAAMJ,aACrBC,EAAiBG,EAAMH,eACvBhF,EAAOmF,EAAMnF,KAEjB,OAAK+E,GAAiBC,GAAmBhF,GAIzC+E,EAAed,GAASc,GACxBC,EAAiBf,GAASe,GAC1BhF,EAAOqE,GAAQrE,GAEV+E,GAAiBC,GAAmBhF,EAIzCmF,EAAQR,YAAe,CACrBC,QAAS,CACPC,QAASE,EAAapC,OACtBmC,UAAWE,EAAerC,OAC1B3C,KAAMA,EAAKyC,IAGbsC,aAAcA,EACdC,eAAgBA,EAChBhF,KAAMA,IAZC,MARA,MA+BXiF,GAAQI,YAAc,SAACF,GACrB,OAAO,IAAI3H,SAAQ,SAACC,EAASC,GAC3B,GAAKyH,EAAL,CAMA,IAAIJ,EAAeI,EAAMJ,aACrBC,EAAiBG,EAAMH,eACvBhF,EAAOmF,EAAMnF,KAEjB,GAAK+E,GAAiBC,GAAmBhF,EAUzC,GAJA+E,EAAed,GAASc,GACxBC,EAAiBf,GAASe,GAC1BhF,EAAOqE,GAAQrE,GAEV+E,GAAiBC,GAAmBhF,EAAzC,CAMA,IAAMhC,EAAcd,EAAKc,YAEzB,GAAKA,EAAL,CAMA,IAAMK,EAAML,EAAYK,IAExB,GAAKA,EAAL,CAMA,IAAMC,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAE/CC,EAMLA,EAAUoC,OAAO,CACfyE,MAAO,CACLJ,aAAcA,EAAatC,GAC3BuC,eAAgBA,EAAevC,GAC/BzC,KAAMA,EAAKyC,MAEZvE,MAAK,SAACC,GACPlB,EAAUyB,SAAS,eAAgB,CACjCP,MAAO,CACL4G,aAAcA,EAAatC,GAC3BuC,eAAgBA,EAAevC,GAC/BzC,KAAMA,EAAKyC,MAIfhF,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAtBPnB,SARAA,SARAA,SARAA,SAVAA,SAVAA,QA4ENuH,GAAQK,mBAAqB,SAACP,GAC5B,OAAO,IAAIvH,SAAQ,SAACC,EAASC,GAC3B,GAAKqH,EAQL,GAFAA,EAAed,GAASc,GAExB,CAMA,IAAM/G,EAAcd,EAAKc,YAEzB,GAAKA,EAAL,CAMA,IAAMK,EAAML,EAAYK,IAExB,GAAKA,EAAL,CAMA,IAAMC,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAE/CC,EAMLA,EAAUoC,OAAO,CACf,qBAAsBqE,EAAatC,KAClCvE,MAAK,SAACC,GACPlB,EAAUyB,SAAS,uBAAwB,CACzCP,MAAO4G,EAAatC,KAGtBhF,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAdPnB,SARAA,SARAA,SARAA,SARAA,QAwDNuH,GAAQM,qBAAuB,SAACP,GAC9B,OAAO,IAAIxH,SAAQ,SAACC,EAASC,GAC3B,GAAKsH,EAQL,GAFAA,EAAiBf,GAASe,GAE1B,CAMA,IAAMhH,EAAcd,EAAKc,YAEzB,GAAKA,EAAL,CAMA,IAAMK,EAAML,EAAYK,IAExB,GAAKA,EAAL,CAMA,IAAMC,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAE/CC,EAMLA,EAAUoC,OAAO,CACf,uBAAwBsE,EAAevC,KACtCvE,MAAK,SAACC,GACPlB,EAAUyB,SAAS,yBAA0B,CAC3CP,MAAO6G,EAAevC,KAGxBhF,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAdPnB,SARAA,SARAA,SARAA,SARAA,QAwDNuH,GAAQO,WAAa,SAACxF,GACpB,OAAO,IAAIxC,SAAQ,SAACC,EAASC,GAC3B,GAAKsC,EAQL,GAFAA,EAAOqE,GAAQrE,GAEf,CAMA,IAAMhC,EAAcd,EAAKc,YAEzB,GAAKA,EAAL,CAMA,IAAMK,EAAML,EAAYK,IAExB,GAAKA,EAAL,CAMA,IAAMC,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAE/CC,EAMLA,EAAUoC,OAAO,CACf,aAAcV,EAAKyC,KAClBvE,MAAK,SAACC,GACPlB,EAAUyB,SAAS,cAAe,CAChCP,MAAO6B,EAAKyC,KAGdhF,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAdPnB,SARAA,SARAA,SARAA,SARAA,QAuDNuH,GAAQQ,WAAa,WACnB,OAAO,IAAIjI,SAAQ,SAACC,EAASC,GAC3B,IAAMM,EAAcd,EAAKc,YAEzB,GAAKA,EAAL,CAMA,IAAMK,EAAML,EAAYK,IAExB,GAAKA,EAAL,CAMA,IAAMC,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAE/CC,EAMLA,EAAUoC,OAAO,CACfyE,MAAO5I,EAASY,UAAU2D,WAAWL,WACpCvC,MAAK,SAACC,GACPlB,EAAUyB,SAAS,eAEnBjB,EAAQU,MACPS,OAAM,SAACC,GACRnB,EAAOmB,MAZPnB,SARAA,SARAA,QAiCSuH,U,SC1fAS,G,YA5Cb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,UAAU,EACVC,QAAS,MALM,E,+EAaDC,EAAOC,GAAY,IAAD,OAClCC,MAAiB,SAACC,GAChBA,EAAMC,UAAUH,GAEhB,IAAMF,EAAUG,KAAwBF,GAExC,EAAKK,SAAS,CACZN,QAASA,S,+BAKN,IAECO,EAAaC,KAAKX,MAAlBU,SAIR,OAFqBC,KAAKV,MAAlBC,SAGC,qDAGFQ,K,gDA1BuBN,GAC9B,MAAO,CAAEF,UAAU,O,GAXKU,a,oBCWbC,G,iLAVX,OACE,kBAACC,GAAA,EAAD,CAAKC,SAAS,WAAWC,IAAI,MAAMC,KAAK,OACtC,kBAACC,GAAA,EAAD,W,GAJmBN,a,kGCcrBO,G,YACJ,WAAYnB,GAAQ,IAAD,8BACjB,4CAAMA,KASRoB,UAAY,WAAO,IACT3I,EAAS,EAAKuH,MAAdvH,KAER,IAAKA,EACH,OAAO,KAGT,IAAM4I,EAAW5I,EAAKoC,SAEtB,GAAIwG,EACF,OAAQ,kBAACC,GAAA,EAAD,CAAQC,IAAI,SAASC,IAAKH,IAVpB,IAaRhF,EAAa,EAAK2D,MAAlB3D,SAER,IAAKA,EACH,OAAO,kBAAC,KAAD,MAGT,IAAMoF,EAAe9J,EAAec,KAAKgD,gBAApB,gBAChBhD,EADgB,GAEhB4D,IAGL,OAAIoF,EACK,kBAACH,GAAA,EAAD,CAAQC,IAAI,UAAUE,GAGxB,kBAAC,KAAD,OAtCU,EAyCnBC,SAAW,SAACC,GACV,IAAMC,EAAWD,EAAME,cAEvB,EAAKpB,SAAS,CACZqB,KAAM,CACJF,eA9Ca,EAmDnBG,UAAY,WACV,EAAKtB,SAAS,CACZqB,KAAM,CACJF,SAAU,SAtDG,EA2DnBI,oBAAsB,WACpB,EAAKD,YACL,EAAK/B,MAAMiC,mBA7DM,EAgEnBC,mBAAqB,WACnB,EAAKH,YACL,EAAK/B,MAAMmC,kBA/DX,EAAKlC,MAAQ,CACX6B,KAAM,CACJF,SAAU,OALG,E,sEAqEV,MAE4BjB,KAAKX,MAAhCoC,EAFD,EAECA,iBAAkB3J,EAFnB,EAEmBA,KAFnB,EASHkI,KAAKX,MAHPqC,EANK,EAMLA,aACAC,EAPK,EAOLA,cACAC,EARK,EAQLA,cAGMT,EAASnB,KAAKV,MAAd6B,KAER,OACE,kBAACU,GAAA,EAAD,CAAQC,MAAM,UAAU1B,SAAS,UAC/B,kBAAC2B,GAAA,EAAD,CAASC,QAAQ,WACf,kBAAC7B,GAAA,EAAD,CAAK8B,QAAQ,OAAOC,SAAU,GAC5B,kBAACC,GAAA,EAAD,CAAYC,MAAO,CAAEC,OAAQ,WAAaP,MAAM,UAAUE,QAAQ,KAAKM,QAASZ,GAAevL,mCAGhG2B,GACC,oCACE,kBAACyK,GAAA,EAAD,CAAYT,MAAM,UAAUU,SAAUf,EAAkBa,QAAStC,KAAKe,UACnEf,KAAKS,aAGR,kBAACgC,GAAA,EAAD,CAAMxB,SAAUE,EAAKF,SAAUyB,KAAMC,QAAQxB,EAAKF,UAAW2B,QAAS5C,KAAKoB,WACzE,kBAACyB,GAAA,EAAD,CAAUL,SAAUf,EAAkBa,QAAStC,KAAKqB,qBAApD,YACA,kBAACwB,GAAA,EAAD,CAAUL,SAAUf,EAAkBa,QAAStC,KAAKuB,oBAApD,eAKJzJ,GACA,oCACE,kBAACqI,GAAA,EAAD,CAAK2C,GAAI,GACP,kBAACC,EAAA,EAAD,CAAQjB,MAAM,YAAYU,SAAUf,EAAkBO,QAAQ,YAAYM,QAASX,GAAnF,YAGF,kBAACoB,EAAA,EAAD,CAAQjB,MAAM,YAAYU,SAAUf,EAAkBO,QAAQ,YAAYM,QAASV,GAAnF,kB,GA7GI3B,aAsHlBO,GAAIwC,aAAe,CACjBvB,kBAAkB,GAeLjB,U,sFCjITyC,G,kMACsBC,GACxB,IAAKA,EACH,OAAO,EAFwB,MAKMlD,KAAKX,MAApC8D,EALyB,EAKzBA,MAAOC,EALkB,EAKlBA,YAAaC,EALK,EAKLA,OAE5B,OAAQH,GACN,IAAK,OACH,OAAIC,GAASC,GAAeC,EACnB,EAGF,EAET,IAAK,QACH,OAAID,GAAeC,EACV,GAGJD,GAAeC,EACX,EAGLD,IAAgBC,EACX,EAGF,EAET,IAAK,cACH,OAAIA,EACK,EAGF,EAET,QACE,OAAO,K,+BAIJ,IAECC,EAAYtD,KAAKX,MAAjBiE,QAFD,EAKsCtD,KAAKX,MAA1CkE,EALD,EAKCA,KAAMJ,EALP,EAKOA,MAAOC,EALd,EAKcA,YAAaC,EAL3B,EAK2BA,OAElC,OACE,yBAAKG,UAAWF,EAAQG,QACrBF,GACC,kBAACpD,GAAA,EAAD,CAAKuD,GAAI1D,KAAK2D,0BAA0B,SACtC,kBAACC,GAAA,EAAD,CAASJ,UAAWF,EAAQC,KAAMzB,MAAM,UACrCyB,IAKNJ,GACC,kBAAChD,GAAA,EAAD,CAAKuD,GAAI1D,KAAK2D,0BAA0B,UACtC,kBAACxB,GAAA,EAAD,CAAYL,MAAM,gBAAgBE,QAAQ,MAAMmB,IAInDC,GACC,kBAACjD,GAAA,EAAD,CAAKuD,GAAI1D,KAAK2D,0BAA0B,gBACtC,kBAACxB,GAAA,EAAD,CAAYL,MAAM,gBAAgBE,QAAQ,aAAaoB,IAI1DC,GACC,kBAAClD,GAAA,EAAD,KACGkD,Q,GA1EYpD,aA6FV4D,iBA3GA,SAAChF,GAAD,MAAY,CACzB4E,OAAQ,CACNrD,SAAU,WACVC,IAAK,MACLC,KAAM,MACNwD,UAAW,wBACXC,UAAW,UAGbR,KAAM,CACJS,SAAUnF,EAAMoF,QAAQ,QAiGbJ,CAAmBZ,ICjG5BiB,G,iLACK,IAECZ,EAAYtD,KAAKX,MAAjBiE,QAKR,OAFiBtD,KAAKX,MAAdvH,KAIJ,kBAAC,GAAD,CACEyL,KAAM,kBAAC,KAAD,MACNJ,MAAM,SAMV,kBAAC,GAAD,CACEA,MAAOhN,iCACPiN,YAAY,yEACZC,OACE,kBAACc,GAAA,EAAD,CAAKrC,MAAM,YAAYsC,KAAK,sDAAsDC,IAAI,sBAAsBC,OAAO,SAAStC,QAAQ,YAClI,kBAAC,KAAD,CAAkBwB,UAAWF,EAAQiB,aADvC,gB,GAtBgBtE,aAwCX4D,iBA9CA,SAAChF,GAAD,MAAY,CACzB0F,WAAY,CACVC,YAAa3F,EAAMoF,QAAQ,OA4ChBJ,CAAmBK,I,qBCvC5BO,G,iLACK,IAECnB,EAAYtD,KAAKX,MAAjBiE,QAER,OACE,kBAAC,GAAD,CACEC,KAAM,kBAAC,KAAD,MACNJ,MAAM,oBACNC,YAAY,iDACZC,OACE,kBAACc,GAAA,EAAD,CAAKrC,MAAM,YAAY4C,UAAWC,KAAMC,GAAG,IAAI5C,QAAQ,YACrD,kBAAC,KAAD,CAAUwB,UAAWF,EAAQiB,aAD/B,kB,GAXoBtE,aAyBf4D,iBA/BA,SAAChF,GAAD,MAAY,CACzB0F,WAAY,CACVC,YAAa3F,EAAMoF,QAAQ,OA6BhBJ,CAAmBY,ICXnBI,G,iLAzBJ,IAEC/M,EAASkI,KAAKX,MAAdvH,KAER,OACE,kBAAC,KAAD,CAAegN,SAAU3O,+BACvB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO4O,KAAK,IAAIC,OAAK,GACnB,kBAAC,GAAD,CAAalN,KAAMA,KAGrB,kBAAC,KAAD,KACE,kBAAC,GAAD,a,GAbSmI,a,gFCsDNgF,G,iLA/CJ,IAECC,EAAgBlF,KAAKX,MAArB6F,YAGApN,EAASkI,KAAKX,MAAdvH,KAER,OACE,kBAACqN,GAAA,EAAWD,EACV,kBAACE,GAAA,EAAD,KAAcjP,kCAEd,kBAACkP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAMC,gBAAc,GAClB,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACElH,QAAQ,UACRC,UAAWrI,WAId2B,GACC,kBAAC0N,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACElH,QAAQ,MACRC,UAAW1G,EAAKC,SAO1B,kBAAC2N,GAAA,EAAD,KACE,kBAAC3C,EAAA,EAAD,CAAQjB,MAAM,UAAUQ,QAAS4C,EAAYtC,SAA7C,Y,GAjCgB3C,a,gLCQpB0F,G,iLACK,IAECrC,EAAYtD,KAAKX,MAAjBiE,QAFD,EAKoCtD,KAAKX,MAAxCuG,EALD,EAKCA,aAAcnE,EALf,EAKeA,iBAGdoE,EAAwB7F,KAAKX,MAA7BwG,oBAEFC,EAAgB,CACpB,CACEjN,WAAY,YACZgG,MAAOR,YAAe,CACpBC,QAAS,CACPC,QAAS,CACPwH,KAAM,UACNC,aAAc,cAIpBzC,KAAM,kBAAC,KAAD,MACNnH,KAAM,SAER,CACEvD,WAAY,eACZgG,MAAOR,YAAe,CACpBC,QAAS,CACPC,QAAS,CACPwH,KAAM,UACNC,aAAc,cAIpBzC,KAAM,kBAAC,KAAD,MACNnH,KAAM,YAER,CACEvD,WAAY,aACZgG,MAAOR,YAAe,CACpBC,QAAS,CACPC,QAAS,CACPwH,KAAM,UACNC,aAAc,cAIpBzC,KAAM,kBAAC,KAAD,MACNnH,KAAM,UAER,CACEvD,WAAY,aACZgG,MAAOR,YAAe,CACpBC,QAAS,CACPC,QAAS,CACPwH,KAAM,UACNC,aAAc,cAIpBzC,KAAM,kBAAC,KAAD,MACNnH,KAAM,UAER,CACEvD,WAAY,gBACZgG,MAAOR,YAAe,CACpBC,QAAS,CACPC,QAAS,CACPwH,KAAM,UACNC,aAAc,cAIpBzC,KAAM,kBAAC,KAAD,MACNnH,KAAM,aAER,CACEvD,WAAY,cACZgG,MAAOR,YAAe,CACpBC,QAAS,CACPC,QAAS,CACPwH,KAAM,UACNC,aAAc,cAIpBzC,KAAM,kBAAC,KAAD,MACNnH,KAAM,WAER,CACEvD,WAAY,YACZgG,MAAOR,YAAe,CACpBC,QAAS,CACPC,QAAS,CACPwH,KAAM,UACNC,aAAc,cAIpBzC,KAAM,kBAAC,KAAD,MACNnH,KAAM,UAIV,OAAIwJ,EAEA,kBAACK,GAAA,EAAD,CAAMzC,UAAWF,EAAQ4C,KAAMC,WAAS,EAACC,UAAU,SAASnC,QAAS,GAClE6B,EAAcO,KAAI,SAAChN,GAClB,OACE,kBAAC4M,GAAA,EAAD,CAAMK,IAAKjN,EAAaR,WAAY0N,MAAI,GACtC,kBAAC,IAAD,CAAkB1H,MAAOxF,EAAawF,OACpC,kBAACkE,EAAA,EAAD,CACEjB,MAAM,UACNU,SAAUf,EACV+E,WAAS,EACTC,UAAWpN,EAAakK,KACxBvB,QAAQ,YACRM,QAAS,kBAAMuD,EAAoBxM,EAAaR,cAC/CQ,EAAa+C,YAW5B,kBAAC6J,GAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASnC,QAAS,GACzC6B,EAAcO,KAAI,SAAChN,GAClB,OACE,kBAAC4M,GAAA,EAAD,CAAMK,IAAKjN,EAAaR,WAAY0N,MAAI,GACtC,kBAAC,IAAD,CAAkB1H,MAAOxF,EAAawF,OACpC,kBAACkE,EAAA,EAAD,CACEjB,MAAM,UACNU,SAAUf,EACV+E,WAAS,EACTC,UAAWpN,EAAakK,KACxBvB,QAAQ,YACRM,QAAS,kBAAMuD,EAAoBxM,EAAaR,cAC/CQ,EAAa+C,gB,GA9ID6D,aAyJ/B0F,GAAiB3C,aAAe,CAC9B4C,cAAc,EACdnE,kBAAkB,GAeLoC,qBAhLA,SAAChF,GAAD,MAAY,CACzBqH,KAAM,CACJQ,aAAc7H,EAAMoF,QAAQ,OA8KjBJ,CAAmB8B,IC3GnBgB,GAtFK,CAClBtP,UAAW,CACTuP,SAAU,CACRC,YAAY,GAGdnN,KAAM,UAGRpC,SAAU,CACRsP,SAAU,CACRC,YAAY,GAGdnN,KAAM,UAGRnC,SAAU,CACR+D,OAAQ,CACNwL,QAAS,EACTC,QAAS,IAGXH,SAAU,CACRC,YAAY,GAGdnN,KAAM,UAGRlC,aAAc,CACZyD,MAAO,CACL+L,QAAS,8BAGXJ,SAAU,CACRC,YAAY,GAGdnN,KAAM,UAGRuN,yBAA0B,CACxBhM,MAAO,CACL+L,QAAS,2CAGXE,SAAU,CACRC,UAAW,eACXH,QAAS,+DAGXJ,SAAU,CACRC,YAAY,GAGdnN,KAAM,UAGRjC,SAAU,CACR6D,OAAQ,CACNwL,QAAS,GAGXF,SAAU,CACRC,YAAY,GAGdnN,KAAM,UAGR0N,qBAAsB,CACpBF,SAAU,WAEV5L,OAAQ,CACNwL,QAAS,GAGXF,SAAU,CACRC,YAAY,GAGdnN,KAAM,WC5CJ2N,GAAe,CACnB5F,kBAAkB,EAElBjK,aAAc,GACdyP,yBAA0B,GAC1BxP,SAAU,GACV2P,qBAAsB,GAEtBE,OAAQ,MAGJC,G,YACJ,WAAYlI,GAAQ,IAAD,8BACjB,4CAAMA,KAKRmI,OAAS,WAAO,IAAD,EAMT,EAAKlI,MAJP9H,EAFW,EAEXA,aACAyP,EAHW,EAGXA,yBACAxP,EAJW,EAIXA,SACA2P,EALW,EAKXA,qBAGIE,EAASG,KAAS,CACtBjQ,aAAcA,EACdyP,yBAA0BA,EAC1BxP,SAAUA,EACV2P,qBAAsBA,GACrB,CACD5P,aAAcmP,GAAYnP,aAC1ByP,yBAA0BN,GAAYM,yBACtCxP,SAAUkP,GAAYlP,SACtB2P,qBAAsBT,GAAYS,uBAGhCE,EACF,EAAKxH,SAAS,CACZwH,OAAQA,IAGV,EAAKxH,SAAS,CACZ2B,kBAAkB,EAElB6F,OAAQ,OACP,WACDtQ,EAAe0Q,kCAAkClQ,EAAcC,GAAUG,MAAK,SAACC,GAC7E,EAAKwH,MAAM6F,YAAYtC,aACtBtK,OAAM,SAACC,GACR,IAAMoP,EAAOpP,EAAOoP,KACdX,EAAUzO,EAAOyO,QAEvB,OAAQW,GACN,IAAK,4BACL,IAAK,qBACL,IAAK,6BACL,IAAK,qBAIL,QAEE,YADA,EAAKtI,MAAMuI,aAAaZ,OAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,WAxDT,EA+DnBqG,uBAAyB,SAACjP,GACxB,EAAKiH,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAe8Q,uBAAuBjP,GAAYjB,MAAK,SAACE,GACtD,EAAKuH,MAAM6F,YAAYtC,SAAQ,WAC7B,IAAMhI,EAAc9C,EAAK8C,YACnBpD,EAAeM,EAAKmD,MAE1B,EAAKoE,MAAMuI,aAAX,uBAAwChN,GAAepD,UAExDc,OAAM,SAACC,GACR,IAAMoP,EAAOpP,EAAOoP,KACdX,EAAUzO,EAAOyO,QAEvB,OAAQW,GACN,IAAK,gDACL,IAAK,mCACL,IAAK,+BACL,IAAK,6BACL,IAAK,mDACL,IAAK,qBACL,IAAK,4BACL,IAAK,2BAIL,QAEE,YADA,EAAKtI,MAAMuI,aAAaZ,OAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,WAhGP,EAsGnBsG,eAAiB,SAAC/G,GAAW,IAAD,EAMtB,EAAK1B,MAJP9H,EAFwB,EAExBA,aACAyP,EAHwB,EAGxBA,yBACAxP,EAJwB,EAIxBA,SACA2P,EALwB,EAKxBA,qBAGF,GAAK5P,GACFyP,GACAxP,GACA2P,EAHH,CAOA,IAAMd,EAAMtF,EAAMsF,IAEdtF,EAAMgH,QAAUhH,EAAMiH,SAAWjH,EAAMkH,SAAWlH,EAAMmH,UAIhD,UAAR7B,GACF,EAAKkB,WA5HU,EAgInBY,aAAe,WACb,EAAKtI,SAASuH,KAjIG,EAoInBgB,yBAA2B,SAACrH,GAC1B,IAAMxJ,EAAewJ,EAAMsD,OAAOzM,MAElC,EAAKiI,SAAS,CACZtI,aAAcA,KAxIC,EA4InB8Q,qCAAuC,SAACtH,GACtC,IAAMiG,EAA2BjG,EAAMsD,OAAOzM,MAE9C,EAAKiI,SAAS,CACZmH,yBAA0BA,KAhJX,EAoJnBsB,qBAAuB,SAACvH,GACtB,IAAMvJ,EAAWuJ,EAAMsD,OAAOzM,MAE9B,EAAKiI,SAAS,CACZrI,SAAUA,KAxJK,EA4JnB+Q,iCAAmC,SAACxH,GAClC,IAAMoG,EAAuBpG,EAAMsD,OAAOzM,MAE1C,EAAKiI,SAAS,CACZsH,qBAAsBA,KA7JxB,EAAK9H,MAAQ+H,GAHI,E,sEAoKV,IAEC/D,EAAYtD,KAAKX,MAAjBiE,QAGA4B,EAAgBlF,KAAKX,MAArB6F,YALD,EAgBHlF,KAAKV,MARPmC,EARK,EAQLA,iBAEAjK,EAVK,EAULA,aACAyP,EAXK,EAWLA,yBACAxP,EAZK,EAYLA,SACA2P,EAbK,EAaLA,qBAEAE,EAfK,EAeLA,OAGF,OACE,kBAACnC,GAAA,EAAD,eAAQqB,WAAS,EAACiC,SAAS,MAASvD,EAApC,CAAiDwD,WAAY1I,KAAK+H,eAAgBY,SAAU3I,KAAKoI,eAC/F,kBAAChD,GAAA,EAAD,+BAIA,kBAACwD,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACxD,GAAA,EAAD,KACE,kBAACY,GAAA,EAAD,CAAME,WAAS,EAACC,UAAU,OACxB,kBAACH,GAAA,EAAD,CAAMM,MAAI,EAACuC,GAAI,GACb,kBAAC,GAAD,CACErH,iBAAkBA,EAElBoE,oBAAqB7F,KAAK8H,0BAI9B,kBAAC7B,GAAA,EAAD,CAAMM,MAAI,EAACuC,GAAI,GACb,kBAACC,GAAA,EAAD,CAASvF,UAAWF,EAAQ0F,QAASC,YAAY,cAGnD,kBAAChD,GAAA,EAAD,CAAMM,MAAI,EAACuC,GAAI,GACb,kBAAC7C,GAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASnC,QAAS,GAC1C,kBAACgC,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAACI,GAAA,EAAD,CACEC,aAAa,QACb3G,SAAUf,EACVhC,SAAU6H,IAAUA,EAAO9P,cAC3BgP,WAAS,EACT4C,WAAa9B,GAAUA,EAAO9P,aAAgB8P,EAAO9P,aAAa,GAAK,GACvE6R,MAAM,iBACNC,YAAY,eACZC,UAAQ,EACR7P,KAAK,QACL7B,MAAOL,EACPwK,QAAQ,WAERwH,SAAUxJ,KAAKqI,4BAInB,kBAACpC,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAACI,GAAA,EAAD,CACEC,aAAa,QACb3G,SAAUf,EACVhC,SAAU6H,IAAUA,EAAOL,0BAC3BT,WAAS,EACT4C,WAAa9B,GAAUA,EAAOL,yBAA4BK,EAAOL,yBAAyB,GAAK,GAC/FoC,MAAM,8BACNC,YAAY,eACZC,UAAQ,EACR7P,KAAK,QACL7B,MAAOoP,EACPjF,QAAQ,WAERwH,SAAUxJ,KAAKsI,wCAInB,kBAACrC,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAACI,GAAA,EAAD,CACEC,aAAa,eACb3G,SAAUf,EACVhC,SAAU6H,IAAUA,EAAO7P,UAC3B+O,WAAS,EACT4C,WAAa9B,GAAUA,EAAO7P,SAAY6P,EAAO7P,SAAS,GAAK,GAC/D4R,MAAM,WACNC,YAAY,uFACZC,UAAQ,EACR7P,KAAK,WACL7B,MAAOJ,EACPuK,QAAQ,WAERwH,SAAUxJ,KAAKuI,wBAInB,kBAACtC,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAACI,GAAA,EAAD,CACEC,aAAa,WACb3G,SAAUf,EACVhC,SAAU6H,IAAUA,EAAOF,sBAC3BZ,WAAS,EACT4C,WAAa9B,GAAUA,EAAOF,qBAAwBE,EAAOF,qBAAqB,GAAK,GACvFiC,MAAM,wBACNC,YAAY,uFACZC,UAAQ,EACR7P,KAAK,WACL7B,MAAOuP,EACPpF,QAAQ,WAERwH,SAAUxJ,KAAKwI,yCAS7B,kBAACI,GAAA,EAAD,CAAQa,MAAI,GACV,kBAACpE,GAAA,EAAD,KACE,kBAAC,GAAD,CACEO,cAAY,EACZnE,iBAAkBA,EAElBoE,oBAAqB7F,KAAK8H,yBAG5B,kBAAC7B,GAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASnC,QAAS,GAC1C,kBAACgC,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAACI,GAAA,EAAD,CACEC,aAAa,QACb3G,SAAUf,EACVhC,SAAU6H,IAAUA,EAAO9P,cAC3BgP,WAAS,EACT4C,WAAa9B,GAAUA,EAAO9P,aAAgB8P,EAAO9P,aAAa,GAAK,GACvE6R,MAAM,iBACNC,YAAY,eACZC,UAAQ,EACR7P,KAAK,QACL7B,MAAOL,EACPwK,QAAQ,WAERwH,SAAUxJ,KAAKqI,4BAInB,kBAACpC,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAACI,GAAA,EAAD,CACEC,aAAa,QACb3G,SAAUf,EACVhC,SAAU6H,IAAUA,EAAOL,0BAC3BT,WAAS,EACT4C,WAAa9B,GAAUA,EAAOL,yBAA4BK,EAAOL,yBAAyB,GAAK,GAC/FoC,MAAM,8BACNC,YAAY,eACZC,UAAQ,EACR7P,KAAK,QACL7B,MAAOoP,EACPjF,QAAQ,WAERwH,SAAUxJ,KAAKsI,wCAInB,kBAACrC,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAACI,GAAA,EAAD,CACEC,aAAa,eACb3G,SAAUf,EACVhC,SAAU6H,IAAUA,EAAO7P,UAC3B+O,WAAS,EACT4C,WAAa9B,GAAUA,EAAO7P,SAAY6P,EAAO7P,SAAS,GAAK,GAC/D4R,MAAM,WACNC,YAAY,uFACZC,UAAQ,EACR7P,KAAK,WACL7B,MAAOJ,EACPuK,QAAQ,WAERwH,SAAUxJ,KAAKuI,wBAInB,kBAACtC,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAACI,GAAA,EAAD,CACEC,aAAa,WACb3G,SAAUf,EACVhC,SAAU6H,IAAUA,EAAOF,sBAC3BZ,WAAS,EACT4C,WAAa9B,GAAUA,EAAOF,qBAAwBE,EAAOF,qBAAqB,GAAK,GACvFiC,MAAM,wBACNC,YAAY,uFACZC,UAAQ,EACR7P,KAAK,WACL7B,MAAOuP,EACPpF,QAAQ,WAERwH,SAAUxJ,KAAKwI,uCAOzB,kBAAC9C,GAAA,EAAD,KACE,kBAAC3C,EAAA,EAAD,CAAQjB,MAAM,UAAUQ,QAAS4C,EAAYtC,SAA7C,UAEA,kBAACG,EAAA,EAAD,CACEjB,MAAM,UACNU,UACGhL,IACAyP,IACAxP,IACA2P,GACD3F,EAEFO,QAAQ,YAERM,QAAStC,KAAKwH,QAXhB,iB,GAnXiBvH,aAkZZ4D,iBA3aA,SAAChF,GAAD,MAAY,CACzB0E,KAAM,CACJiB,YAAa3F,EAAMoF,QAAQ,KAG7B+E,QAAS,CACPU,OAAQ,QAGVxD,KAAM,CACJQ,aAAc7H,EAAMoF,QAAQ,OAiajBJ,CAAmB0D,IC7Z5BF,GAAe,CACnB5F,kBAAkB,EAElBjK,aAAc,GACdC,SAAU,GAEV6P,OAAQ,MAGJqC,G,YACJ,WAAYtK,GAAQ,IAAD,8BACjB,4CAAMA,KAKRuK,cAAgB,WAAO,IACbpS,EAAiB,EAAK8H,MAAtB9H,aAEF8P,EAASG,KAAS,CACtBjQ,aAAcA,GACb,CACDA,aAAcmP,GAAYnP,eAGxB8P,EACF,EAAKxH,SAAS,CACZwH,OAAQA,IAGV,EAAKxH,SAAS,CACZwH,OAAQ,OACP,WACD,EAAKxH,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAe4S,cAAcpS,GAAcI,MAAK,SAACC,GAC/C,EAAKwH,MAAMuI,aAAX,wCAAyDpQ,OACxDc,OAAM,SAACC,GACR,IAAMoP,EAAOpP,EAAOoP,KACdX,EAAUzO,EAAOyO,QAEvB,OAAQW,GACN,IAAK,qBACL,IAAK,gCACL,IAAK,4BACL,IAAK,6BACL,IAAK,4BACL,IAAK,iCACL,IAAK,sBAIL,QAEE,YADA,EAAKtI,MAAMuI,aAAaZ,OAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,cAjDX,EAyDnBoI,OAAS,WAAO,IAAD,EACsB,EAAKvK,MAAhC9H,EADK,EACLA,aAAcC,EADT,EACSA,SAEhB6P,EAASG,KAAS,CACtBjQ,aAAcA,EACdC,SAAUA,GACT,CACDD,aAAcmP,GAAYnP,aAC1BC,SAAUkP,GAAYlP,WAGpB6P,EACF,EAAKxH,SAAS,CACZwH,OAAQA,IAGV,EAAKxH,SAAS,CACZ2B,kBAAkB,EAElB6F,OAAQ,OACP,WACDtQ,EAAe6S,OAAOrS,EAAcC,GAAUG,MAAK,SAACE,GAClD,EAAKuH,MAAM6F,YAAYtC,SAAQ,WAC7B,IAAMhI,EAAc9C,EAAK8C,YACnBpD,EAAeM,EAAKmD,MAE1B,EAAKoE,MAAMuI,aAAX,uBAAwChN,GAAepD,UAExDc,OAAM,SAACC,GACR,IAAMoP,EAAOpP,EAAOoP,KACdX,EAAUzO,EAAOyO,QAEvB,OAAQW,GACN,IAAK,qBACL,IAAK,qBACL,IAAK,sBACL,IAAK,sBAIL,QAEE,YADA,EAAKtI,MAAMuI,aAAaZ,OAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,WAvGT,EA8GnBqG,uBAAyB,SAACjP,GACxB,EAAKiH,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAe8Q,uBAAuBjP,GAAYjB,MAAK,SAACE,GACtD,EAAKuH,MAAM6F,YAAYtC,SAAQ,WAC7B,IAAMhI,EAAc9C,EAAK8C,YACnBpD,EAAeM,EAAKmD,MAE1B,EAAKoE,MAAMuI,aAAX,uBAAwChN,GAAepD,UAExDc,OAAM,SAACC,GACR,IAAMoP,EAAOpP,EAAOoP,KACdX,EAAUzO,EAAOyO,QAEvB,OAAQW,GACN,IAAK,gDACL,IAAK,mCACL,IAAK,+BACL,IAAK,6BACL,IAAK,mDACL,IAAK,qBACL,IAAK,4BACL,IAAK,2BAIL,QAEE,YADA,EAAKtI,MAAMuI,aAAaZ,OAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,WA/IP,EAqJnBsG,eAAiB,SAAC/G,GAAW,IAAD,EACS,EAAK1B,MAAhC9H,EADkB,EAClBA,aAAcC,EADI,EACJA,SAEtB,GAAKD,GAAiBC,EAAtB,CAIA,IAAM6O,EAAMtF,EAAMsF,IAEdtF,EAAMgH,QAAUhH,EAAMiH,SAAWjH,EAAMkH,SAAWlH,EAAMmH,UAIhD,UAAR7B,GACF,EAAKuD,WAnKU,EAuKnBzB,aAAe,WACb,EAAKtI,SAASuH,KAxKG,EA2KnBgB,yBAA2B,SAACrH,GAC1B,IAAMxJ,EAAewJ,EAAMsD,OAAOzM,MAElC,EAAKiI,SAAS,CACZtI,aAAcA,KA/KC,EAmLnB+Q,qBAAuB,SAACvH,GACtB,IAAMvJ,EAAWuJ,EAAMsD,OAAOzM,MAE9B,EAAKiI,SAAS,CACZrI,SAAUA,KApLZ,EAAK6H,MAAQ+H,GAHI,E,sEA2LV,IAEC/D,EAAYtD,KAAKX,MAAjBiE,QAGA4B,EAAgBlF,KAAKX,MAArB6F,YALD,EAcHlF,KAAKV,MANPmC,EARK,EAQLA,iBAEAjK,EAVK,EAULA,aACAC,EAXK,EAWLA,SAEA6P,EAbK,EAaLA,OAGF,OACE,kBAACnC,GAAA,EAAD,eAAQqB,WAAS,EAACiC,SAAS,MAASvD,EAApC,CAAiDwD,WAAY1I,KAAK+H,eAAgBY,SAAU3I,KAAKoI,eAC/F,kBAAChD,GAAA,EAAD,gCAIA,kBAACC,GAAA,EAAD,KACE,kBAACuD,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAAC5C,GAAA,EAAD,CAAME,WAAS,EAACC,UAAU,OACxB,kBAACH,GAAA,EAAD,CAAMM,MAAI,EAACuC,GAAI,GACb,kBAAC,GAAD,CACErH,iBAAkBA,EAElBoE,oBAAqB7F,KAAK8H,0BAI9B,kBAAC7B,GAAA,EAAD,CAAMM,MAAI,EAACuC,GAAI,GACb,kBAACC,GAAA,EAAD,CAASvF,UAAWF,EAAQ0F,QAASC,YAAY,cAGnD,kBAAChD,GAAA,EAAD,CAAMM,MAAI,EAACuC,GAAI,GACb,kBAAC7C,GAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASnC,QAAS,GAC1C,kBAACgC,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAACI,GAAA,EAAD,CACEC,aAAa,QACb3G,SAAUf,EACVhC,SAAU6H,IAAUA,EAAO9P,cAC3BgP,WAAS,EACT4C,WAAa9B,GAAUA,EAAO9P,aAAgB8P,EAAO9P,aAAa,GAAK,GACvE6R,MAAM,iBACNC,YAAY,eACZC,UAAQ,EACR7P,KAAK,QACL7B,MAAOL,EACPwK,QAAQ,WAERwH,SAAUxJ,KAAKqI,4BAInB,kBAACpC,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAACI,GAAA,EAAD,CACEC,aAAa,mBACb3G,SAAUf,EACVhC,SAAU6H,IAAUA,EAAO7P,UAC3B+O,WAAS,EACT4C,WAAa9B,GAAUA,EAAO7P,SAAY6P,EAAO7P,SAAS,GAAK,GAC/D4R,MAAM,WACNC,YAAY,uFACZC,UAAQ,EACR7P,KAAK,WACL7B,MAAOJ,EACPuK,QAAQ,WAERwH,SAAUxJ,KAAKuI,4BAQ3B,kBAACK,GAAA,EAAD,CAAQa,MAAI,GACV,kBAAC,GAAD,CACE7D,cAAY,EACZnE,iBAAkBA,EAElBoE,oBAAqB7F,KAAK8H,yBAG5B,kBAAC7B,GAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASnC,QAAS,GAC1C,kBAACgC,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAACI,GAAA,EAAD,CACEC,aAAa,QACb3G,SAAUf,EACVhC,SAAU6H,IAAUA,EAAO9P,cAC3BgP,WAAS,EACT4C,WAAa9B,GAAUA,EAAO9P,aAAgB8P,EAAO9P,aAAa,GAAK,GACvE6R,MAAM,iBACNC,YAAY,eACZC,UAAQ,EACR7P,KAAK,QACL7B,MAAOL,EACPwK,QAAQ,WAERwH,SAAUxJ,KAAKqI,4BAInB,kBAACpC,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAACI,GAAA,EAAD,CACEC,aAAa,mBACb3G,SAAUf,EACVhC,SAAU6H,IAAUA,EAAO7P,UAC3B+O,WAAS,EACT4C,WAAa9B,GAAUA,EAAO7P,SAAY6P,EAAO7P,SAAS,GAAK,GAC/D4R,MAAM,WACNC,YAAY,uFACZC,UAAQ,EACR7P,KAAK,WACL7B,MAAOJ,EACPuK,QAAQ,WAERwH,SAAUxJ,KAAKuI,2BAOzB,kBAAC7C,GAAA,EAAD,KACE,kBAAC3C,EAAA,EAAD,CAAQjB,MAAM,UAAUQ,QAAS4C,EAAYtC,SAA7C,UAEA,kBAACG,EAAA,EAAD,CACEjB,MAAM,UACNU,UAAWhL,GAAgBiK,EAC3BO,QAAQ,WAERM,QAAStC,KAAK4J,eALhB,kBASA,kBAAC7G,EAAA,EAAD,CACEjB,MAAM,UACNU,UAAYhL,IAAiBC,GAAagK,EAC1CO,QAAQ,YAERM,QAAStC,KAAK6J,QALhB,iB,GAvUiB5J,aAgWZ4D,iBAvXA,SAAChF,GAAD,MAAY,CACzB0E,KAAM,CACJiB,YAAa3F,EAAMoF,QAAQ,KAG7B+E,QAAS,CACPU,OAAQ,QAGVxD,KAAM,CACJQ,aAAc7H,EAAMoF,QAAQ,OA6WjBJ,CAAmB8F,I,8XCzT5BtC,GAAe,CACnBlM,kBAAmB,EACnBW,eAAgB,EAEhBgO,aAAc,GAEdtQ,OAAQ,KACRuQ,UAAW,GACX1S,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,aAAc,GAEdiK,kBAAkB,EAClBuI,eAAe,EACfC,uBAAuB,EAEvB3C,OAAQ,MAGJ4C,G,YACJ,WAAY7K,GAAQ,IAAD,8BACjB,4CAAMA,KAKR8K,sBAAwB,WAAO,IACrBrS,EAAS,EAAKuH,MAAdvH,KAER,IAAKA,EACH,OAAO,KAJmB,MAOE,EAAKuH,MAA3BiE,EAPoB,EAOpBA,QAAS5H,EAPW,EAOXA,SAEjB,IAAKA,EACH,OAAO,kBAAC,KAAD,CAAY8H,UAAWF,EAAQ8G,aAGxC,IAAMtJ,EAAe9J,EAAec,KAAKgD,gBAApB,gBAChBhD,EADgB,GAEhB4D,IAGL,OAAIoF,GAIG,kBAAC,KAAD,CAAY0C,UAAWF,EAAQ8G,cA5BrB,EA+BnBC,aAAe,WAAO,IACZ7Q,EAAW,EAAK8F,MAAhB9F,OAEHA,GAIL,EAAKsG,SAAS,CACZ2B,kBAAkB,EAClBuI,eAAe,IACd,WACDhT,EAAesT,aAAa9Q,GAAQ5B,MAAK,SAACC,GAAW,IAAD,EACvB,EAAKwH,MAAxBvH,EAD0C,EAC1CA,KAAM4D,EADoC,EACpCA,SAEd,EAAKoE,SAAS,CACZ3E,kBAAmBnE,EAAec,KAAKkD,qBAApB,gBAA8ClD,EAA9C,GAAuD4D,MACzE,WACD,EAAK2D,MAAMuI,aAAa,wBAEzBtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,EAClBuI,eAAe,EAEfxQ,OAAQ,KACRuQ,UAAW,YAjEA,EAuEnBQ,aAAe,WAAO,IACZzS,EAAS,EAAKuH,MAAdvH,KADW,EAEW,EAAKwH,MAA3B9F,EAFW,EAEXA,OAAQuQ,EAFG,EAEHA,WAEXjS,EAAKoC,UAAaV,GAAWuQ,MAI5BjS,EAAKoC,UAAYV,GAAUuQ,GAAejS,EAAKoC,UAAYV,GAAUuQ,GACzES,IAAIC,gBAAgBV,GAEpB,EAAKjK,SAAS,CACZtG,OAAQ,KACRuQ,UAAW,KACV,WACD,EAAK1K,MAAMuI,aAAX,8BAA0CpO,EAAO4C,KAAjD,UAA0D,QAEnDtE,EAAKoC,UAAaV,GAAWuQ,GACtC,EAAKjK,SAAS,CACZ2B,kBAAkB,EAClBuI,eAAe,IACd,WACDhT,EAAeuT,eAAe3S,MAAK,SAACC,GAAW,IAAD,EACjB,EAAKwH,MAAxBvH,EADoC,EACpCA,KAAM4D,EAD8B,EAC9BA,SAEd,EAAKoE,SAAS,CACZ3E,kBAAmBnE,EAAec,KAAKkD,qBAApB,gBAA8ClD,EAA9C,GAAuD4D,MACzE,WACD,EAAK2D,MAAMuI,aAAa,wBAEzBtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,EAClBuI,eAAe,YAjHN,EAwHnBU,UAAY,SAACC,GACNA,GAIL,EAAK7K,SAAS,CACZgK,aAAca,KA9HC,EAkInBC,WAAa,SAACC,GACZ,EAAK/K,SAAS,CACZgK,aAAc,GAEdzS,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,aAAc,GAEd8P,OAAQ,OACP,WACGuD,GAAgC,oBAAbA,GACrBA,QA9Ia,EAmJnBC,gBAAkB,WAAO,IACfzT,EAAc,EAAKiI,MAAnBjI,UAEFiQ,EAASG,KAAS,CACtBpQ,UAAWA,GACV,CACDA,UAAWsP,GAAYtP,YAGrBiQ,EACF,EAAKxH,SAAS,CACZwH,OAAQA,IAMZ,EAAKxH,SAAS,CACZwH,OAAQ,OACP,WAAO,IACA5L,EAAa,EAAK2D,MAAlB3D,SAEJrE,IAAcqE,EAASrE,WAI3B,EAAKyI,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAe8T,gBAAgBzT,GAAWO,MAAK,WAAO,IAAD,EACxB,EAAKyH,MAAxBvH,EAD2C,EAC3CA,KAAM4D,EADqC,EACrCA,SAEd,EAAKoE,SAAS,CACZ3E,kBAAmBnE,EAAec,KAAKkD,qBAApB,gBAA8ClD,EAA9C,GAAuD4D,MACzE,WACD,EAAKkP,YAAW,WACd,EAAKvL,MAAMuI,aAAa,+BAG3BtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,cArMT,EA4MnBsJ,eAAiB,WAAO,IACdzT,EAAa,EAAKgI,MAAlBhI,SAEFgQ,EAASG,KAAS,CACtBnQ,SAAUA,GACT,CACDA,SAAUqP,GAAYrP,WAGpBgQ,EACF,EAAKxH,SAAS,CACZwH,OAAQA,IAMZ,EAAKxH,SAAS,CACZwH,OAAQ,OACP,WAAO,IACA5L,EAAa,EAAK2D,MAAlB3D,SAEJpE,IAAaoE,EAASpE,UAI1B,EAAKwI,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAe+T,eAAezT,GAAUM,MAAK,WAAO,IAAD,EACtB,EAAKyH,MAAxBvH,EADyC,EACzCA,KAAM4D,EADmC,EACnCA,SAEd,EAAKoE,SAAS,CACZ3E,kBAAmBnE,EAAec,KAAKkD,qBAApB,gBAA8ClD,EAA9C,GAAuD4D,MACzE,WACD,EAAKkP,YAAW,WACd,EAAKvL,MAAMuI,aAAa,8BAG3BtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,cA9PT,EAqQnBuJ,eAAiB,WAAO,IACdzT,EAAa,EAAK+H,MAAlB/H,SAEF+P,EAASG,KAAS,CACtBlQ,SAAUA,GACT,CACDA,SAAUoP,GAAYpP,WAGpB+P,EACF,EAAKxH,SAAS,CACZwH,OAAQA,IAMZ,EAAKxH,SAAS,CACZwH,OAAQ,OACP,WAAO,IACA5L,EAAa,EAAK2D,MAAlB3D,SAEJnE,IAAamE,EAASnE,UAI1B,EAAKuI,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAegU,eAAezT,GAAUK,MAAK,WAAO,IAAD,EACtB,EAAKyH,MAAxBvH,EADyC,EACzCA,KAAM4D,EADmC,EACnCA,SAEd,EAAKoE,SAAS,CACZ3E,kBAAmBnE,EAAec,KAAKkD,qBAApB,gBAA8ClD,EAA9C,GAAuD4D,MACzE,WACD,EAAKkP,YAAW,WACd,EAAKvL,MAAMuI,aAAa,6BAG3BtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,cAvTT,EA8TnBwJ,mBAAqB,WAAO,IAClBzT,EAAiB,EAAK8H,MAAtB9H,aAEF8P,EAASG,KAAS,CACtBjQ,aAAcA,GACb,CACDA,aAAcmP,GAAYnP,eAGxB8P,EACF,EAAKxH,SAAS,CACZwH,OAAQA,IAMZ,EAAKxH,SAAS,CACZwH,OAAQ,OACP,WAAO,IACAxP,EAAS,EAAKuH,MAAdvH,KAEJN,IAAiBM,EAAKmD,OAI1B,EAAK6E,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAeiU,mBAAmBzT,GAAcI,MAAK,WAAO,IAAD,EAC9B,EAAKyH,MAAxBvH,EADiD,EACjDA,KAAM4D,EAD2C,EAC3CA,SAEd,EAAKoE,SAAS,CACZ3E,kBAAmBnE,EAAec,KAAKkD,qBAApB,gBAA8ClD,EAA9C,GAAuD4D,MACzE,WACD,EAAKkP,YAAW,WACd,EAAKvL,MAAMuI,aAAa,mCAG3BtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,cAhXT,EAuXnByJ,mBAAqB,WACnB,EAAKpL,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAekU,qBAAqBtT,MAAK,WACvC,EAAKkI,SAAS,CACZmK,uBAAuB,IACtB,WACD,EAAK5K,MAAMuI,aAAa,kCAEzBtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,WA5YP,EAkZnB0J,cAAgB,WACd,EAAKrL,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAemU,gBAAgBvT,MAAK,WAClC,EAAKyH,MAAMuI,aAAa,sBACvBtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,WAnaP,EAyanB2J,YAAc,SAACT,GACb,OAAQA,GACN,IAAK,aAEH,YADA,EAAKG,kBAGP,IAAK,YAEH,YADA,EAAKC,iBAGP,IAAK,WAEH,YADA,EAAKC,iBAGP,IAAK,gBAEH,YADA,EAAKC,qBAGP,QACE,SA5ba,EAgcnBI,cAAgB,SAACrK,EAAO2J,GACtB,GAAK3J,GAAU2J,KAIX3J,EAAMgH,QAAUhH,EAAMiH,SAAWjH,EAAMkH,SAAWlH,EAAMmH,UAA5D,CAIA,IAAM7B,EAAMtF,EAAMsF,IAEbA,IAIO,WAARA,EACF,EAAKsE,aACY,UAARtE,GACT,EAAK8E,YAAYT,MAldF,EAsdnBW,mBAAqB,SAACtK,GACpB,GAAKA,EAAL,CAIA,IAAMuK,EAAQvK,EAAMsD,OAAOiH,MAE3B,GAAKA,EAAL,CAIA,IAAM/R,EAAS+R,EAAM,GAErB,GAAK/R,EAAL,CAIkB,CAChB,YACA,aACA,YACA,aACA,iBAGaC,SAASD,EAAOE,QAI3BF,EAAOG,KAAQ,UAInB,EAAKmG,SAAS,CACZtG,OAAQA,EACRuQ,UAAWS,IAAIgB,gBAAgBhS,KAC9B,WACD,EAAK6F,MAAMuI,aAAX,+BAA2CpO,EAAO4C,KAAlD,UAA2D,WA3f5C,EA+fnBqP,sBAAwB,SAACzK,GACvB,GAAKA,EAAL,CAIA,IAAM3J,EAAY2J,EAAMsD,OAAOzM,MAE/B,EAAKiI,SAAS,CACZzI,UAAWA,MAvgBI,EA2gBnBqU,qBAAuB,SAAC1K,GACtB,GAAKA,EAAL,CAIA,IAAM1J,EAAW0J,EAAMsD,OAAOzM,MAE9B,EAAKiI,SAAS,CACZxI,SAAUA,MAnhBK,EAuhBnBqU,qBAAuB,SAAC3K,GACtB,GAAKA,EAAL,CAIA,IAAMzJ,EAAWyJ,EAAMsD,OAAOzM,MAE9B,EAAKiI,SAAS,CACZvI,SAAUA,MA/hBK,EAmiBnB8Q,yBAA2B,SAACrH,GAC1B,GAAKA,EAAL,CAIA,IAAMxJ,EAAewJ,EAAMsD,OAAOzM,MAElC,EAAKiI,SAAS,CACZtI,aAAcA,MAxiBhB,EAAK8H,MAAQ+H,GAHI,E,sEA+iBT,IAAD,OAEC/D,EAAYtD,KAAKX,MAAjBiE,QAFD,EAQHtD,KAAKX,MAFPvH,EANK,EAMLA,KACA4D,EAPK,EAOLA,SAKAkQ,EACE5L,KAAKX,MADPuM,qBAZK,EAkCH5L,KAAKV,MAlBPnE,EAhBK,EAgBLA,kBACAW,EAjBK,EAiBLA,eAEAgO,EAnBK,EAmBLA,aAEArI,EArBK,EAqBLA,iBACAuI,EAtBK,EAsBLA,cAEAxQ,EAxBK,EAwBLA,OACAuQ,EAzBK,EAyBLA,UACA1S,EA1BK,EA0BLA,UACAC,EA3BK,EA2BLA,SACAC,EA5BK,EA4BLA,SACAC,EA7BK,EA6BLA,aAEAyS,EA/BK,EA+BLA,sBAEA3C,EAjCK,EAiCLA,OAGIuE,EAAenQ,GAAYA,EAASrE,UACpCyU,EAAcpQ,GAAYA,EAASpE,SACnCyU,EAAcrQ,GAAYA,EAASnE,SAEzC,OACE,kBAAC8N,GAAA,EAAD,CAAe/B,QAAS,CAAE0I,KAAM1I,EAAQ2I,gBACtC,kBAAC9L,GAAA,EAAD,CAAKuD,GAAI,GACP,kBAACkF,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAAC5C,GAAA,EAAD,CAAMiG,WAAW,SAAS/F,WAAS,GACjC,kBAACF,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAAC3I,GAAA,EAAD,CAAK4D,UAAU,UACb,kBAAC5D,GAAA,EAAD,CAAKuD,GAAI,KACLlK,GAAUuQ,GACV,kBAACoC,GAAA,EAAD,CAAO7I,QAAS,CAAE8I,MAAO9I,EAAQ8I,OAASC,aACxC,kBAACC,GAAA,EAAD,CAASnJ,MAAM,UACb,kBAACgB,GAAA,EAAD,CAAKb,QAAS,CAAEiJ,UAAWjJ,EAAQkJ,OAAS1K,MAAM,YAAYU,SAAUf,EAAkB9H,KAAK,QAAQ2I,QAAStC,KAAKuK,cACnH,kBAAC,KAAD,CAAWvG,SAAS,aAIvBgG,GACC,kBAACmC,GAAA,EAAD,CAAO7I,QAAS,CAAE8I,MAAO9I,EAAQmJ,cAAgBJ,aAC/C,kBAACK,GAAA,EAAD,CACEtK,MAAO,CAAEuK,gBAAiB,MAC1BC,GAAI5C,EACJ6C,eAAa,GACb,kBAACtM,GAAA,EAAD,CAAkB5G,KAAM,IAAKmT,UAAW,QAG1C,kBAACnM,GAAA,EAAD,CAAQ6C,UAAWF,EAAQ9J,OAAQoH,IAAI,SAASC,IAAKkJ,MAIvDC,GACA,kBAACrJ,GAAA,EAAD,CAAQ6C,UAAWF,EAAQ9J,OAAQoH,IAAI,SAASC,IAAKkJ,MAKxDvQ,IAAWuQ,GACZ,oCACGjS,EAAKoC,UACJ,kBAACiS,GAAA,EAAD,CAAO7I,QAAS,CAAE8I,MAAO9I,EAAQ8I,OAASC,aACxC,kBAACC,GAAA,EAAD,CAASnJ,MAAM,UACb,kBAACgB,GAAA,EAAD,CAAKb,QAAS,CAAEiJ,UAAWjJ,EAAQkJ,OAAS1K,MAAM,YAAYU,SAAUf,EAAkB9H,KAAK,QAAQ2I,QAAStC,KAAKuK,cACnH,kBAAC,KAAD,CAAWvG,SAAS,aAIvBgG,GACC,kBAACmC,GAAA,EAAD,CAAO7I,QAAS,CAAE8I,MAAO9I,EAAQmJ,cAAgBJ,aAC/C,kBAACK,GAAA,EAAD,CACEtK,MAAO,CAAEuK,gBAAiB,MAC1BC,GAAI5C,EACJ6C,eAAa,GACb,kBAACtM,GAAA,EAAD,CAAkB5G,KAAM,IAAKmT,UAAW,QAG1C,kBAACnM,GAAA,EAAD,CAAQ6C,UAAWF,EAAQ9J,OAAQoH,IAAI,SAASC,IAAK/I,EAAKoC,aAI5D8P,GACA,kBAACrJ,GAAA,EAAD,CAAQ6C,UAAWF,EAAQ9J,OAAQoH,IAAI,SAASC,IAAK/I,EAAKoC,aAK9DpC,EAAKoC,UACL,oCACG8P,GACC,kBAACmC,GAAA,EAAD,CAAO7I,QAAS,CAAE8I,MAAO9I,EAAQmJ,cAAgBJ,aAC/C,kBAACK,GAAA,EAAD,CACEtK,MAAO,CAAEuK,gBAAiB,MAC1BC,GAAI5C,EACJ6C,eAAa,GACb,kBAACtM,GAAA,EAAD,CAAkB5G,KAAM,IAAKmT,UAAW,QAG1C,kBAACnM,GAAA,EAAD,CAAQ6C,UAAWF,EAAQ9J,OAAQoH,IAAI,UACrC,kBAACuB,GAAA,EAAD,CAAYqB,UAAWF,EAAQxC,aAAckB,QAAQ,MAClDhC,KAAKmK,4BAMZH,GACA,kBAACrJ,GAAA,EAAD,CAAQ6C,UAAWF,EAAQ9J,OAAQoH,IAAI,UACrC,kBAACuB,GAAA,EAAD,CAAYqB,UAAWF,EAAQxC,aAAckB,QAAQ,MAClDhC,KAAKmK,6BAUpB3Q,GAAUuQ,GACV,kBAAChH,EAAA,EAAD,CAAQjB,MAAM,UAAUU,SAAUf,EAAkBgF,UAAW,kBAAC,KAAD,MAAqBzE,QAAQ,YAAYM,QAAStC,KAAKqK,cAAtH,WAKC7Q,IAAWuQ,GACZ,oCACE,2BACE5N,GAAG,eACHzC,KAAK,OACLqT,QAAM,EACNC,OAAO,UAEPxD,SAAUxJ,KAAKsL,qBAGjB,2BAAO2B,QAAQ,gBACb,kBAAClK,EAAA,EAAD,CAAQjB,MAAM,UAAU4C,UAAU,OAAOlC,SAAUf,EAAkBgF,UAAW,kBAAC,KAAD,MAAezE,QAAQ,aAAvG,iBASV,kBAACiE,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAAC3I,GAAA,EAAD,CAAK4D,UAAU,UACb,kBAAC5B,GAAA,EAAD,CAAYH,QAAQ,SAApB,sBAEuB,IAAtB7G,GACC,kBAACgH,GAAA,EAAD,CAAYL,MAAM,QAAQE,QAAQ,MAAM7G,EAAxC,KAGqB,MAAtBA,GACC,kBAACgH,GAAA,EAAD,CAAYL,MAAM,UAAUE,QAAQ,MAAM7G,EAA1C,KAGsB,IAAtBA,GAAiD,MAAtBA,GAC3B,kBAACgH,GAAA,EAAD,CAAYL,MAAM,YAAYE,QAAQ,MAAM7G,EAA5C,OAKN,kBAAC8K,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAAC3I,GAAA,EAAD,CAAK4D,UAAU,UACb,kBAAC5B,GAAA,EAAD,CAAYH,QAAQ,SAApB,mBAEoB,IAAnBlG,GACC,kBAACqG,GAAA,EAAD,CAAYL,MAAM,QAAQE,QAAQ,MAAMlG,EAAxC,KAGkB,MAAnBA,GACC,kBAACqG,GAAA,EAAD,CAAYL,MAAM,UAAUE,QAAQ,MAAMlG,EAA1C,KAGmB,IAAnBA,GAA2C,MAAnBA,GACxB,kBAACqG,GAAA,EAAD,CAAYL,MAAM,YAAYE,QAAQ,MAAMlG,EAA5C,SAOV,kBAAC8M,GAAA,EAAD,CAAQa,MAAI,GACV,kBAACtJ,GAAA,EAAD,CAAK4D,UAAU,SAASL,GAAI,GAC1B,kBAACvD,GAAA,EAAD,CAAKuD,GAAI,KACLlK,GAAUuQ,GACV,kBAACoC,GAAA,EAAD,CAAO7I,QAAS,CAAE8I,MAAO9I,EAAQ8I,OAASC,aACxC,kBAACC,GAAA,EAAD,CAASnJ,MAAM,UACb,kBAACgB,GAAA,EAAD,CAAKb,QAAS,CAAEiJ,UAAWjJ,EAAQkJ,OAAS1K,MAAM,YAAYU,SAAUf,EAAkB9H,KAAK,QAAQ2I,QAAStC,KAAKuK,cACnH,kBAAC,KAAD,CAAWvG,SAAS,aAIvBgG,GACC,kBAACmC,GAAA,EAAD,CAAO7I,QAAS,CAAE8I,MAAO9I,EAAQmJ,cAAgBJ,aAC/C,kBAACK,GAAA,EAAD,CACEtK,MAAO,CAAEuK,gBAAiB,MAC1BC,GAAI5C,EACJ6C,eAAa,GACb,kBAACtM,GAAA,EAAD,CAAkB5G,KAAM,IAAKmT,UAAW,QAG1C,kBAACnM,GAAA,EAAD,CAAQ6C,UAAWF,EAAQ9J,OAAQoH,IAAI,SAASC,IAAKkJ,MAIvDC,GACA,kBAACrJ,GAAA,EAAD,CAAQ6C,UAAWF,EAAQ9J,OAAQoH,IAAI,SAASC,IAAKkJ,MAKxDvQ,IAAWuQ,GACZ,oCACGjS,EAAKoC,UACJ,kBAACiS,GAAA,EAAD,CAAO7I,QAAS,CAAE8I,MAAO9I,EAAQ8I,OAASC,aACxC,kBAACC,GAAA,EAAD,CAASnJ,MAAM,UACb,kBAACgB,GAAA,EAAD,CAAKb,QAAS,CAAEiJ,UAAWjJ,EAAQkJ,OAAS1K,MAAM,YAAYU,SAAUf,EAAkB9H,KAAK,QAAQ2I,QAAStC,KAAKuK,cACnH,kBAAC,KAAD,CAAWvG,SAAS,aAIvBgG,GACC,kBAACmC,GAAA,EAAD,CAAO7I,QAAS,CAAE8I,MAAO9I,EAAQmJ,cAAgBJ,aAC/C,kBAAC9L,GAAA,EAAD,CAAkB5G,KAAM,IAAKmT,UAAW,OAExC,kBAACnM,GAAA,EAAD,CAAQ6C,UAAWF,EAAQ9J,OAAQoH,IAAI,SAASC,IAAK/I,EAAKoC,aAI5D8P,GACA,kBAACrJ,GAAA,EAAD,CAAQ6C,UAAWF,EAAQ9J,OAAQoH,IAAI,SAASC,IAAK/I,EAAKoC,aAK9DpC,EAAKoC,UACL,oCACG8P,GACC,kBAACmC,GAAA,EAAD,CAAO7I,QAAS,CAAE8I,MAAO9I,EAAQmJ,cAAgBJ,aAC/C,kBAACK,GAAA,EAAD,CACEtK,MAAO,CAAEuK,gBAAiB,MAC1BC,GAAI5C,EACJ6C,eAAa,GACb,kBAACtM,GAAA,EAAD,CAAkB5G,KAAM,IAAKmT,UAAW,QAG1C,kBAACnM,GAAA,EAAD,CAAQ6C,UAAWF,EAAQ9J,OAAQoH,IAAI,UACrC,kBAACuB,GAAA,EAAD,CAAYqB,UAAWF,EAAQxC,aAAckB,QAAQ,MAClDhC,KAAKmK,4BAMZH,GACA,kBAACrJ,GAAA,EAAD,CAAQ6C,UAAWF,EAAQ9J,OAAQoH,IAAI,UACrC,kBAACuB,GAAA,EAAD,CAAYqB,UAAWF,EAAQxC,aAAckB,QAAQ,MAClDhC,KAAKmK,6BAUpB3Q,GAAUuQ,GACV,kBAAChH,EAAA,EAAD,CAAQjB,MAAM,UAAUU,SAAUf,EAAkBgF,UAAW,kBAAC,KAAD,MAAqBzE,QAAQ,YAAYM,QAAStC,KAAKqK,cAAtH,WAKC7Q,IAAWuQ,GACZ,oCACE,2BACE5N,GAAG,eACHzC,KAAK,OACLqT,QAAM,EACNC,OAAO,UAEPxD,SAAUxJ,KAAKsL,qBAGjB,2BAAO2B,QAAQ,gBACb,kBAAClK,EAAA,EAAD,CAAQjB,MAAM,UAAU4C,UAAU,OAAOlC,SAAUf,EAAkBgF,UAAW,kBAAC,KAAD,MAAezE,QAAQ,aAAvG,gBAQR,kBAACiE,GAAA,EAAD,CAAME,WAAS,GACb,kBAACF,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAAC3I,GAAA,EAAD,CAAK4D,UAAU,UACb,kBAAC5B,GAAA,EAAD,CAAYH,QAAQ,SAApB,sBAEuB,IAAtB7G,GACC,kBAACgH,GAAA,EAAD,CAAYL,MAAM,QAAQE,QAAQ,MAAM7G,EAAxC,KAGqB,MAAtBA,GACC,kBAACgH,GAAA,EAAD,CAAYL,MAAM,UAAUE,QAAQ,MAAM7G,EAA1C,KAGsB,IAAtBA,GAAiD,MAAtBA,GAC3B,kBAACgH,GAAA,EAAD,CAAYL,MAAM,YAAYE,QAAQ,MAAM7G,EAA5C,OAKN,kBAAC8K,GAAA,EAAD,CAAMM,MAAI,EAACuC,IAAE,GACX,kBAAC3I,GAAA,EAAD,CAAK4D,UAAU,UACb,kBAAC5B,GAAA,EAAD,CAAYH,QAAQ,SAApB,mBAEoB,IAAnBlG,GACC,kBAACqG,GAAA,EAAD,CAAYL,MAAM,QAAQE,QAAQ,MAAMlG,EAAxC,KAGkB,MAAnBA,GACC,kBAACqG,GAAA,EAAD,CAAYL,MAAM,UAAUE,QAAQ,MAAMlG,EAA1C,KAGmB,IAAnBA,GAA2C,MAAnBA,GACxB,kBAACqG,GAAA,EAAD,CAAYL,MAAM,YAAYE,QAAQ,MAAMlG,EAA5C,UAQZ,kBAACwJ,GAAA,EAAD,CAAMC,gBAAc,GAClB,kBAACC,GAAA,EAAD,KACE,kBAACoD,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACqE,GAAA,EAAD,KACE,kBAAC,KAAD,SAIFrB,GACA,kBAACqB,GAAA,EAAD,KACE,kBAACZ,GAAA,EAAD,CAASnJ,MAAM,iBACb,kBAAC,KAAD,CAAarB,MAAM,YAKP,eAAjBgI,GACC,kBAACZ,GAAA,EAAD,CACEC,aAAa,aACbgE,WAAS,EACT3K,SAAUf,EACVhC,SAAU6H,IAAUA,EAAOjQ,WAC3BmP,WAAS,EACT4C,WAAa9B,GAAUA,EAAOjQ,UAAaiQ,EAAOjQ,UAAU,GAAK,wCACjEgS,MAAM,aACNC,YAAauC,GAAgBnQ,EAASrE,UACtCkS,UAAQ,EACR7P,KAAK,OACL7B,MAAOR,EACP2K,QAAQ,SAERoL,OAAQpN,KAAK4K,WACbyC,UAAW,SAACrM,GAAD,OAAW,EAAKqK,cAAcrK,EAAO,eAEhDwI,SAAUxJ,KAAKyL,wBAID,eAAjB3B,GACC,oCACE,kBAACrE,GAAA,EAAD,CACElH,QAAQ,aACRC,UAAWqN,EAAenQ,EAASrE,UAAY,qCAGjD,kBAACiW,GAAA,EAAD,KACGzB,GACC,kBAACS,GAAA,EAAD,CAASnJ,MAAM,UACb,6BACE,kBAACZ,GAAA,EAAD,CAAYC,SAAUf,EAAkBa,QAAS,kBAAM,EAAKoI,UAAU,gBACpE,kBAAC,KAAD,UAMNmB,GACA,kBAAC9I,EAAA,EAAD,CACEjB,MAAM,UACNU,SAAUf,EACVO,QAAQ,YACRM,QAAS,kBAAM,EAAKoI,UAAU,gBAJhC,UAaV,kBAAClF,GAAA,EAAD,KACE,kBAACoD,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACqE,GAAA,EAAD,KACE,kBAAC,KAAD,SAIFpB,GACA,kBAACoB,GAAA,EAAD,KACE,kBAACZ,GAAA,EAAD,CAASnJ,MAAM,gBACb,kBAAC,KAAD,CAAarB,MAAM,YAKP,cAAjBgI,GACC,kBAACZ,GAAA,EAAD,CACEC,aAAa,cACbgE,WAAS,EACT3K,SAAUf,EACVhC,SAAU6H,IAAUA,EAAOhQ,UAC3BkP,WAAS,EACT4C,WAAa9B,GAAUA,EAAOhQ,SAAYgQ,EAAOhQ,SAAS,GAAK,uCAC/D+R,MAAM,YACNC,YAAawC,GAAepQ,EAASpE,SACrCiS,UAAQ,EACR7P,KAAK,OACL7B,MAAOP,EACP0K,QAAQ,SAERoL,OAAQpN,KAAK4K,WACbyC,UAAW,SAACrM,GAAD,OAAW,EAAKqK,cAAcrK,EAAO,cAEhDwI,SAAUxJ,KAAK0L,uBAID,cAAjB5B,GACC,oCACE,kBAACrE,GAAA,EAAD,CACElH,QAAQ,YACRC,UAAWsN,EAAcpQ,EAASpE,SAAW,oCAG/C,kBAACgW,GAAA,EAAD,KACGxB,GACC,kBAACQ,GAAA,EAAD,CAASnJ,MAAM,UACb,6BACE,kBAACZ,GAAA,EAAD,CAAYC,SAAUf,EAAkBa,QAAS,kBAAM,EAAKoI,UAAU,eACpE,kBAAC,KAAD,UAMNoB,GACA,kBAAC/I,EAAA,EAAD,CACEjB,MAAM,UACNU,SAAUf,EACVO,QAAQ,YACRM,QAAS,kBAAM,EAAKoI,UAAU,eAJhC,UAaV,kBAAClF,GAAA,EAAD,KACE,kBAACoD,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACqE,GAAA,EAAD,KACE,kBAAC,KAAD,SAIFnB,GACA,kBAACmB,GAAA,EAAD,KACE,kBAACZ,GAAA,EAAD,CAASnJ,MAAM,eACb,kBAAC,KAAD,CAAarB,MAAM,YAKP,aAAjBgI,GACC,kBAACZ,GAAA,EAAD,CACEC,aAAa,WACbgE,WAAS,EACT3K,SAAUf,EACVhC,SAAU6H,IAAUA,EAAO/P,UAC3BiP,WAAS,EACT4C,WAAa9B,GAAUA,EAAO/P,SAAY+P,EAAO/P,SAAS,GAAK,sCAC/D8R,MAAM,WACNC,YAAayC,GAAerQ,EAASnE,SACrCgS,UAAQ,EACR7P,KAAK,OACL7B,MAAON,EACPyK,QAAQ,SAERoL,OAAQpN,KAAK4K,WACbyC,UAAW,SAACrM,GAAD,OAAW,EAAKqK,cAAcrK,EAAO,aAEhDwI,SAAUxJ,KAAK2L,uBAID,aAAjB7B,GACC,oCACE,kBAACrE,GAAA,EAAD,CACElH,QAAQ,WACRC,UAAWuN,EAAcrQ,EAASnE,SAAW,mCAG/C,kBAAC+V,GAAA,EAAD,KACGvB,GACC,kBAACO,GAAA,EAAD,CAASnJ,MAAM,UACb,6BACE,kBAACZ,GAAA,EAAD,CAAYC,SAAUf,EAAkBa,QAAS,kBAAM,EAAKoI,UAAU,cACpE,kBAAC,KAAD,UAMNqB,GACA,kBAAChJ,EAAA,EAAD,CACEjB,MAAM,UACNU,SAAUf,EACVO,QAAQ,YACRM,QAAS,kBAAM,EAAKoI,UAAU,cAJhC,UAaV,kBAAClF,GAAA,EAAD,KACE,kBAACoD,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACqE,GAAA,EAAD,KACE,kBAAC,KAAD,QAIHpV,EAAKmD,OACJ,kBAACiS,GAAA,EAAD,KACE,oCACGpV,EAAKoD,eACJ,kBAACoR,GAAA,EAAD,CAASnJ,MAAM,YACb,kBAAC,KAAD,CAAWrB,MAAM,cAInBhK,EAAKoD,eACL,kBAACoR,GAAA,EAAD,CAASnJ,MAAM,gBACb,kBAAC,KAAD,CAAarB,MAAM,cAO3BhK,EAAKmD,OACL,kBAACiS,GAAA,EAAD,KACE,kBAACZ,GAAA,EAAD,CAASnJ,MAAM,qBACb,kBAAC,KAAD,CAAarB,MAAM,YAKP,kBAAjBgI,GACC,kBAACZ,GAAA,EAAD,CACEC,aAAa,QACbgE,WAAS,EACT3K,SAAUf,EACVhC,SAAU6H,IAAUA,EAAO9P,cAC3BgP,WAAS,EACT4C,WAAa9B,GAAUA,EAAO9P,aAAgB8P,EAAO9P,aAAa,GAAK,4CACvE6R,MAAM,iBACNC,YAAaxR,EAAKmD,MAClBsO,UAAQ,EACR7P,KAAK,QACL7B,MAAOL,EACPwK,QAAQ,SAERoL,OAAQpN,KAAK4K,WACbyC,UAAW,SAACrM,GAAD,OAAW,EAAKqK,cAAcrK,EAAO,kBAEhDwI,SAAUxJ,KAAKqI,2BAID,kBAAjByB,GACC,oCACE,kBAACrE,GAAA,EAAD,CACElH,QAAQ,iBACRC,UAAW1G,EAAKmD,MAAQnD,EAAKmD,MAAQ,0CAGrCnD,EAAKmD,QAAUnD,EAAKoD,eACpB,kBAACiF,GAAA,EAAD,CAAKoN,OAAK,EAACzK,GAAI,GACb,kBAACwK,GAAA,EAAD,KACE,kBAAChB,GAAA,EAAD,CAASnJ,MAAM,UACb,6BACE,kBAACZ,GAAA,EAAD,CAAYT,MAAM,YAAYU,SAAUf,GAAoBwI,EAAuB3H,QAAStC,KAAKkL,oBAC/F,kBAAC,KAAD,WAQZ,kBAACoC,GAAA,EAAD,KACGxV,EAAKmD,OACJ,kBAACqR,GAAA,EAAD,CAASnJ,MAAM,UACb,6BACE,kBAACZ,GAAA,EAAD,CAAYC,SAAUf,EAAkBa,QAAS,kBAAM,EAAKoI,UAAU,mBACpE,kBAAC,KAAD,UAMN5S,EAAKmD,OACL,kBAAC8H,EAAA,EAAD,CACEjB,MAAM,UACNU,SAAUf,EACVO,QAAQ,YACRM,QAAS,kBAAM,EAAKoI,UAAU,mBAJhC,UAaV,kBAAClF,GAAA,EAAD,KACE,kBAACoD,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACqE,GAAA,EAAD,KACE,kBAAC,KAAD,QAIJ,kBAACtE,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACpD,GAAA,EAAD,CACElH,QAAQ,YACRC,UAAW3C,IAAO/D,EAAK6D,SAAS6R,gBAAgBC,OAAO,WAI3D,kBAAC7E,GAAA,EAAD,CAAQa,MAAI,GACV,kBAAChE,GAAA,EAAD,CACElH,QAAQ,YACRC,UAAW3C,IAAO/D,EAAK6D,SAAS6R,gBAAgBC,OAAO,YAK7D,kBAACtN,GAAA,EAAD,CAAKuN,GAAI,EAAGhK,GAAI,GACd,kBAACqF,GAAA,EAAD,CAAStL,OAAK,KAGhB,kBAAC+H,GAAA,EAAD,KACE,kBAACoD,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACqE,GAAA,EAAD,KACE,kBAAC,KAAD,QAIJ,kBAACzH,GAAA,EAAD,CACElH,QAAQ,iBACRC,UAAU,qCAGZ,kBAAC8O,GAAA,EAAD,KACE,kBAACvK,EAAA,EAAD,CAAQjB,MAAM,YAAYU,SAAUf,EAAkBO,QAAQ,YAAYM,QAASsJ,GAAnF,gB,0CAQS,IAAD,EACS5L,KAAKX,MAAxBvH,EADU,EACVA,KAAM4D,EADI,EACJA,SAEdsE,KAAKF,SAAS,CACZ3E,kBAAmBnE,EAAec,KAAKkD,qBAApB,gBAA8ClD,EAA9C,GAAuD4D,IAC1EI,eAAgB9E,EAAec,KAAK2D,kBAAkB3D,EAAM4D,O,6CAIxC,IACdqO,EAAc/J,KAAKV,MAAnByK,UAEJA,IACFS,IAAIC,gBAAgBV,GAEpB/J,KAAKF,SAAS,CACZiK,UAAW,U,GArwCM9J,aA0xCV4D,iBAr1CA,SAAChF,GAAD,MAAY,CACzBoN,cAAe,CACb0B,WAAY9O,EAAMoF,QAAQ,IAG5BmI,MAAO,CACL/L,IAAKxB,EAAMoF,QAAQ,GACnB2J,OAAQ/O,EAAMoF,QAAQ,IAGxBwI,aAAc,CACZpM,IAAK,MACLuN,MAAO,OAGTpU,OAAQ,CACNgL,YAAa,OACbqJ,WAAY,OAEZC,MAAOjP,EAAMoF,QAAQ,IACrB8J,OAAQlP,EAAMoF,QAAQ,KAGxBnD,aAAc,CACZuB,OAAQ,WAGV+H,WAAY,CACVpG,SAAUnF,EAAMoF,QAAQ,IAG1BuI,MAAO,CACLsB,MAAOjP,EAAMoF,QAAQ,GACrB8J,OAAQlP,EAAMoF,QAAQ,GAEtB+J,UAAW,cAkzCAnK,CAAmBqG,I,6FC1/BnB+D,G,YA7Wb,WAAY5O,GAAQ,IAAD,8BACjB,4CAAMA,KAOR6O,yBAA2B,SAAClN,GAC1B,GAAKA,EAAL,CAIA,IAAMvC,EAAeuC,EAAMsD,OAAOzM,MAElC,GAAK4G,EAAL,CAPoC,IAW5BI,EAAU,EAAKQ,MAAfR,MAEHA,GAIDA,EAAMJ,aAAatC,KAAOsC,GAI9B,EAAKqB,SAAS,CACZ2B,kBAAkB,IACjB,WACD9C,GAAQI,YAAY,CAClBN,aAAcA,EACdC,eAAgBG,EAAMH,eAAevC,GACrCzC,KAAMmF,EAAMnF,KAAKyC,KAChBvE,MAAK,SAACC,GACP,EAAKwH,MAAMuI,aAAa,4BACvBtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,aAjDP,EAuDnB0M,2BAA6B,SAACnN,GAC5B,GAAKA,EAAL,CAIA,IAAMtC,EAAiBsC,EAAMsD,OAAOzM,MAEpC,GAAK6G,EAAL,CAPsC,IAW9BG,EAAU,EAAKQ,MAAfR,MAEHA,GAIDA,EAAMH,eAAevC,KAAOuC,GAIhC,EAAKoB,SAAS,CACZ2B,kBAAkB,IACjB,WACD9C,GAAQI,YAAY,CAClBN,aAAcI,EAAMJ,aAAatC,GACjCuC,eAAgBA,EAChBhF,KAAMmF,EAAMnF,KAAKyC,KAChBvE,MAAK,SAACC,GACP,EAAKwH,MAAMuI,aAAa,8BACvBtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,aAhGP,EAsGnB2M,iBAAmB,SAACpN,GAClB,GAAKA,EAAL,CAIA,IAAMtH,EAAOsH,EAAMsD,OAAOzM,MAE1B,GAAK6B,EAAL,CAP4B,IAWpBmF,EAAU,EAAKQ,MAAfR,MAEHA,GAIDA,EAAMnF,KAAKyC,KAAOzC,GAItB,EAAKoG,SAAS,CACZ2B,kBAAkB,IACjB,WACD9C,GAAQI,YAAY,CAClBN,aAAcI,EAAMJ,aAAatC,GACjCuC,eAAgBG,EAAMH,eAAevC,GACrCzC,KAAMA,IACL9B,MAAK,SAACC,GACP,EAAKwH,MAAMuI,aAAa,mBACvBtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,aA/IP,EAqJnB4M,iBAAmB,WAAO,IAChBxP,EAAU,EAAKQ,MAAfR,MAEHA,IAIDF,GAAQC,eAAeC,IAI3B,EAAKiB,SAAS,CACZ2B,kBAAkB,IACjB,WACD9C,GAAQQ,aAAavH,MAAK,SAACC,GACzB,EAAKwH,MAAMuI,aAAa,kBACvBtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,YA7KxB,EAAKnC,MAAQ,CACXmC,kBAAkB,GAJH,E,sEAsLV,IAEC5C,EAAUmB,KAAKX,MAAfR,MAER,IAAKA,EACH,OAAO,KALF,IAQC4C,EAAqBzB,KAAKV,MAA1BmC,iBAER,OACE,kBAAC4D,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAMC,gBAAc,GAClB,kBAACpF,GAAA,EAAD,CAAKuD,GAAI,GACP,kBAAC8B,GAAA,EAAD,KACE,kBAAC0H,GAAA,EAAD,KACE,kBAAC,KAAD,CAAmBpL,MAAM,aAG3B,kBAACwM,GAAA,EAAD,CAAa9L,SAAUf,EAAkB+E,WAAS,GAChD,kBAAC+H,GAAA,EAAD,sBAEA,kBAAC3F,GAAA,EAAD,CAAQa,MAAI,GACV,kBAAC+E,GAAA,EAAD,CACEC,QAAM,EACN5W,MAAOgH,EAAMJ,aAAatC,GAE1BqN,SAAUxJ,KAAKkO,0BACdQ,OAAOC,KAAKhQ,GAAQ1C,QAAQoK,KAAI,SAACvE,GAGhC,OAFAA,EAAQnD,GAAQ1C,OAAO6F,GAGrB,4BAAQwE,IAAKxE,EAAM3F,GAAItE,MAAOiK,EAAM3F,IAAK2F,EAAM1F,WAMvD,kBAACwM,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAAC2F,GAAA,EAAD,CACE3W,MAAOgH,EAAMJ,aAAatC,GAE1BqN,SAAUxJ,KAAKkO,0BACdQ,OAAOC,KAAKhQ,GAAQ1C,QAAQoK,KAAI,SAACvE,GAGhC,OAFAA,EAAQnD,GAAQ1C,OAAO6F,GAGrB,kBAACe,GAAA,EAAD,CAAUyD,IAAKxE,EAAM3F,GAAItE,MAAOiK,EAAM3F,IAAK2F,EAAM1F,cAS/D,kBAAC+D,GAAA,EAAD,CAAKuD,GAAI,GACP,kBAAC8B,GAAA,EAAD,KACE,kBAAC0H,GAAA,EAAD,KACE,kBAAC,KAAD,CAAmBpL,MAAM,eAG3B,kBAACwM,GAAA,EAAD,CAAa9L,SAAUf,EAAkB+E,WAAS,GAChD,kBAAC+H,GAAA,EAAD,wBAEA,kBAAC3F,GAAA,EAAD,CAAQa,MAAI,GACV,kBAAC+E,GAAA,EAAD,CACEC,QAAM,EACN5W,MAAOgH,EAAMH,eAAevC,GAE5BqN,SAAUxJ,KAAKmO,4BACdO,OAAOC,KAAKhQ,GAAQ1C,QAAQoK,KAAI,SAACvE,GAGhC,OAFAA,EAAQnD,GAAQ1C,OAAO6F,GAGrB,4BAAQwE,IAAKxE,EAAM3F,GAAItE,MAAOiK,EAAM3F,IAAK2F,EAAM1F,WAMvD,kBAACwM,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAAC2F,GAAA,EAAD,CACE3W,MAAOgH,EAAMH,eAAevC,GAE5BqN,SAAUxJ,KAAKmO,4BACdO,OAAOC,KAAKhQ,GAAQ1C,QAAQoK,KAAI,SAACvE,GAGhC,OAFAA,EAAQnD,GAAQ1C,OAAO6F,GAGrB,kBAACe,GAAA,EAAD,CAAUyD,IAAKxE,EAAM3F,GAAItE,MAAOiK,EAAM3F,IAAK2F,EAAM1F,cAS/D,kBAAC+D,GAAA,EAAD,CAAKuD,GAAI,GACP,kBAAC8B,GAAA,EAAD,KACE,kBAAC0H,GAAA,EAAD,KACE,kBAAC,KAAD,OAGF,kBAACoB,GAAA,EAAD,CAAa9L,SAAUf,EAAkB+E,WAAS,GAChD,kBAAC+H,GAAA,EAAD,aAEA,kBAAC3F,GAAA,EAAD,CAAQa,MAAI,GACV,kBAAC+E,GAAA,EAAD,CACEC,QAAM,EACN5W,MAAOgH,EAAMnF,KAAKyC,GAElBqN,SAAUxJ,KAAKoO,kBACdM,OAAOC,KAAKhQ,GAAQnB,OAAO6I,KAAI,SAAC3M,GAG/B,OAFAA,EAAOiF,GAAQnB,MAAM9D,GAGnB,4BAAQ4M,IAAK5M,EAAKyC,GAAItE,MAAO6B,EAAKyC,IAAKzC,EAAK0C,WAMpD,kBAACwM,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAAC2F,GAAA,EAAD,CACE3W,MAAOgH,EAAMnF,KAAKyC,GAElBqN,SAAUxJ,KAAKoO,kBACdM,OAAOC,KAAKhQ,GAAQnB,OAAO6I,KAAI,SAAC3M,GAG/B,OAFAA,EAAOiF,GAAQnB,MAAM9D,GAGnB,kBAACmJ,GAAA,EAAD,CAAUyD,IAAK5M,EAAKyC,GAAItE,MAAO6B,EAAKyC,IAAKzC,EAAK0C,cAS5D,kBAAC+D,GAAA,EAAD,CAAKuN,GAAI,EAAGhK,GAAI,GACd,kBAACqF,GAAA,EAAD,CAAStL,OAAK,KAGhB,kBAAC+H,GAAA,EAAD,KACE,kBAACoD,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACqE,GAAA,EAAD,KACE,kBAAC,KAAD,QAIJ,kBAACzH,GAAA,EAAD,CACElH,QAAQ,cACRC,UAAU,0BAGZ,kBAAC8O,GAAA,EAAD,KACE,kBAACvK,EAAA,EAAD,CACEjB,MAAM,YACNU,SAAU7D,GAAQC,eAAeC,IAAU4C,EAC3CO,QAAQ,YAERM,QAAStC,KAAKqO,kBALhB,iB,GAtVcpO,a,qBCsLb2O,G,YApLb,WAAYvP,GAAQ,IAAD,8BACjB,4CAAMA,KAQRwP,iBAAmB,SAACxV,GAClB,EAAKyG,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAe6X,iBAAiBxV,EAAaR,YAAYjB,MAAK,SAACC,GAC7D,EAAKwH,MAAMuI,aAAX,UAA2BvO,EAAa+C,KAAxC,WAAuD,MACtD9D,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,WA1BP,EAgCnBqN,mBAAqB,SAACzV,GACpB,EAAKyG,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAe8X,mBAAmBzV,EAAaR,YAAYjB,MAAK,SAACC,GAC/D,EAAKwH,MAAMuI,aAAX,UAA2BvO,EAAa+C,KAAxC,aAAyD,MACxD9D,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,WA9CxB,EAAKnC,MAAQ,CACXmC,kBAAkB,GAJH,E,sEAuDT,IAAD,OAEC5C,EAAUmB,KAAKX,MAAfR,MAEA4C,EAAqBzB,KAAKV,MAA1BmC,iBAEFqE,EAAgB,CACpB,CACEjN,WAAY,YACZiJ,MAAO,UACPyB,KAAM,kBAAC,KAAD,MACNnH,KAAM,SAER,CACEvD,WAAY,eACZiJ,MAAO,UACPyB,KAAM,kBAAC,KAAD,MACNnH,KAAM,YAER,CACEvD,WAAY,aACZiJ,MAAO,UACPyB,KAAM,kBAAC,KAAD,MACNnH,KAAM,UAER,CACEvD,WAAY,aACZiJ,MAAO,UACPyB,KAAM,kBAAC,KAAD,MACNnH,KAAM,UAER,CACEvD,WAAY,gBACZiJ,MAAO,UACPyB,KAAM,kBAAC,KAAD,MACNnH,KAAM,aAER,CACEvD,WAAY,cACZiJ,MAAO,UACPyB,KAAM,kBAAC,KAAD,MACNnH,KAAM,WAER,CACEvD,WAAY,YACZiJ,MAAO,UACPyB,KAAM,kBAAC,KAAD,MACNnH,KAAM,UAIV,OACE,kBAACiJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAMC,gBAAc,GACjBO,EAAcO,KAAI,SAAChN,GAClB,IAAM0V,EAAmB/X,EAAe+X,iBAAiB1V,EAAaR,YAClEmW,EAAa,KAEjB,GAAID,EAAkB,CACpB,IAAMnU,EAAcmU,EAAiBnU,YAC/BpD,EAAeuX,EAAiB9T,MAChCgU,EAAcF,EAAiBE,YAErCD,EAAapU,GAAepD,GAAgByX,EAG9C,OACE,kBAACzJ,GAAA,EAAD,CAAUc,IAAKjN,EAAaR,YAC1B,kBAACqU,GAAA,EAAD,KACE,kBAAC/M,GAAA,EAAD,CAAK2B,MAAyB,UAAlBjD,EAAMnF,KAAKyC,GAAiB9C,EAAayI,MAAQ,MAC1DzI,EAAakK,OAIjBwL,GACC,kBAACtJ,GAAA,EAAD,CACElH,QAASlF,EAAa+C,KACtBoC,UAAWwQ,KAIbD,GACA,kBAACtJ,GAAA,EAAD,CACElH,QAASlF,EAAa+C,OAI1B,kBAACkR,GAAA,EAAD,KACGyB,GACC,kBAACzC,GAAA,EAAD,CAASnJ,MAAM,UACb,6BACE,kBAACZ,GAAA,EAAD,CAAYC,SAAUf,EAAkBa,QAAS,kBAAM,EAAKwM,mBAAmBzV,KAC7E,kBAAC,KAAD,UAMN0V,GACA,kBAACzC,GAAA,EAAD,CAASnJ,MAAM,QACb,6BACE,kBAACZ,GAAA,EAAD,CAAYC,SAAUf,EAAkBa,QAAS,kBAAM,EAAKuM,iBAAiBxV,KAC3E,kBAAC,KAAD,oB,GA9JH4G,a,qBCHjBoH,GAAe,CACnByC,aAAc,GAEdrS,SAAU,GACV2P,qBAAsB,GAEtB3F,kBAAkB,EAElB6F,OAAQ,MAkRK4H,G,YA9Qb,WAAY7P,GAAQ,IAAD,8BACjB,4CAAMA,KAKRqL,UAAY,SAACC,GACNA,GAIL,EAAK7K,SAAS,CACZgK,aAAca,KAZC,EAgBnBC,WAAa,SAACC,GACZ,EAAK/K,SAAS,CACZgK,aAAc,GAEdrS,SAAU,GACV2P,qBAAsB,GAEtBE,OAAQ,OACP,WACGuD,GAAgC,oBAAbA,GACrBA,QA1Ba,EA+BnBO,YAAc,SAACT,GACb,OAAQA,GACN,IAAK,WAAL,IACUlT,EAAa,EAAK6H,MAAlB7H,SAEF6P,EAASG,KAAS,CACtBhQ,SAAUA,GACT,CACDA,SAAUkP,GAAYlP,WAGxB,OAAI6P,OACF,EAAKxH,SAAS,CACZwH,OAAQA,SAMZ,EAAKxH,SAAS,CACZwH,OAAQ,OACP,WACD,EAAKoD,UAAU,4BAInB,IAAK,wBAEH,YADA,EAAKyE,iBAGP,QACE,SA9Da,EAkEnBA,eAAiB,WAAO,IAAD,EACsB,EAAK7P,MAAxC7H,EADa,EACbA,SAAU2P,EADG,EACHA,qBAEZE,EAASG,KAAS,CACtBhQ,SAAUA,EACV2P,qBAAsBA,GACrB,CACD3P,SAAUkP,GAAYlP,SACtB2P,qBAAsBT,GAAYS,uBAGhCE,EACF,EAAKxH,SAAS,CACZwH,OAAQA,IAMZ,EAAKxH,SAAS,CACZwH,OAAQ,OACP,WACD,EAAKxH,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAemY,eAAe1X,GAAUG,MAAK,WAC3C,EAAKgT,YAAW,WACd,EAAKvL,MAAMuI,aAAa,0BAEzBtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAK3H,MAAMuI,aAAaZ,MAG3Ba,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,cA1GT,EAiHnB4J,cAAgB,SAACrK,EAAO2J,GACtB,GAAK3J,GAAU2J,KAIX3J,EAAMgH,QAAUhH,EAAMiH,SAAWjH,EAAMkH,SAAWlH,EAAMmH,UAA5D,CAIA,IAAM7B,EAAMtF,EAAMsF,IAEbA,IAIO,WAARA,EACF,EAAKsE,aACY,UAARtE,GACT,EAAK8E,YAAYT,MAnIF,EAuInBpC,qBAAuB,SAACvH,GACtB,GAAKA,EAAL,CAIA,IAAMvJ,EAAWuJ,EAAMsD,OAAOzM,MAE9B,EAAKiI,SAAS,CACZrI,SAAUA,MA/IK,EAmJnB+Q,iCAAmC,SAACxH,GAClC,GAAKA,EAAL,CAIA,IAAMoG,EAAuBpG,EAAMsD,OAAOzM,MAE1C,EAAKiI,SAAS,CACZsH,qBAAsBA,MAxJxB,EAAK9H,MAAQ+H,GAHI,E,sEA+JT,IAAD,OAEC3L,EAAasE,KAAKX,MAAlB3D,SAFD,EAaHsE,KAAKV,MARPwK,EALK,EAKLA,aAEArS,EAPK,EAOLA,SACA2P,EARK,EAQLA,qBAEA3F,EAVK,EAULA,iBAEA6F,EAZK,EAYLA,OAGI8H,EAAqB1T,GAAYA,EAASnB,mBAEhD,OACE,kBAAC8K,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAMC,gBAAc,GAClB,kBAACC,GAAA,EAAD,KACE,kBAACoD,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACqE,GAAA,EAAD,KACE,kBAAC,KAAD,QAIc,aAAjBpD,GACC,kBAACZ,GAAA,EAAD,CACEC,aAAa,eACbgE,WAAS,EACT3K,SAAUf,EACVhC,SAAU6H,IAAUA,EAAO7P,UAC3B+O,WAAS,EACT4C,WAAa9B,GAAUA,EAAO7P,SAAY6P,EAAO7P,SAAS,GAAK,sCAC/D4R,MAAM,WACNE,UAAQ,EACR7P,KAAK,WACL7B,MAAOJ,EACPuK,QAAQ,SAERoL,OAAQpN,KAAK4K,WACbyC,UAAW,SAACrM,GAAD,OAAW,EAAKqK,cAAcrK,EAAO,aAEhDwI,SAAUxJ,KAAKuI,uBAID,0BAAjBuB,GACC,kBAACZ,GAAA,EAAD,CACEC,aAAa,eACbgE,WAAS,EACT3K,SAAUf,EACVhC,SAAU6H,IAAUA,EAAOF,sBAC3BZ,WAAS,EACT4C,WAAa9B,GAAUA,EAAOF,qBAAwBE,EAAOF,qBAAqB,GAAK,sCACvFiC,MAAM,wBACNE,UAAQ,EACR7P,KAAK,WACL7B,MAAOuP,EACPpF,QAAQ,SAERoL,OAAQpN,KAAK4K,WACbyC,UAAW,SAACrM,GAAD,OAAW,EAAKqK,cAAcrK,EAAO,0BAEhDwI,SAAUxJ,KAAKwI,mCAIA,aAAjBsB,GAAgD,0BAAjBA,GAC/B,oCACE,kBAAClB,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACpD,GAAA,EAAD,CACElH,QAAQ,WACRC,UAAW4Q,EAAkB,uBAAmBvT,IAAOH,EAASnB,mBAAmBwB,UAAU0R,OAAO,OAAU,mBAIlH,kBAAC7E,GAAA,EAAD,CAAQa,MAAI,GACV,kBAAChE,GAAA,EAAD,CACElH,QAAQ,WACRC,UAAW4Q,EAAkB,uBAAmBvT,IAAOH,EAASnB,mBAAmBwB,UAAU0R,OAAO,OAAU,mBAIlH,kBAACH,GAAA,EAAD,KACE,kBAAChB,GAAA,EAAD,CAASnJ,MAAM,UACb,6BACE,kBAACZ,GAAA,EAAD,CAAYC,SAAUf,EAAkBa,QAAS,kBAAM,EAAKoI,UAAU,cACpE,kBAAC,KAAD,kB,GAzPEzK,aCMpBoP,GAAO,CACX,CACE/I,IAAK,UACL/C,KAAM,kBAAC,KAAD,MACN8F,MAAO,WAGT,CACE/C,IAAK,aACL/C,KAAM,kBAAC,KAAD,MACN8F,MAAO,cAGT,CACE/C,IAAK,QACL/C,KAAM,kBAAC,KAAD,MACN8F,MAAO,SAGT,CACE/C,IAAK,WACL/C,KAAM,kBAAC,KAAD,MACN8F,MAAO,aAILhC,GAAe,CACnBiI,YAAa,GAGTC,G,YACJ,WAAYlQ,GAAQ,IAAD,8BACjB,4CAAMA,KAKR+I,aAAe,WACb,EAAKtI,SAASuH,KAPG,EAUnBmI,gBAAkB,SAACxO,EAAOnJ,GACxB,EAAKiI,SAAS,CACZwP,YAAazX,KAZE,EAgBnB4X,kBAAoB,SAACC,GACnB,EAAK5P,SAAS,CACZwP,YAAaI,KAff,EAAKpQ,MAAQ+H,GAHI,E,sEAsBV,IAEC/D,EAAYtD,KAAKX,MAAjBiE,QAGA4B,EAAgBlF,KAAKX,MAArB6F,YALD,EAYHlF,KAAKX,MAHPvH,EATK,EASLA,KACA4D,EAVK,EAULA,SACAmD,EAXK,EAWLA,MAKA+I,EACE5H,KAAKX,MADPuI,aAKAgE,EACE5L,KAAKX,MADPuM,qBAGM0D,EAAgBtP,KAAKV,MAArBgQ,YAER,OACE,kBAACnK,GAAA,EAAD,iBAAYD,EAAZ,CAAyByD,SAAU3I,KAAKoI,eACtC,kBAAChD,GAAA,EAAD,CAAauK,mBAAiB,GAC5B,kBAACxN,GAAA,EAAD,CAAYH,QAAQ,MAApB,YAIA,kBAACsK,GAAA,EAAD,CAASnJ,MAAM,SACb,kBAACZ,GAAA,EAAD,CAAYiB,UAAWF,EAAQsM,YAAatN,QAAS4C,EAAYtC,SAC/D,kBAAC,KAAD,SAKN,kBAACgG,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACgH,GAAA,EAAD,CACEvM,QAAS,CAAE0I,KAAM1I,EAAQ+L,MACzBjN,MAAO,CAAE0N,SAAU,UAAW9B,UAAW,WAEzC+B,eAAe,UACfC,UAAU,UACVnY,MAAOyX,EACPtN,QAAQ,YACRwH,SAAUxJ,KAAKwP,iBACdH,GAAKhJ,KAAI,SAAC4J,GACT,OACE,kBAACC,GAAA,EAAD,CAAK5J,IAAK2J,EAAI3J,IAAK/C,KAAM0M,EAAI1M,KAAM8F,MAAO4G,EAAI5G,aAMtD,kBAACT,GAAA,EAAD,CAAQa,MAAI,GACV,kBAACoG,GAAA,EAAD,CACEvM,QAAS,CAAE0I,KAAM1I,EAAQ+L,MACzBjN,MAAO,CAAE0N,SAAU,UAAW9B,UAAW,WAEzC+B,eAAe,UACfI,cAAc,MACdH,UAAU,UACVnY,MAAOyX,EACPtN,QAAQ,aACRwH,SAAUxJ,KAAKwP,iBACdH,GAAKhJ,KAAI,SAAC4J,GACT,OACE,kBAACC,GAAA,EAAD,CAAK5J,IAAK2J,EAAI3J,IAAK/C,KAAM0M,EAAI1M,KAAM8F,MAAO4G,EAAI5G,aAMtD,kBAAC,KAAD,CAAgBqG,MAAOJ,EAAac,cAAepQ,KAAKyP,mBACtD,kBAAC,GAAD,CACE3X,KAAMA,EACN4D,SAAUA,EAEVkM,aAAcA,EAEdgE,qBAAsBA,IAGxB,kBAAC,GAAD,CACE/M,MAAOA,EAEP+I,aAAcA,IAGhB,kBAAC,GAAD,CACE/I,MAAOA,EAEP+I,aAAcA,IAGhB,kBAAC,GAAD,CACE9P,KAAMA,EACN4D,SAAUA,EAEVkM,aAAcA,U,GA9HG3H,aAyJd4D,iBAnMA,SAAChF,GAAD,MAAY,CACzB+Q,YAAa,CACXxP,SAAU,WACVwN,MAAO/O,EAAMoF,QAAQ,GACrB5D,IAAKxB,EAAMoF,QAAQ,IAGrBoL,KAAM,CACJpN,QAAS,cA2LE4B,CAAmB0L,I,UCnN5BlI,GAAe,CACnB9P,SAAU,IA2HG8Y,G,YAvHb,WAAYhR,GAAQ,IAAD,8BACjB,4CAAMA,KAKR0I,eAAiB,SAAC/G,GAAW,IACnBtF,EAAa,EAAK2D,MAAlB3D,SAER,GAAIA,GAAYA,EAASnE,SAAU,CAAC,IAC1BA,EAAa,EAAK+H,MAAlB/H,SAER,IAAKA,EACH,OAGF,GAAIA,IAAamE,EAASnE,SACxB,OAIJ,IAAM+O,EAAMtF,EAAMsF,IAEdtF,EAAMgH,QAAUhH,EAAMiH,SAAWjH,EAAMkH,SAAWlH,EAAMmH,UAIhD,UAAR7B,GACF,EAAKjH,MAAM8L,iBA5BI,EAgCnB/C,aAAe,WACb,EAAKtI,SAASuH,KAjCG,EAoCnBsE,qBAAuB,SAAC3K,GACtB,IAAMzJ,EAAWyJ,EAAMsD,OAAOzM,MAE9B,EAAKiI,SAAS,CACZvI,SAAUA,KArCZ,EAAK+H,MAAQ+H,GAHI,E,sEA4CV,IAECnC,EAAgBlF,KAAKX,MAArB6F,YAFD,EAKgClF,KAAKX,MAApCoC,EALD,EAKCA,iBAAkB/F,EALnB,EAKmBA,SAGlByP,EAAkBnL,KAAKX,MAAvB8L,cAEA5T,EAAayI,KAAKV,MAAlB/H,SAEFwU,EAAcrQ,GAAYA,EAASnE,SAEzC,OACE,kBAAC4N,GAAA,EAAD,iBAAYD,EAAZ,CAAyBwD,WAAY1I,KAAK+H,eAAgBY,SAAU3I,KAAKoI,eACvE,kBAAChD,GAAA,EAAD,wBAIA,kBAACC,GAAA,EAAD,KACE,kBAAClF,GAAA,EAAD,CAAKuD,GAAIqI,EAAc,EAAI,GACzB,kBAACuE,GAAA,EAAD,yGAKCvE,GACC,kBAACuE,GAAA,EAAD,+BACyB,kBAAC1H,GAAA,EAAD,CAAQC,QAAM,GAAd,SAA6B,kBAACD,GAAA,EAAD,CAAQa,MAAI,GAAZ,OADtD,iEAOHsC,GACC,kBAAC7C,GAAA,EAAD,CACEC,aAAa,WACbgE,WAAS,EACTrL,MAAM,YACNU,SAAUf,EACV+E,WAAS,EACT6C,MAAM,WACNC,YAAa5N,EAASnE,SACtBgS,UAAQ,EACR7P,KAAK,OACL7B,MAAON,EACPyK,QAAQ,WAERwH,SAAUxJ,KAAK2L,wBAKrB,kBAACjG,GAAA,EAAD,KACE,kBAAC3C,EAAA,EAAD,CAAQjB,MAAM,YAAYU,SAAUf,EAAkBa,QAAS4C,EAAYtC,SAA3E,UACA,kBAACG,EAAA,EAAD,CAAQjB,MAAM,YAAYU,SAAUf,GAAqBsK,GAAexU,IAAamE,EAASnE,SAAWyK,QAAQ,YAAYM,QAAS6I,GAAtI,gB,GArGwBlL,aCD5BsQ,G,iLACK,IAECjN,EAAYtD,KAAKX,MAAjBiE,QAGA4B,EAAgBlF,KAAKX,MAArB6F,YALD,EAcHlF,KAAKX,MALP8D,EATK,EASLA,MACAqN,EAVK,EAULA,YACAC,EAXK,EAWLA,iBACAC,EAZK,EAYLA,iBACAC,EAbK,EAaLA,sBAGF,OAAKF,GAAoBC,IAAqBC,GAC5CC,QAAQnR,MACN,obAOK,MAIP,kBAAC0F,GAAA,EAAWD,EACT/B,GACC,kBAACiC,GAAA,EAAD,KAAcjC,GAGhB,kBAACkC,GAAA,EAAD,CAAe7B,UAAWL,EAAQ,KAAOG,EAAQuN,gBAC/C,kBAACP,GAAA,EAAD,KACGE,KAIHC,GAAoBC,GAAoBC,IACxC,kBAACjL,GAAA,EAAD,KACG+K,EACAC,EACAC,Q,GA7Ca1Q,aAoEX4D,iBA1EA,SAAChF,GAAD,MAAY,CACzBgS,eAAgB,CACdlD,WAAY9O,EAAMoF,QAAQ,OAwEfJ,CAAmB0M,ICkEnBO,G,iLA1IJ,MAKH9Q,KAAKX,MAFPvH,EAHK,EAGLA,KACAiZ,EAJK,EAILA,QAGIC,EAAcD,EAAQC,YACtBC,EAAeF,EAAQE,aACvBC,EAAeH,EAAQG,aACvBC,EAAiBJ,EAAQI,eACzBC,EAAsBL,EAAQK,oBAC9BC,EAAgBN,EAAQM,cAE9B,OACE,oCACE,kBAAC,GAAD,eACEnM,YAAa8L,EAAY9L,aAErB8L,EAAY3R,QAGjBvH,GACC,oCACE,kBAAC,GAAD,eACEoN,YAAamM,EAAcnM,aAEvBmM,EAAchS,SAKxB,kBAACuJ,GAAA,EAAD,CAAQC,QAAM,GACX/Q,GACC,oCACE,kBAAC,GAAD,eACEoN,YAAakM,EAAoBlM,aAE7BkM,EAAoB/R,UAK5BvH,GACA,oCACE,kBAAC,GAAD,eACEoN,YAAa+L,EAAa/L,aAEtB+L,EAAa5R,QAGnB,kBAAC,GAAD,eACE6F,YAAagM,EAAahM,aAEtBgM,EAAa7R,UAMzB,kBAACuJ,GAAA,EAAD,CAAQ0I,QAAM,GACXxZ,GACC,oCACE,kBAAC,GAAD,eACEoN,YAAaiM,EAAejM,aAExBiM,EAAe9R,UAM3B,kBAACuJ,GAAA,EAAD,CAAQa,MAAI,GACT3R,GACC,oCACE,kBAAC,GAAD,eACEoN,YAAW,cACTqM,YAAY,GAETH,EAAoBlM,cAGrBkM,EAAoB/R,UAK5BvH,GACA,oCACE,kBAAC,GAAD,eACEoN,YAAW,cACTqM,YAAY,GAETN,EAAa/L,cAGd+L,EAAa5R,QAGnB,kBAAC,GAAD,eACE6F,YAAW,cACTqM,YAAY,GAETL,EAAahM,cAGdgM,EAAa7R,UAMzB,kBAACuJ,GAAA,EAAD,CAAQ4I,MAAI,GACT1Z,GACC,oCACE,kBAAC,GAAD,eACEoN,YAAW,cACTqM,YAAY,GAETJ,EAAejM,cAGhBiM,EAAe9R,e,GA3HVY,aC6eVwR,G,YAreb,WAAYpS,GAAQ,IAAD,8BACjB,4CAAMA,KA0CRqS,WAAa,SAACC,EAAU9G,GACtB,IAAM+G,EAAS,EAAKtS,MAAMqS,GAErBC,QAA0BC,IAAhBD,EAAOlP,OAItBkP,EAAOlP,MAAO,EAEd,EAAK5C,SAAS,CAAE8R,UAAU/G,KApDT,EAuDnBiH,YAAc,SAACH,EAAU9G,GACvB,IAAM+G,EAAS,EAAKtS,MAAMqS,GAErBC,QAA0BC,IAAhBD,EAAOlP,OAItBkP,EAAOlP,MAAO,EAEd,EAAK5C,SAAS,CAAE8R,UAAU/G,KAhET,EAmEnBkH,gBAAkB,SAAClH,GACjB,EAAK/K,SAAS,CACZkR,YAAa,CACXtO,MAAM,GAGRuO,aAAc,CACZvO,MAAM,GAGRwO,aAAc,CACZxO,MAAM,GAGRyO,eAAgB,CACdzO,MAAM,GAGR0O,oBAAqB,CACnB1O,MAAM,GAGR2O,cAAe,CACb3O,MAAM,IAEPmI,IA5Fc,EA+FnBM,cAAgB,WACd,EAAKrL,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAemU,gBAAgBvT,MAAK,WAClC,EAAKma,iBAAgB,WACnB,EAAKnK,aAAa,yBAEnBtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAKY,aAAaZ,MAGrBa,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,WAlHP,EAwHnBnI,QAAU,WACR,EAAKwG,SAAS,CACZ2B,kBAAkB,IACjB,WACDzK,EAAesC,UAAU1B,MAAK,WAC5B,EAAKma,iBAAgB,WACnB,EAAKnK,aAAa,oBAEnBtP,OAAM,SAACC,GACKA,EAAOoP,KAApB,IACMX,EAAUzO,EAAOyO,QAInB,EAAKY,aAAaZ,MAGrBa,SAAQ,WACT,EAAK/H,SAAS,CACZ2B,kBAAkB,WA3IP,EAiJnBmG,aAAe,SAACZ,GAA6C,IAApCgL,EAAmC,uDAAhB,EAAGnH,EAAa,uCAC1D,EAAK/K,SAAS,CACZmS,SAAU,CACRD,iBAAkBE,IAAYlL,GAASmL,KAAOH,EAC9ChL,UACAtE,MAAM,KAEP,WACGmI,GAAgC,oBAAbA,GACrBA,QA1Ja,EA+JnBuH,cAAgB,WAA2B,IAA1BC,EAAyB,wDAChCJ,EAAa,EAAK3S,MAAlB2S,SAER,EAAKnS,SAAS,CACZmS,SAAU,CACRjL,QAASqL,EAAe,GAAKJ,EAASjL,QACtCtE,MAAM,MAlKV,EAAKpD,MAAQ,CACXxH,KAAM,KACN4D,SAAU,KACVmD,MAAOF,GAAQP,aAEfkU,OAAO,EACP7Q,kBAAkB,EAElBuP,YAAa,CACXtO,MAAM,GAGRuO,aAAc,CACZvO,MAAM,GAGRwO,aAAc,CACZxO,MAAM,GAGRyO,eAAgB,CACdzO,MAAM,GAGR0O,oBAAqB,CACnB1O,MAAM,GAGR2O,cAAe,CACb3O,MAAM,GAGRuP,SAAU,CACRD,iBAAkB,EAClBhL,QAAS,GACTtE,MAAM,IAtCO,E,sEA0KT,IAAD,SAOH1C,KAAKV,MALPxH,EAFK,EAELA,KACA4D,EAHK,EAGLA,SACAmD,EAJK,EAILA,MACAyT,EALK,EAKLA,MACA7Q,EANK,EAMLA,iBANK,EAgBHzB,KAAKV,MANP0R,EAVK,EAULA,YACAC,EAXK,EAWLA,aACAC,EAZK,EAYLA,aACAC,EAbK,EAaLA,eACAC,EAdK,EAcLA,oBACAC,EAfK,EAeLA,cAGMY,EAAajS,KAAKV,MAAlB2S,SAER,OACE,kBAAC,IAAD,CAAkBpT,MAAOA,GACvB,kBAAC0T,EAAA,EAAD,MAEA,kBAAC,GAAD,MACID,GACA,kBAAC,GAAD,MAGDA,GACC,oCACE,kBAAC,GAAD,CACE7Q,iBAAkBA,EAElB3J,KAAMA,EACN4D,SAAUA,EAEVgG,aAAc,kBAAM,EAAKgQ,WAAW,gBAEpC/P,cAAe,kBAAM,EAAK+P,WAAW,iBACrC9P,cAAe,kBAAM,EAAK8P,WAAW,iBAErCpQ,gBAAiB,kBAAM,EAAKoQ,WAAW,mBACvClQ,eAAgB,kBAAM,EAAKkQ,WAAW,oBAGxC,kBAAC,GAAD,CAAQ5Z,KAAMA,IAEd,kBAAC,GAAD,CACEA,KAAMA,EACNiZ,QACE,CACEC,YAAa,CACX9L,YAAa,CACXxC,KAAMsO,EAAYtO,KAElBE,QAAS,kBAAM,EAAKkP,YAAY,iBAGlCzS,MAAO,CACLvH,KAAMA,IAIVmZ,aAAc,CACZ/L,YAAa,CACXxC,KAAMuO,EAAavO,KAEnBE,QAAS,SAACiI,GACR,EAAKiH,YAAY,gBAEbjH,GAAgC,oBAAbA,GACrBA,MAKNxL,MAAO,CACLoC,iBAAkBA,EAElBmG,aAAc5H,KAAK4H,eAIvBsJ,aAAc,CACZhM,YAAa,CACXxC,KAAMwO,EAAaxO,KAEnBE,QAAS,SAACiI,GACR,EAAKiH,YAAY,gBAEbjH,GAAgC,oBAAbA,GACrBA,MAKNxL,MAAO,CACLoC,iBAAkBA,EAElBmG,aAAc5H,KAAK4H,eAIvBuJ,eAAgB,CACdjM,YAAa,CACXxC,KAAMyO,EAAezO,KAErBE,QAAS,kBAAM,EAAKkP,YAAY,oBAGlCzS,MAAO,CACLvH,KAAMA,EACN4D,SAAUA,EACVmD,MAAOA,EAEP+I,aAAc5H,KAAK4H,aAEnBgE,qBAAsB,kBAAM,EAAK8F,WAAW,0BAIhDN,oBAAqB,CACnBlM,YAAa,CACXxC,KAAM0O,EAAoB1O,KAE1BE,QAAS,kBAAM,EAAKkP,YAAY,yBAGlCzS,MAAO,CACLoC,iBAAkBA,EAClB/F,SAAUA,EAEVyP,cAAenL,KAAKmL,gBAIxBkG,cAAe,CACbnM,YAAa,CACXxC,KAAM2O,EAAc3O,KAEpBE,QAAS,kBAAM,EAAKkP,YAAY,mBAGlCzS,MAAO,CACL8D,MAAO,YACPqN,YAAa,wHACbC,iBAAkB,kBAAC1N,EAAA,EAAD,CAAQjB,MAAM,UAAUQ,QAAS,kBAAM,EAAKwP,YAAY,mBAAxD,UAClBpB,iBAAkB,kBAAC3N,EAAA,EAAD,CAAQjB,MAAM,UAAUU,SAAUf,EAAkBO,QAAQ,YAAYM,QAAStC,KAAK1G,SAAtF,iBAO5B,kBAACkZ,EAAA,EAAD,CACER,iBAAkBC,EAASD,iBAC3BhL,QAASiL,EAASjL,QAClBtE,KAAMuP,EAASvP,KACfE,QAAS5C,KAAKoS,qB,0CASP,IAAD,OAClBpS,KAAKyS,SAAU,EAEfzS,KAAK0S,+BAAiC9b,EAAK+b,oBAAmB,SAAC7a,GAC7D,IAAKA,EAeH,OAdI,EAAK8a,yBACP,EAAKA,+BAGH,EAAKH,SACP,EAAK3S,SAAS,CACZhI,KAAM,KACN4D,SAAU,KACVmD,MAAOF,GAAQP,aAEfkU,OAAO,KAOb,IAAMva,EAAMD,EAAKC,IAEjB,IAAKA,EAeH,OAdI,EAAK6a,yBACP,EAAKA,+BAGH,EAAKH,SACP,EAAK3S,SAAS,CACZhI,KAAM,KACN4D,SAAU,KACVmD,MAAOF,GAAQP,aAEfkU,OAAO,KAOb,IAAMta,EAAYnB,EAAUoB,WAAW,SAASC,IAAIH,GAEpD,IAAKC,EAeH,OAdI,EAAK4a,yBACP,EAAKA,+BAGH,EAAKH,SACP,EAAK3S,SAAS,CACZhI,KAAM,KACN4D,SAAU,KACVmD,MAAOF,GAAQP,aAEfkU,OAAO,KAOb,EAAKM,wBAA0B5a,EAAU6a,YAAW,SAACC,GACnD,GAAKA,EAASla,OAAd,CAcA,IAAMma,EAAOD,EAASC,OAEjBA,GAcDA,EAAKlU,MACP,EAAKiB,SAAS,CACZjB,MAAOF,GAAQG,YAAYiU,EAAKlU,SAGlC,EAAKiB,SAAS,CACZjB,MAAOF,GAAQP,eAIf,EAAKqU,SACP,EAAK3S,SAAS,CACZhI,KAAMA,EACN4D,SAAUqX,EAEVT,OAAO,KA5BL,EAAKG,SACP,EAAK3S,SAAS,CACZhI,KAAM,KACN4D,SAAU,KACVmD,MAAOF,GAAQP,aAEfkU,OAAO,SAtBP,EAAKG,SACP,EAAK3S,SAAS,CACZhI,KAAM,KACN4D,SAAU,KACVmD,MAAOF,GAAQP,aAEfkU,OAAO,OAyCZ,SAAC7S,GACE,EAAKgT,SACP,EAAK3S,SAAS,CACZhI,KAAM,KACN4D,SAAU,KACVmD,MAAOF,GAAQP,aAEfkU,OAAO,IACN,WACY7S,EAAMkI,KAAnB,IACMX,EAAUvH,EAAMuH,QAIlB,EAAKY,aAAaZ,c,6CAU1BhH,KAAK0S,gCACP1S,KAAK0S,iCAGH1S,KAAK4S,yBACP5S,KAAK4S,0BAGP5S,KAAKyS,SAAU,M,GAleDxS,aCRZ+S,GAAcrQ,QACW,cAA7BsQ,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT1b,MAAK,SAAA+b,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvU,QACfkU,UAAUC,cAAcO,YAI1BpD,QAAQqD,IACN,gHAKEV,GAAUA,EAAOW,UACnBX,EAAOW,SAASP,KAMlB/C,QAAQqD,IAAI,sCAGRV,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUR,WAO5Brb,OAAM,SAAAmH,GACLmR,QAAQnR,MAAM,4CAA6CA,MCxFjEE,IAAY,CACVyU,IAAK,6DACLC,QAAQ,GAAD,OAAKle,6BAAL,YAAmCA,WAG5Cme,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDS1C,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIhJ,IAAIrU,8BAAwB8c,OAAOC,SAAS9O,MACpDsQ,SAAWzB,OAAOC,SAASwB,OAIvC,OAGFzB,OAAO0B,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,UAAMnd,8BAAN,sBAEP6c,KAgEV,SAAiCM,EAAOC,GAEtCqB,MAAMtB,GACH1b,MAAK,SAAAid,GAEJ,IAAMC,EAAcD,EAASE,QAAQrc,IAAI,gBAEnB,MAApBmc,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CzB,UAAUC,cAAcnB,MAAM1a,MAAK,SAAA+b,GACjCA,EAAauB,aAAatd,MAAK,WAC7Bqb,OAAOC,SAASiC,eAKpB9B,GAAgBC,EAAOC,MAG1Bjb,OAAM,WACLsY,QAAQqD,IACN,oEArFAmB,CAAwB9B,EAAOC,GAI/BC,UAAUC,cAAcnB,MAAM1a,MAAK,WACjCgZ,QAAQqD,IACN,gHAMJZ,GAAgBC,EAAOC,OChC/BE,K","file":"static/js/main.eff5337d.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\n\nimport 'firebase/analytics';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/performance';\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n});\n\nexport default firebase;\nexport const analytics = firebase.analytics();\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\nexport const performance = firebase.performance();\n","import firebase, { analytics, auth, firestore, storage } from '../firebase';\n\nimport moment from 'moment';\n\nconst avatarFileTypes = [\n  'image/gif',\n  'image/jpeg',\n  'image/png',\n  'image/webp',\n  'image/svg+xml'\n];\n\nconst authentication = {};\n\nauthentication.signUp = (fields) => {\n  return new Promise((resolve, reject) => {\n    if (!fields) {\n      reject();\n\n      return;\n    }\n\n    const firstName = fields.firstName;\n    const lastName = fields.lastName;\n    const username = fields.username;\n    const emailAddress = fields.emailAddress;\n    const password = fields.password;\n\n    if (!firstName || !lastName || !username || !emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n      const user = value.user;\n\n      if (!user) {\n        reject();\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        reject();\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.set({\n        firstName: firstName,\n        lastName: lastName,\n        username: username\n      }).then((value) => {\n        analytics.logEvent('sign_up', {\n          method: 'password'\n        });\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signUpWithEmailAddressAndPassword = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n      const user = value.user;\n\n      if (!user) {\n        reject();\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        reject();\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.set({}, { merge: true }).then((value) => {\n        analytics.logEvent('sign_up', {\n          method: 'password'\n        });\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signIn = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signInWithEmailAndPassword(emailAddress, password).then((value) => {\n      const user = value.user;\n\n      if (!user) {\n        reject();\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        reject();\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.get({ source: 'server' }).then((value) => {\n        if (value.exists) {\n          analytics.logEvent('login', {\n            method: 'password'\n          });\n\n          resolve(user);\n        } else {\n          reference.set({}, { merge: true }).then((value) => {\n            analytics.logEvent('login', {\n              method: 'password'\n            });\n\n            resolve(user);\n          }).catch((reason) => {\n            reject(reason);\n          });\n        }\n      }).catch((reason => {\n        reject(reason);\n      }));\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signInWithAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signInWithPopup(provider).then((value) => {\n      const user = value.user;\n\n      if (!user) {\n        reject();\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        reject();\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.get({ source: 'server' }).then((value) => {\n        if (value.exists) {\n          analytics.logEvent('login', {\n            method: providerId\n          });\n\n          resolve(user);\n        } else {\n          reference.set({}, { merge: true }).then((value) => {\n            analytics.logEvent('login', {\n              method: providerId\n            });\n\n            resolve(user);\n          }).catch((reason) => {\n            reject(reason);\n          });\n        }\n      }).catch((reason => {\n        reject(reason);\n      }));\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.linkAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.linkWithPopup(provider).then((value) => {\n      analytics.logEvent('link_auth_provider', {\n        value: providerId\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.unlinkAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.unlink(providerId).then((value) => {\n      analytics.logEvent('unlink_auth_provider', {\n        value: providerId\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.authProviderData = (providerId) => {\n  if (!providerId) {\n    return;\n  }\n\n  const currentUser = auth.currentUser;\n\n  if (!currentUser) {\n    return;\n  }\n\n  const providerData = currentUser.providerData;\n\n  if (!providerData) {\n    return;\n  }\n\n  return providerData.find(authProvider => authProvider.providerId === providerId);\n};\n\nauthentication.signOut = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signOut().then((value) => {\n      analytics.logEvent('sign_out');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.resetPassword = (emailAddress) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.sendPasswordResetEmail(emailAddress).then((value) => {\n      analytics.logEvent('reset_password');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeAvatar = (avatar) => {\n  return new Promise((resolve, reject) => {\n    if (!avatar) {\n      reject();\n\n      return;\n    }\n\n    if (!avatarFileTypes.includes(avatar.type)) {\n      reject();\n\n      return;\n    }\n\n    if (avatar.size > (20 * 1024 * 1024)) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = storage.ref().child('images').child('avatars').child(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.put(avatar).then((uploadTaskSnapshot) => {\n      reference.getDownloadURL().then((value) => {\n        currentUser.updateProfile({\n          photoURL: value\n        }).then((value) => {\n          analytics.logEvent('change_avatar');\n\n          resolve(value);\n        }).catch((reason) => {\n          reject(reason);\n        });\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.removeAvatar = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updateProfile({\n      photoURL: null\n    }).then((value) => {\n      const reference = storage.ref().child('images').child('avatars').child(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.delete().then((value) => {\n        analytics.logEvent('remove_avatar');\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeFirstName = (firstName) => {\n  return new Promise((resolve, reject) => {\n    if (!firstName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      firstName: firstName\n    }).then((value) => {\n      analytics.logEvent('change_first_name');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeLastName = (lastName) => {\n  return new Promise((resolve, reject) => {\n    if (!lastName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      lastName: lastName\n    }).then((value) => {\n      analytics.logEvent('change_last_name');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeUsername = (username) => {\n  return new Promise((resolve, reject) => {\n    if (!username) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      username: username\n    }).then((value) => {\n      analytics.logEvent('change_username');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeEmailAddress = (emailAddress) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updateEmail(emailAddress).then((value) => {\n      analytics.logEvent('change_email_address');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changePassword = (password) => {\n  return new Promise((resolve, reject) => {\n    if (!password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updatePassword(password).then((value) => {\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.update({\n        lastPasswordChange: firebase.firestore.FieldValue.serverTimestamp()\n      }).then((value) => {\n        analytics.logEvent('change_password');\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.verifyEmailAddress = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.sendEmailVerification().then((value) => {\n      analytics.logEvent('verify_email_address');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.deleteAccount = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.delete().then((value) => {\n      analytics.logEvent('delete_account');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.user = {};\n\nauthentication.user.getName = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n  const lastName = fields.lastName;\n\n  if (firstName) {\n    return firstName;\n  }\n\n  if (username) {\n    return username;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  if (lastName) {\n    return lastName;\n  }\n\n  return null;\n};\n\nauthentication.user.getFullName = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return `${firstName} ${lastName}`;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  return null;\n};\n\nauthentication.user.getNameInitials = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return firstName.charAt(0) + lastName.charAt(0);\n  }\n\n  if (firstName) {\n    return firstName.charAt(0);\n  }\n\n  if (username) {\n    return username.charAt(0);\n  }\n\n  if (lastName) {\n    return lastName.charAt(0);\n  }\n\n  if (displayName) {\n    return displayName.charAt(0);\n  }\n\n  return null;\n};\n\nauthentication.user.getProfileCompletion = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  fields = [\n    fields.photoURL,\n    fields.firstName,\n    fields.lastName,\n    fields.username,\n    fields.email,\n    fields.email && fields.emailVerified\n  ];\n\n  if (!fields) {\n    return null;\n  }\n\n  let profileCompletion = 0;\n\n  fields.forEach((field) => {\n    if (field) {\n      profileCompletion += 100 / fields.length;\n    }\n  });\n\n  return Math.floor(profileCompletion);\n};\n\nauthentication.user.getSecurityRating = (user, userData) => {\n  if (!user || !user.metadata) {\n    return null;\n  }\n\n  let creationTime = user.metadata.creationTime;\n\n  if (!creationTime) {\n    return null;\n  }\n\n  creationTime = moment(creationTime);\n\n  let securityRating = 0;\n\n  if (userData && userData.lastPasswordChange) {\n    let lastPasswordChange = userData.lastPasswordChange;\n\n    if (lastPasswordChange) {\n      lastPasswordChange = moment(lastPasswordChange.toDate());\n\n      if (creationTime.diff(lastPasswordChange, 'days') >= 365.242199) {\n        securityRating = 50;\n      } else {\n        securityRating = 100;\n      }\n    }\n  } else {\n    if (moment().diff(creationTime, 'days') >= 365.242199) {\n      securityRating = 50;\n    } else {\n      securityRating = 100;\n    }\n  }\n\n  return securityRating;\n};\n\nexport default authentication;\n","import _ from 'lodash';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nimport firebase, { analytics, auth, firestore } from '../firebase';\n\nconst colors = {\n  red: {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n\n  pink: {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n\n  purple: {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n\n  deepPurple: {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n\n  indigo: {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n\n  blue: {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n\n  lightBlue: {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n\n  cyan: {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n\n  teal: {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n\n  green: {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n\n  lightGreen: {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n\n  lime: {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n\n  yellow: {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n\n  amber: {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n\n  orange: {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n\n  deepOrange: {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n\n  brown: {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n\n  gray: {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n\n  blueGray: {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n};\n\nconst types = {\n  light: {\n    id: 'light',\n    name: 'Light'\n  },\n\n  dark: {\n    id: 'dark',\n    name: 'Dark'\n  }\n};\n\nconst getColor = (colorId) => {\n  if (!colorId) {\n    return null;\n  }\n\n  colorId = _.camelCase(colorId);\n\n  return colors[colorId];\n};\n\nconst getType = (typeId) => {\n  if (!typeId) {\n    return null;\n  }\n\n  return types[typeId];\n};\n\nconst defaultPrimaryColor = getColor(process.env.REACT_APP_THEME_PRIMARY_COLOR);\nconst defaultSecondaryColor = getColor(process.env.REACT_APP_THEME_SECONDARY_COLOR);\nconst defaultType = getType(process.env.REACT_APP_THEME_TYPE);\n\nconst defaultTheme = createMuiTheme({\n  palette: {\n    primary: defaultPrimaryColor.import,\n    secondary: defaultSecondaryColor.import,\n    type: defaultType.id\n  },\n\n  primaryColor: defaultPrimaryColor,\n  secondaryColor: defaultSecondaryColor,\n  type: defaultType\n});\n\nconst theming = {};\n\ntheming.colors = colors;\ntheming.types = types;\n\ntheming.defaultPrimaryColor = defaultPrimaryColor;\ntheming.defaultSecondaryColor = defaultSecondaryColor;\ntheming.defaultType = defaultType;\n\ntheming.defaultTheme = defaultTheme;\n\n/**\n * Returns whether a theme is the default theme.\n * @param theme\n * @returns {boolean}\n */\ntheming.isDefaultTheme = (theme) => {\n  if (!theme) {\n    return false;\n  }\n\n  if (theme.primaryColor.id === defaultPrimaryColor.id &&\n      theme.secondaryColor.id === defaultSecondaryColor.id &&\n      theme.type.id === defaultType.id) {\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Creates a Material-UI theme from a JSON theme object.\n * @param theme\n * @returns {null|Theme}\n */\ntheming.createTheme = (theme) => {\n  if (!theme) {\n    return null;\n  }\n\n  let primaryColor = theme.primaryColor;\n  let secondaryColor = theme.secondaryColor;\n  let type = theme.type;\n\n  if (!primaryColor || !secondaryColor || !type) {\n    return null;\n  }\n\n  primaryColor = getColor(primaryColor);\n  secondaryColor = getColor(secondaryColor);\n  type = getType(type);\n\n  if (!primaryColor || !secondaryColor || !type) {\n    return null;\n  }\n\n  theme = createMuiTheme({\n    palette: {\n      primary: primaryColor.import,\n      secondary: secondaryColor.import,\n      type: type.id\n    },\n\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor,\n    type: type\n  });\n\n  return theme;\n};\n\n/**\n * Changes the theme for the current user.\n * @param theme\n * @returns {Promise<unknown>}\n */\ntheming.changeTheme = (theme) => {\n  return new Promise((resolve, reject) => {\n    if (!theme) {\n      reject();\n\n      return;\n    }\n\n    let primaryColor = theme.primaryColor;\n    let secondaryColor = theme.secondaryColor;\n    let type = theme.type;\n\n    if (!primaryColor || !secondaryColor || !type) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n    secondaryColor = getColor(secondaryColor);\n    type = getType(type);\n\n    if (!primaryColor || !secondaryColor || !type) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      theme: {\n        primaryColor: primaryColor.id,\n        secondaryColor: secondaryColor.id,\n        type: type.id\n      }\n    }).then((value) => {\n      analytics.logEvent('change_theme', {\n        value: {\n          primaryColor: primaryColor.id,\n          secondaryColor: secondaryColor.id,\n          type: type.id\n        }\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Changes the primary color for the current user.\n * @param primaryColor\n * @returns {Promise<unknown>}\n */\ntheming.changePrimaryColor = (primaryColor) => {\n  return new Promise((resolve, reject) => {\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      'theme.primaryColor': primaryColor.id\n    }).then((value) => {\n      analytics.logEvent('change_primary_color', {\n        value: primaryColor.id\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Changes the secondary color for the current user.\n * @param secondaryColor\n * @returns {Promise<unknown>}\n */\ntheming.changeSecondaryColor = (secondaryColor) => {\n  return new Promise((resolve, reject) => {\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    secondaryColor = getColor(secondaryColor);\n\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      'theme.secondaryColor': secondaryColor.id\n    }).then((value) => {\n      analytics.logEvent('change_secondary_color', {\n        value: secondaryColor.id\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Changes the type for the current user.\n * @param type\n * @returns {Promise<unknown>}\n */\ntheming.changeType = (type) => {\n  return new Promise((resolve, reject) => {\n    if (!type) {\n      reject();\n\n      return;\n    }\n\n    type = getType(type);\n\n    if (!type) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      'theme.type': type.id\n    }).then((value) => {\n      analytics.logEvent('change_type', {\n        value: type.id\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Resets the theme for the current user.\n * @returns {Promise<unknown>}\n */\ntheming.resetTheme = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      theme: firebase.firestore.FieldValue.delete()\n    }).then((value) => {\n      analytics.logEvent('reset_theme');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nexport default theming;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport * as Sentry from '@sentry/browser';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n      eventId: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo);\n\n      const eventId = Sentry.captureException(error);\n\n      this.setState({\n        eventId: eventId\n      });\n    });\n  }\n\n  render() {\n    // Properties\n    const { children } = this.props;\n\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  // Properties\n  children: PropTypes.array.isRequired\n};\n\nexport default ErrorBoundary;\n","import React, {Component} from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass LaunchScreen extends Component {\n  render() {\n    return (\n      <Box position=\"absolute\" top=\"50%\" left=\"50%\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n}\n\nLaunchScreen.propTypes = {};\n\nexport default LaunchScreen;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport authentication from '../../services/authentication';\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  getAvatar = () => {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    const photoUrl = user.photoURL;\n\n    if (photoUrl) {\n      return (<Avatar alt=\"Avatar\" src={photoUrl} />);\n    }\n\n    const { userData } = this.props;\n\n    if (!userData) {\n      return <PersonIcon />;\n    }\n\n    const nameInitials = authentication.user.getNameInitials({\n      ...user,\n      ...userData\n    });\n\n    if (nameInitials) {\n      return <Avatar alt=\"Avatar\">{nameInitials}</Avatar>;\n    }\n\n    return <PersonIcon />;\n  };\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Properties\n    const { performingAction, user } = this.props;\n\n    // Events\n    const {\n      onTitleClick,\n      onSignUpClick,\n      onSignInClick\n    } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Box display=\"flex\" flexGrow={1}>\n            <Typography style={{ cursor: 'pointer' }} color=\"inherit\" variant=\"h6\" onClick={onTitleClick}>{process.env.REACT_APP_TITLE}</Typography>\n          </Box>\n\n          {user &&\n            <>\n              <IconButton color=\"inherit\" disabled={performingAction} onClick={this.openMenu}>\n                {this.getAvatar()}\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem disabled={performingAction} onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem disabled={performingAction} onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </>\n          }\n\n          {!user &&\n            <>\n              <Box mr={1}>\n                <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              </Box>\n\n              <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.defaultProps = {\n  performingAction: false\n};\n\nBar.propTypes = {\n  // Properties\n  performingAction: PropTypes.bool.isRequired,\n  user: PropTypes.object,\n  userData: PropTypes.object,\n\n  // Events\n  onTitleClick: PropTypes.func.isRequired,\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default Bar;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  },\n\n  icon: {\n    fontSize: theme.spacing(12)\n  }\n});\n\nclass EmptyState extends Component {\n  getMarginBottomForSection(section) {\n    if (!section) {\n      return 0;\n    }\n\n    const { title, description, button } = this.props;\n\n    switch (section) {\n      case 'icon':\n        if (title || description || button) {\n          return 1;\n        }\n\n        return 0;\n\n      case 'title':\n        if (description && button) {\n          return 1;\n        }\n\n        if (!description && button) {\n          return 2;\n        }\n\n        if (description && !button) {\n          return 1;\n        }\n\n        return 0;\n\n      case 'description':\n        if (button) {\n          return 2;\n        }\n\n        return 0;\n\n      default:\n        return 0;\n    }\n  }\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { icon, title, description, button } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon &&\n          <Box mb={this.getMarginBottomForSection('icon')}>\n            <SvgIcon className={classes.icon} color=\"action\">\n              {icon}\n            </SvgIcon>\n          </Box>\n        }\n\n        {title &&\n          <Box mb={this.getMarginBottomForSection('title')}>\n            <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>\n          </Box>\n        }\n\n        {description &&\n          <Box mb={this.getMarginBottomForSection('description')}>\n            <Typography color=\"textSecondary\" variant=\"subtitle1\">{description}</Typography>\n          </Box>\n        }\n\n        {button &&\n          <Box>\n            {button}\n          </Box>\n        }\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  button: PropTypes.element\n};\n\nexport default withStyles(styles)(EmptyState);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nimport EmptyState from '../EmptyState';\n\nconst styles = (theme) => ({\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass HomeContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user } = this.props;\n\n    if (user) {\n      return (\n        <EmptyState\n          icon={<HomeIcon />}\n          title=\"Home\"\n        />\n      );\n    }\n\n    return (\n      <EmptyState\n        title={process.env.REACT_APP_TITLE}\n        description=\"The three musketeers, all in one pack in the form of a boilerplate app\"\n        button={\n          <Fab color=\"secondary\" href=\"https://github.com/Phoqe/react-material-ui-firebase\" rel=\"noopener noreferrer\" target=\"_blank\" variant=\"extended\">\n            <GitHubCircleIcon className={classes.buttonIcon} />\n            GitHub\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nHomeContent.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  user: PropTypes.object\n};\n\nexport default withStyles(styles)(HomeContent);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport FindIcon from '@material-ui/icons/FindInPage';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../EmptyState';\n\nconst styles = (theme) => ({\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass NotFoundContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<FindIcon />}\n        title=\"Content Not Found\"\n        description=\"The requested URL was not found on this server\"\n        button={\n          <Fab color=\"secondary\" component={Link} to=\"/\" variant=\"extended\">\n            <HomeIcon className={classes.buttonIcon} /> Go Home\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nNotFoundContent.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NotFoundContent);\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types';\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport HomeContent from '../HomeContent';\nimport NotFoundContent from '../NotFoundContent';\n\nclass Router extends Component {\n  render() {\n    // Properties\n    const { user } = this.props;\n\n    return (\n      <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomeContent user={user} />\n          </Route>\n\n          <Route>\n            <NotFoundContent />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nRouter.propTypes = {\n  // Properties\n  user: PropTypes.object\n};\n\nexport default Router;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Button from '@material-ui/core/Button';\n\nclass AboutDialog extends Component {\n  render() {\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { user } = this.props;\n\n    return (\n      <Dialog {...dialogProps}>\n        <DialogTitle>{process.env.REACT_APP_TITLE}</DialogTitle>\n\n        <DialogContent>\n          <List disablePadding>\n            <ListItem>\n              <ListItemText\n                primary=\"Version\"\n                secondary={process.env.REACT_APP_VERSION}\n              />\n            </ListItem>\n\n            {user &&\n              <ListItem>\n                <ListItemText\n                  primary=\"UID\"\n                  secondary={user.uid}\n                />\n              </ListItem>\n            }\n          </List>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={dialogProps.onClose}>OK</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nAboutDialog.propTypes = {\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  user: PropTypes.object,\n};\n\nexport default AboutDialog;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { createMuiTheme, withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport AppleIcon from 'mdi-material-ui/Apple';\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport MicrosoftIcon from 'mdi-material-ui/Microsoft';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport YahooIcon from 'mdi-material-ui/Yahoo';\n\nconst styles = (theme) => ({\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nclass AuthProviderList extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { gutterBottom, performingAction } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    const authProviders = [\n      {\n        providerId: 'apple.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#000000',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <AppleIcon />,\n        name: 'Apple'\n      },\n      {\n        providerId: 'facebook.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#3c5a99',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <FacebookBoxIcon />,\n        name: 'Facebook'\n      },\n      {\n        providerId: 'github.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#24292e',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <GitHubCircleIcon />,\n        name: 'GitHub'\n      },\n      {\n        providerId: 'google.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#4285f4',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <GoogleIcon />,\n        name: 'Google'\n      },\n      {\n        providerId: 'microsoft.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#f65314',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <MicrosoftIcon />,\n        name: 'Microsoft'\n      },\n      {\n        providerId: 'twitter.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#1da1f2',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <TwitterIcon />,\n        name: 'Twitter'\n      },\n      {\n        providerId: 'yahoo.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#410093',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <YahooIcon />,\n        name: 'Yahoo'\n      }\n    ];\n\n    if (gutterBottom) {\n      return (\n        <Grid className={classes.grid} container direction=\"column\" spacing={1}>\n          {authProviders.map((authProvider) => {\n            return (\n              <Grid key={authProvider.providerId} item>\n                <MuiThemeProvider theme={authProvider.theme}>\n                  <Button\n                    color=\"primary\"\n                    disabled={performingAction}\n                    fullWidth\n                    startIcon={authProvider.icon}\n                    variant=\"contained\"\n                    onClick={() => onAuthProviderClick(authProvider.providerId)}>\n                    {authProvider.name}\n                  </Button>\n                </MuiThemeProvider>\n              </Grid>\n            );\n          })}\n        </Grid>\n      );\n    }\n\n    return (\n      <Grid container direction=\"column\" spacing={1}>\n        {authProviders.map((authProvider) => {\n          return (\n            <Grid key={authProvider.providerId} item>\n              <MuiThemeProvider theme={authProvider.theme}>\n                <Button\n                  color=\"primary\"\n                  disabled={performingAction}\n                  fullWidth\n                  startIcon={authProvider.icon}\n                  variant=\"contained\"\n                  onClick={() => onAuthProviderClick(authProvider.providerId)}>\n                  {authProvider.name}\n                </Button>\n              </MuiThemeProvider>\n            </Grid>\n          );\n        })}\n      </Grid>\n    );\n  }\n}\n\nAuthProviderList.defaultProps = {\n  gutterBottom: false,\n  performingAction: false\n};\n\nAuthProviderList.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  gutterBottom: PropTypes.bool,\n  performingAction: PropTypes.bool,\n\n  // Events\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AuthProviderList);\n","const constraints = {\n  firstName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  lastName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  username: {\n    length: {\n      minimum: 2,\n      maximum: 20\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  emailAddress: {\n    email: {\n      message: '^E-mail address is invalid'\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  emailAddressConfirmation: {\n    email: {\n      message: '^E-mail address confirmation is invalid'\n    },\n\n    equality: {\n      attribute: 'emailAddress',\n      message: '^E-mail address confirmation is not equal to e-mail address'\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  password: {\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  passwordConfirmation: {\n    equality: 'password',\n\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n};\n\nexport default constraints;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthProviderList from '../AuthProviderList';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = (theme) => ({\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: 'auto'\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n\n  emailAddress: '',\n  emailAddressConfirmation: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const {\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress,\n      emailAddressConfirmation: emailAddressConfirmation,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }, {\n      emailAddress: constraints.emailAddress,\n      emailAddressConfirmation: constraints.emailAddressConfirmation,\n      password: constraints.password,\n      passwordConfirmation: constraints.passwordConfirmation\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState({\n        performingAction: true,\n\n        errors: null\n      }, () => {\n        authentication.signUpWithEmailAddressAndPassword(emailAddress, password).then((value) => {\n          this.props.dialogProps.onClose();\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            case 'auth/email-already-in-use':\n            case 'auth/invalid-email':\n            case 'auth/operation-not-allowed':\n            case 'auth/weak-password':\n              this.props.openSnackbar(message);\n              return;\n\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    }\n  };\n\n  signInWithAuthProvider = (providerId) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.signInWithAuthProvider(providerId).then((user) => {\n        this.props.dialogProps.onClose(() => {\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.props.openSnackbar(message);\n            return;\n\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleKeyPress = (event) => {\n    const {\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    if (!emailAddress ||\n      !emailAddressConfirmation ||\n      !password ||\n      !passwordConfirmation) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handleEmailAddressConfirmationChange = (event) => {\n    const emailAddressConfirmation = event.target.value;\n\n    this.setState({\n      emailAddressConfirmation: emailAddressConfirmation\n    });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const {\n      performingAction,\n\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation,\n\n      errors\n    } = this.state;\n\n    return (\n      <Dialog fullWidth maxWidth=\"sm\" {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <Hidden xsDown>\n          <DialogContent>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <AuthProviderList\n                  performingAction={performingAction}\n\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={7}>\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddressConfirmation)}\n                      fullWidth\n                      helperText={(errors && errors.emailAddressConfirmation) ? errors.emailAddressConfirmation[0] : ''}\n                      label=\"E-mail address confirmation\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddressConfirmation}\n                      variant=\"outlined\"\n\n                      onChange={this.handleEmailAddressConfirmationChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"new-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={(errors && errors.password) ? errors.password[0] : ''}\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.passwordConfirmation)}\n                      fullWidth\n                      helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n                      label=\"Password confirmation\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={passwordConfirmation}\n                      variant=\"outlined\"\n\n                      onChange={this.handlePasswordConfirmationChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <Hidden smUp>\n          <DialogContent>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddressConfirmation)}\n                  fullWidth\n                  helperText={(errors && errors.emailAddressConfirmation) ? errors.emailAddressConfirmation[0] : ''}\n                  label=\"E-mail address confirmation\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddressConfirmation}\n                  variant=\"outlined\"\n\n                  onChange={this.handleEmailAddressConfirmationChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"new-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={(errors && errors.password) ? errors.password[0] : ''}\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.passwordConfirmation)}\n                  fullWidth\n                  helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n                  label=\"Password confirmation\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={passwordConfirmation}\n                  variant=\"outlined\"\n\n                  onChange={this.handlePasswordConfirmationChange}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={dialogProps.onClose}>Cancel</Button>\n\n          <Button\n            color=\"primary\"\n            disabled={\n              !emailAddress ||\n              !emailAddressConfirmation ||\n              !password ||\n              !passwordConfirmation ||\n              performingAction\n            }\n            variant=\"contained\"\n\n            onClick={this.signUp}>\n            Sign up\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignUpDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthProviderList from '../AuthProviderList';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = (theme) => ({\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: 'auto'\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.setState({\n          performingAction: true\n        }, () => {\n          authentication.resetPassword(emailAddress).then((value) => {\n            this.props.openSnackbar(`Sent password reset e-mail to ${emailAddress}`);\n          }).catch((reason) => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              case 'auth/invalid-email':\n              case 'auth/missing-android-pkg-name':\n              case 'auth/missing-continue-uri':\n              case 'auth/missing-ios-bundle-id':\n              case 'auth/invalid-continue-uri':\n              case 'auth/unauthorized-continue-uri':\n              case 'auth/user-not-found':\n                this.props.openSnackbar(message);\n                return;\n\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          }).finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n        });\n      });\n    }\n  };\n\n  signIn = () => {\n    const { emailAddress, password } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress,\n      password: password\n    }, {\n      emailAddress: constraints.emailAddress,\n      password: constraints.password\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState({\n        performingAction: true,\n\n        errors: null\n      }, () => {\n        authentication.signIn(emailAddress, password).then((user) => {\n          this.props.dialogProps.onClose(() => {\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            case 'auth/invalid-email':\n            case 'auth/user-disabled':\n            case 'auth/user-not-found':\n            case 'auth/wrong-password':\n              this.props.openSnackbar(message);\n              return;\n\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    }\n  };\n\n  signInWithAuthProvider = (providerId) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.signInWithAuthProvider(providerId).then((user) => {\n        this.props.dialogProps.onClose(() => {\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.props.openSnackbar(message);\n            return;\n\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleKeyPress = (event) => {\n    const { emailAddress, password } = this.state;\n\n    if (!emailAddress || !password) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const {\n      performingAction,\n\n      emailAddress,\n      password,\n\n      errors\n    } = this.state;\n\n    return (\n      <Dialog fullWidth maxWidth=\"sm\" {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <Hidden xsDown>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <AuthProviderList\n                  performingAction={performingAction}\n\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={7}>\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"current-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={(errors && errors.password) ? errors.password[0] : ''}\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"current-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={(errors && errors.password) ? errors.password[0] : ''}\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n            </Grid>\n          </Hidden>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={dialogProps.onClose}>Cancel</Button>\n\n          <Button\n            color=\"primary\"\n            disabled={!emailAddress || performingAction}\n            variant=\"outlined\"\n\n            onClick={this.resetPassword}>\n            Reset password\n          </Button>\n\n          <Button\n            color=\"primary\"\n            disabled={(!emailAddress || !password) || performingAction}\n            variant=\"contained\"\n\n            onClick={this.signIn}>\n            Sign in\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignInDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport Avatar from '@material-ui/core/Avatar';\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = (theme) => ({\n  dialogContent: {\n    paddingTop: theme.spacing(2)\n  },\n\n  badge: {\n    top: theme.spacing(2),\n    right: -theme.spacing(2)\n  },\n\n  loadingBadge: {\n    top: '50%',\n    right: '50%'\n  },\n\n  avatar: {\n    marginRight: 'auto',\n    marginLeft: 'auto',\n\n    width: theme.spacing(14),\n    height: theme.spacing(14)\n  },\n\n  nameInitials: {\n    cursor: 'default'\n  },\n\n  personIcon: {\n    fontSize: theme.spacing(7)\n  },\n\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n\n    minHeight: 'initial'\n  }\n});\n\nconst initialState = {\n  profileCompletion: 0,\n  securityRating: 0,\n\n  showingField: '',\n\n  avatar: null,\n  avatarUrl: '',\n  firstName: '',\n  lastName: '',\n  username: '',\n  emailAddress: '',\n\n  performingAction: false,\n  loadingAvatar: false,\n  sentVerificationEmail: false,\n\n  errors: null\n};\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  getNameInitialsOrIcon = () => {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    const { classes, userData } = this.props;\n\n    if (!userData) {\n      return <PersonIcon className={classes.personIcon} />;\n    }\n\n    const nameInitials = authentication.user.getNameInitials({\n      ...user,\n      ...userData\n    });\n\n    if (nameInitials) {\n      return nameInitials;\n    }\n\n    return <PersonIcon className={classes.personIcon} />;\n  };\n\n  uploadAvatar = () => {\n    const { avatar } = this.state;\n\n    if (!avatar) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true,\n      loadingAvatar: true\n    }, () => {\n      authentication.changeAvatar(avatar).then((value) => {\n        const { user, userData } = this.props;\n\n        this.setState({\n          profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n        }, () => {\n          this.props.openSnackbar('Changed avatar');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false,\n          loadingAvatar: false,\n\n          avatar: null,\n          avatarUrl: ''\n        });\n      });\n    });\n  };\n\n  removeAvatar = () => {\n    const { user } = this.props;\n    const { avatar, avatarUrl } = this.state;\n\n    if (!user.photoURL && !avatar && !avatarUrl) {\n      return;\n    }\n\n    if ((!user.photoURL && avatar && avatarUrl) || (user.photoURL && avatar && avatarUrl)) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatar: null,\n        avatarUrl: ''\n      }, () => {\n        this.props.openSnackbar(`Removed image “${avatar.name}”`, 5);\n      });\n    } else if (user.photoURL && !avatar && !avatarUrl) {\n      this.setState({\n        performingAction: true,\n        loadingAvatar: true\n      }, () => {\n        authentication.removeAvatar().then((value) => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.props.openSnackbar('Removed avatar');\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false,\n            loadingAvatar: false\n          });\n        });\n      });\n    }\n  };\n\n  showField = (fieldId) => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = (callback) => {\n    this.setState({\n      showingField: '',\n\n      firstName: '',\n      lastName: '',\n      username: '',\n      emailAddress: '',\n\n      errors: null\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  changeFirstName = () => {\n    const { firstName } = this.state;\n\n    const errors = validate({\n      firstName: firstName\n    }, {\n      firstName: constraints.firstName\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (firstName === userData.firstName) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeFirstName(firstName).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed first name');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeLastName = () => {\n    const { lastName } = this.state;\n\n    const errors = validate({\n      lastName: lastName\n    }, {\n      lastName: constraints.lastName\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (lastName === userData.lastName) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeLastName(lastName).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed last name');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeUsername = () => {\n    const { username } = this.state;\n\n    const errors = validate({\n      username: username\n    }, {\n      username: constraints.username\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (username === userData.username) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeUsername(username).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed username');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeEmailAddress = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { user } = this.props;\n\n      if (emailAddress === user.email) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeEmailAddress(emailAddress).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed e-mail address');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.verifyEmailAddress().then(() => {\n        this.setState({\n          sentVerificationEmail: true\n        }, () => {\n          this.props.openSnackbar('Sent verification e-mail');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  deleteAccount = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.deleteAccount().then(() => {\n        this.props.openSnackbar('Deleted account');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  changeField = (fieldId) => {\n    switch (fieldId) {\n      case 'first-name':\n        this.changeFirstName();\n        return;\n\n      case 'last-name':\n        this.changeLastName();\n        return;\n\n      case 'username':\n        this.changeUsername();\n        return;\n\n      case 'email-address':\n        this.changeEmailAddress();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === 'Escape') {\n      this.hideFields();\n    } else if (key === 'Enter') {\n      this.changeField(fieldId);\n    }\n  };\n\n  handleAvatarChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const files = event.target.files;\n\n    if (!files) {\n      return;\n    }\n\n    const avatar = files[0];\n\n    if (!avatar) {\n      return;\n    }\n\n    const fileTypes = [\n      'image/gif',\n      'image/jpeg',\n      'image/png',\n      'image/webp',\n      'image/svg+xml'\n    ];\n\n    if (!fileTypes.includes(avatar.type)) {\n      return;\n    }\n\n    if (avatar.size > (20 * 1024 * 1024)) {\n      return;\n    }\n\n    this.setState({\n      avatar: avatar,\n      avatarUrl: URL.createObjectURL(avatar)\n    }, () => {\n      this.props.openSnackbar(`Selected image “${avatar.name}”`, 5);\n    });\n  };\n\n  handleFirstNameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const firstName = event.target.value;\n\n    this.setState({\n      firstName: firstName\n    });\n  };\n\n  handleLastNameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const lastName = event.target.value;\n\n    this.setState({\n      lastName: lastName\n    });\n  };\n\n  handleUsernameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  handleEmailAddressChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const {\n      user,\n      userData\n    } = this.props;\n\n    // Events\n    const {\n      onDeleteAccountClick\n    } = this.props;\n\n    const {\n      profileCompletion,\n      securityRating,\n\n      showingField,\n\n      performingAction,\n      loadingAvatar,\n\n      avatar,\n      avatarUrl,\n      firstName,\n      lastName,\n      username,\n      emailAddress,\n\n      sentVerificationEmail,\n\n      errors\n    } = this.state;\n\n    const hasFirstName = userData && userData.firstName;\n    const hasLastName = userData && userData.lastName;\n    const hasUsername = userData && userData.username;\n\n    return (\n      <DialogContent classes={{ root: classes.dialogContent }}>\n        <Box mb={2}>\n          <Hidden xsDown>\n            <Grid alignItems=\"center\" container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Box mb={1.5}>\n                    {(avatar && avatarUrl) &&\n                      <Badge classes={{ badge: classes.badge }} badgeContent={\n                        <Tooltip title=\"Remove\">\n                          <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                            <CloseIcon fontSize=\"small\" />\n                          </Fab>\n                        </Tooltip>\n                      }>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <Fade\n                              style={{ transitionDelay: '1s' }}\n                              in={loadingAvatar}\n                              unmountOnExit>\n                              <CircularProgress size={120} thickness={1.8} />\n                            </Fade>\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                        }\n                      </Badge>\n                    }\n\n                    {(!avatar && !avatarUrl) &&\n                      <>\n                        {user.photoURL &&\n                          <Badge classes={{ badge: classes.badge }} badgeContent={\n                            <Tooltip title=\"Remove\">\n                              <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                                <CloseIcon fontSize=\"small\" />\n                              </Fab>\n                            </Tooltip>\n                          }>\n                            {loadingAvatar &&\n                              <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                                <Fade\n                                  style={{ transitionDelay: '1s' }}\n                                  in={loadingAvatar}\n                                  unmountOnExit>\n                                  <CircularProgress size={120} thickness={1.8} />\n                                </Fade>\n                              }>\n                                <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                              </Badge>\n                            }\n\n                            {!loadingAvatar &&\n                              <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                            }\n                          </Badge>\n                        }\n\n                        {!user.photoURL &&\n                          <>\n                            {loadingAvatar &&\n                              <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                                <Fade\n                                  style={{ transitionDelay: '1s' }}\n                                  in={loadingAvatar}\n                                  unmountOnExit>\n                                  <CircularProgress size={120} thickness={1.8} />\n                                </Fade>\n                              }>\n                                <Avatar className={classes.avatar} alt=\"Avatar\">\n                                  <Typography className={classes.nameInitials} variant=\"h2\">\n                                    {this.getNameInitialsOrIcon()}\n                                  </Typography>\n                                </Avatar>\n                              </Badge>\n                            }\n\n                            {!loadingAvatar &&\n                              <Avatar className={classes.avatar} alt=\"Avatar\">\n                                <Typography className={classes.nameInitials} variant=\"h2\">\n                                  {this.getNameInitialsOrIcon()}\n                                </Typography>\n                              </Avatar>\n                            }\n                          </>\n                        }\n                      </>\n                    }\n                  </Box>\n\n                  {(avatar && avatarUrl) &&\n                    <Button color=\"primary\" disabled={performingAction} startIcon={<CloudUploadIcon />} variant=\"contained\" onClick={this.uploadAvatar}>\n                      Upload\n                    </Button>\n                  }\n\n                  {(!avatar && !avatarUrl) &&\n                    <>\n                      <input\n                        id=\"avatar-input\"\n                        type=\"file\"\n                        hidden\n                        accept=\"image/*\"\n\n                        onChange={this.handleAvatarChange}\n                      />\n\n                      <label htmlFor=\"avatar-input\">\n                        <Button color=\"primary\" component=\"span\" disabled={performingAction} startIcon={<PhotoIcon />} variant=\"contained\">\n                          Choose...\n                        </Button>\n                      </label>\n                    </>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile Completion</Typography>\n\n                  {profileCompletion === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {profileCompletion === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {(profileCompletion !== 0 && profileCompletion !== 100)  &&\n                    <Typography color=\"secondary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security Rating</Typography>\n\n                  {securityRating === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {securityRating === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {(securityRating !== 0 && securityRating !== 100) &&\n                    <Typography color=\"secondary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <Box textAlign=\"center\" mb={3}>\n              <Box mb={1.5}>\n                {(avatar && avatarUrl) &&\n                  <Badge classes={{ badge: classes.badge }} badgeContent={\n                    <Tooltip title=\"Remove\">\n                      <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                        <CloseIcon fontSize=\"small\" />\n                      </Fab>\n                    </Tooltip>\n                  }>\n                    {loadingAvatar &&\n                      <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                        <Fade\n                          style={{ transitionDelay: '1s' }}\n                          in={loadingAvatar}\n                          unmountOnExit>\n                          <CircularProgress size={120} thickness={1.8} />\n                        </Fade>\n                      }>\n                        <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                      </Badge>\n                    }\n\n                    {!loadingAvatar &&\n                      <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                    }\n                  </Badge>\n                }\n\n                {(!avatar && !avatarUrl) &&\n                  <>\n                    {user.photoURL &&\n                      <Badge classes={{ badge: classes.badge }} badgeContent={\n                        <Tooltip title=\"Remove\">\n                          <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                            <CloseIcon fontSize=\"small\" />\n                          </Fab>\n                        </Tooltip>\n                      }>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <CircularProgress size={120} thickness={1.8} />\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                        }\n                      </Badge>\n                    }\n\n                    {!user.photoURL &&\n                      <>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <Fade\n                              style={{ transitionDelay: '1s' }}\n                              in={loadingAvatar}\n                              unmountOnExit>\n                              <CircularProgress size={120} thickness={1.8} />\n                            </Fade>\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\">\n                              <Typography className={classes.nameInitials} variant=\"h2\">\n                                {this.getNameInitialsOrIcon()}\n                              </Typography>\n                            </Avatar>\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\">\n                            <Typography className={classes.nameInitials} variant=\"h2\">\n                              {this.getNameInitialsOrIcon()}\n                            </Typography>\n                          </Avatar>\n                        }\n                      </>\n                    }\n                  </>\n                }\n              </Box>\n\n              {(avatar && avatarUrl) &&\n                <Button color=\"primary\" disabled={performingAction} startIcon={<CloudUploadIcon />} variant=\"contained\" onClick={this.uploadAvatar}>\n                  Upload\n                </Button>\n              }\n\n              {(!avatar && !avatarUrl) &&\n                <>\n                  <input\n                    id=\"avatar-input\"\n                    type=\"file\"\n                    hidden\n                    accept=\"image/*\"\n\n                    onChange={this.handleAvatarChange}\n                  />\n\n                  <label htmlFor=\"avatar-input\">\n                    <Button color=\"primary\" component=\"span\" disabled={performingAction} startIcon={<PhotoIcon />} variant=\"contained\">\n                      Choose...\n                    </Button>\n                  </label>\n                </>\n              }\n            </Box>\n\n            <Grid container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile Completion</Typography>\n\n                  {profileCompletion === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {profileCompletion === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {(profileCompletion !== 0 && profileCompletion !== 100)  &&\n                    <Typography color=\"secondary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security Rating</Typography>\n\n                  {securityRating === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {securityRating === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {(securityRating !== 0 && securityRating !== 100) &&\n                    <Typography color=\"secondary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n        </Box>\n\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasFirstName &&\n              <ListItemIcon>\n                <Tooltip title=\"No first name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'first-name' &&\n              <TextField\n                autoComplete=\"given-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.firstName)}\n                fullWidth\n                helperText={(errors && errors.firstName) ? errors.firstName[0] : 'Press Enter to change your first name'}\n                label=\"First name\"\n                placeholder={hasFirstName && userData.firstName}\n                required\n                type=\"text\"\n                value={firstName}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'first-name')}\n\n                onChange={this.handleFirstNameChange}\n              />\n            }\n\n            {showingField !== 'first-name' &&\n              <>\n                <ListItemText\n                  primary=\"First name\"\n                  secondary={hasFirstName ? userData.firstName : 'You don’t have a first name'}\n                />\n\n                <ListItemSecondaryAction>\n                  {hasFirstName &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('first-name')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!hasFirstName &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('first-name')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasLastName &&\n              <ListItemIcon>\n                <Tooltip title=\"No last name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'last-name' &&\n              <TextField\n                autoComplete=\"family-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.lastName)}\n                fullWidth\n                helperText={(errors && errors.lastName) ? errors.lastName[0] : 'Press Enter to change your last name'}\n                label=\"Last name\"\n                placeholder={hasLastName && userData.lastName}\n                required\n                type=\"text\"\n                value={lastName}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'last-name')}\n\n                onChange={this.handleLastNameChange}\n              />\n            }\n\n            {showingField !== 'last-name' &&\n              <>\n                <ListItemText\n                  primary=\"Last name\"\n                  secondary={hasLastName ? userData.lastName : 'You don’t have a last name'}\n                />\n\n                <ListItemSecondaryAction>\n                  {hasLastName &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('last-name')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!hasLastName &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('last-name')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonOutlineIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasUsername &&\n              <ListItemIcon>\n                <Tooltip title=\"No username\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'username' &&\n              <TextField\n                autoComplete=\"username\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.username)}\n                fullWidth\n                helperText={(errors && errors.username) ? errors.username[0] : 'Press Enter to change your username'}\n                label=\"Username\"\n                placeholder={hasUsername && userData.username}\n                required\n                type=\"text\"\n                value={username}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'username')}\n\n                onChange={this.handleUsernameChange}\n              />\n            }\n\n            {showingField !== 'username' &&\n              <>\n                <ListItemText\n                  primary=\"Username\"\n                  secondary={hasUsername ? userData.username : 'You don’t have a username'}\n                />\n\n                <ListItemSecondaryAction>\n                  {hasUsername &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('username')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!hasUsername &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('username')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <EmailIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {user.email &&\n              <ListItemIcon>\n                <>\n                  {user.emailVerified &&\n                    <Tooltip title=\"Verified\">\n                      <CheckIcon color=\"primary\" />\n                    </Tooltip>\n                  }\n\n                  {!user.emailVerified &&\n                    <Tooltip title=\"Not verified\">\n                      <WarningIcon color=\"error\" />\n                    </Tooltip>\n                  }\n                </>\n              </ListItemIcon>\n            }\n\n            {!user.email &&\n              <ListItemIcon>\n                <Tooltip title=\"No e-mail address\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'email-address' &&\n              <TextField\n                autoComplete=\"email\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.emailAddress)}\n                fullWidth\n                helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : 'Press Enter to change your e-mail address'}\n                label=\"E-mail address\"\n                placeholder={user.email}\n                required\n                type=\"email\"\n                value={emailAddress}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'email-address')}\n\n                onChange={this.handleEmailAddressChange}\n              />\n            }\n\n            {showingField !== 'email-address' &&\n              <>\n                <ListItemText\n                  primary=\"E-mail address\"\n                  secondary={user.email ? user.email : 'You don’t have an e-mail address'}\n                />\n\n                {(user.email && !user.emailVerified) &&\n                  <Box clone mr={7}>\n                    <ListItemSecondaryAction>\n                      <Tooltip title=\"Verify\">\n                        <div>\n                          <IconButton color=\"secondary\" disabled={performingAction || sentVerificationEmail} onClick={this.verifyEmailAddress}>\n                            <CheckIcon />\n                          </IconButton>\n                        </div>\n                      </Tooltip>\n                    </ListItemSecondaryAction>\n                  </Box>\n                }\n\n                <ListItemSecondaryAction>\n                  {user.email &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('email-address')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!user.email &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('email-address')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <AccessTimeIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <Hidden xsDown>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format('LLLL')}\n              />\n            </Hidden>\n\n            <Hidden smUp>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format('llll')}\n              />\n            </Hidden>\n          </ListItem>\n\n          <Box mt={1} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <DeleteForeverIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Delete account\"\n              secondary=\"Accounts can’t be recovered\"\n            />\n\n            <ListItemSecondaryAction>\n              <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onDeleteAccountClick}>Delete</Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n\n  componentDidMount() {\n    const { user, userData } = this.props;\n\n    this.setState({\n      profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData }),\n      securityRating: authentication.user.getSecurityRating(user, userData)\n    });\n  }\n\n  componentWillUnmount() {\n    const { avatarUrl } = this.state;\n\n    if (avatarUrl) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatarUrl: ''\n      });\n    }\n  }\n}\n\nAccountTab.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport Box from '@material-ui/core/Box';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Button from '@material-ui/core/Button';\n\nimport FiberManualRecord from '@material-ui/icons/FiberManualRecord';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport FormatColorResetIcon from '@material-ui/icons/FormatColorReset';\n\nimport theming from '../../services/theming';\n\nclass AppearanceTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n  handlePrimaryColorChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const primaryColor = event.target.value;\n\n    if (!primaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.primaryColor.id === primaryColor) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeTheme({\n        primaryColor: primaryColor,\n        secondaryColor: theme.secondaryColor.id,\n        type: theme.type.id\n      }).then((value) => {\n        this.props.openSnackbar('Changed primary color');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleSecondaryColorChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const secondaryColor = event.target.value;\n\n    if (!secondaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.secondaryColor.id === secondaryColor) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeTheme({\n        primaryColor: theme.primaryColor.id,\n        secondaryColor: secondaryColor,\n        type: theme.type.id\n      }).then((value) => {\n        this.props.openSnackbar('Changed secondary color');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleTypeChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const type = event.target.value;\n\n    if (!type) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.type.id === type) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeTheme({\n        primaryColor: theme.primaryColor.id,\n        secondaryColor: theme.secondaryColor.id,\n        type: type\n      }).then((value) => {\n        this.props.openSnackbar('Changed type');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleResetClick = () => {\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theming.isDefaultTheme(theme)) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.resetTheme().then((value) => {\n        this.props.openSnackbar('Reset theme');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    if (!theme) {\n      return null;\n    }\n\n    const { performingAction } = this.state;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <FiberManualRecord color=\"primary\" />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Primary color</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.primaryColor.id}\n\n                    onChange={this.handlePrimaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>{color.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.primaryColor.id}\n\n                    onChange={this.handlePrimaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <FiberManualRecord color=\"secondary\" />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Secondary color</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.secondaryColor.id}\n\n                    onChange={this.handleSecondaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>{color.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.secondaryColor.id}\n\n                    onChange={this.handleSecondaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <InvertColorsIcon />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Type</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.type.id}\n\n                    onChange={this.handleTypeChange}>\n                    {Object.keys(theming.types).map((type) => {\n                      type = theming.types[type];\n\n                      return (\n                        <option key={type.id} value={type.id}>{type.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.type.id}\n\n                    onChange={this.handleTypeChange}>\n                    {Object.keys(theming.types).map((type) => {\n                      type = theming.types[type];\n\n                      return (\n                        <MenuItem key={type.id} value={type.id}>{type.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mt={2} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <FormatColorResetIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Reset theme\"\n              secondary=\"Changes will be reset\"\n            />\n\n            <ListItemSecondaryAction>\n              <Button\n                color=\"secondary\"\n                disabled={theming.isDefaultTheme(theme) || performingAction}\n                variant=\"contained\"\n\n                onClick={this.handleResetClick}>\n                Reset\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nAppearanceTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default AppearanceTab;\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport LinkIcon from '@material-ui/icons/Link';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\n\nimport AppleIcon from 'mdi-material-ui/Apple';\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport MicrosoftIcon from 'mdi-material-ui/Microsoft';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport YahooIcon from 'mdi-material-ui/Yahoo';\n\nimport authentication from '../../services/authentication';\n\nclass LinksTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n\n  linkAuthProvider = (authProvider) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.linkAuthProvider(authProvider.providerId).then((value) => {\n        this.props.openSnackbar(`${authProvider.name} linked`, 5);\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  unlinkAuthProvider = (authProvider) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.unlinkAuthProvider(authProvider.providerId).then((value) => {\n        this.props.openSnackbar(`${authProvider.name} unlinked`, 4);\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    const { performingAction } = this.state;\n\n    const authProviders = [\n      {\n        providerId: 'apple.com',\n        color: '#000000',\n        icon: <AppleIcon />,\n        name: 'Apple'\n      },\n      {\n        providerId: 'facebook.com',\n        color: '#3c5a99',\n        icon: <FacebookBoxIcon />,\n        name: 'Facebook'\n      },\n      {\n        providerId: 'github.com',\n        color: '#24292e',\n        icon: <GitHubCircleIcon />,\n        name: 'GitHub'\n      },\n      {\n        providerId: 'google.com',\n        color: '#4285f4',\n        icon: <GoogleIcon />,\n        name: 'Google'\n      },\n      {\n        providerId: 'microsoft.com',\n        color: '#f65314',\n        icon: <MicrosoftIcon />,\n        name: 'Microsoft'\n      },\n      {\n        providerId: 'twitter.com',\n        color: '#1da1f2',\n        icon: <TwitterIcon />,\n        name: 'Twitter'\n      },\n      {\n        providerId: 'yahoo.com',\n        color: '#410093',\n        icon: <YahooIcon />,\n        name: 'Yahoo'\n      }\n    ];\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          {authProviders.map((authProvider) => {\n            const authProviderData = authentication.authProviderData(authProvider.providerId);\n            let identifier = null;\n\n            if (authProviderData) {\n              const displayName = authProviderData.displayName;\n              const emailAddress = authProviderData.email;\n              const phoneNumber = authProviderData.phoneNumber;\n\n              identifier = displayName || emailAddress || phoneNumber;\n            }\n\n            return (\n              <ListItem key={authProvider.providerId}>\n                <ListItemIcon>\n                  <Box color={theme.type.id === 'light' ? authProvider.color : null}>\n                    {authProvider.icon}\n                  </Box>\n                </ListItemIcon>\n\n                {authProviderData &&\n                  <ListItemText\n                    primary={authProvider.name}\n                    secondary={identifier}\n                  />\n                }\n\n                {!authProviderData &&\n                  <ListItemText\n                    primary={authProvider.name}\n                  />\n                }\n\n                <ListItemSecondaryAction>\n                  {authProviderData &&\n                    <Tooltip title=\"Unlink\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.unlinkAuthProvider(authProvider)}>\n                          <LinkOffIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!authProviderData &&\n                    <Tooltip title=\"Link\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.linkAuthProvider(authProvider)}>\n                          <LinkIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nLinksTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default LinksTab;\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport validate from 'validate.js';\nimport moment from 'moment';\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport LockIcon from '@material-ui/icons/Lock';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst initialState = {\n  showingField: '',\n\n  password: '',\n  passwordConfirmation: '',\n\n  performingAction: false,\n\n  errors: null\n};\n\nclass SecurityTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  showField = (fieldId) => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = (callback) => {\n    this.setState({\n      showingField: '',\n\n      password: '',\n      passwordConfirmation: '',\n\n      errors: null\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  changeField = (fieldId) => {\n    switch (fieldId) {\n      case 'password':\n        const { password } = this.state;\n\n        const errors = validate({\n          password: password\n        }, {\n          password: constraints.password\n        });\n\n        if (errors) {\n          this.setState({\n            errors: errors\n          });\n\n          return;\n        }\n\n        this.setState({\n          errors: null\n        }, () => {\n          this.showField('password-confirmation');\n        });\n        return;\n\n      case 'password-confirmation':\n        this.changePassword();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  changePassword = () => {\n    const { password, passwordConfirmation } = this.state;\n\n    const errors = validate({\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }, {\n      password: constraints.password,\n      passwordConfirmation: constraints.passwordConfirmation\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changePassword(password).then(() => {\n          this.hideFields(() => {\n            this.props.openSnackbar('Changed password');\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === 'Escape') {\n      this.hideFields();\n    } else if (key === 'Enter') {\n      this.changeField(fieldId);\n    }\n  };\n\n  handlePasswordChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Properties\n    const { userData } = this.props;\n\n    const {\n      showingField,\n\n      password,\n      passwordConfirmation,\n\n      performingAction,\n\n      errors\n    } = this.state;\n\n    const hasChangedPassword = userData && userData.lastPasswordChange;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <LockIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {showingField === 'password' &&\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.password)}\n                fullWidth\n                helperText={(errors && errors.password) ? errors.password[0] : 'Press Enter to change your password'}\n                label=\"Password\"\n                required\n                type=\"password\"\n                value={password}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'password')}\n\n                onChange={this.handlePasswordChange}\n              />\n            }\n\n            {showingField === 'password-confirmation' &&\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.passwordConfirmation)}\n                fullWidth\n                helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : 'Press Enter to change your password'}\n                label=\"Password confirmation\"\n                required\n                type=\"password\"\n                value={passwordConfirmation}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'password-confirmation')}\n\n                onChange={this.handlePasswordConfirmationChange}\n              />\n            }\n\n            {(showingField !== 'password' && showingField !== 'password-confirmation') &&\n              <>\n                <Hidden xsDown>\n                  <ListItemText\n                    primary=\"Password\"\n                    secondary={hasChangedPassword ? `Last changed ${moment(userData.lastPasswordChange.toDate()).format('LL')}` : 'Never changed'}\n                  />\n                </Hidden>\n\n                <Hidden smUp>\n                  <ListItemText\n                    primary=\"Password\"\n                    secondary={hasChangedPassword ? `Last changed ${moment(userData.lastPasswordChange.toDate()).format('ll')}` : 'Never changed'}\n                  />\n                </Hidden>\n\n                <ListItemSecondaryAction>\n                  <Tooltip title=\"Change\">\n                    <div>\n                      <IconButton disabled={performingAction} onClick={() => this.showField('password')}>\n                        <EditIcon />\n                      </IconButton>\n                    </div>\n                  </Tooltip>\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nSecurityTab.propTypes = {\n  // Properties\n  userData: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default SecurityTab;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport LinkIcon from '@material-ui/icons/Link';\nimport SecurityIcon from '@material-ui/icons/Security';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport AccountTab from '../AccountTab';\nimport AppearanceTab from '../AppearanceTab';\nimport LinksTab from '../LinksTab';\nimport SecurityTab from '../SecurityTab';\n\nconst styles = (theme) => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  tabs: {\n    display: 'initial'\n  }\n});\n\nconst tabs = [\n  {\n    key: 'account',\n    icon: <AccountCircleIcon />,\n    label: 'Account'\n  },\n\n  {\n    key: 'appearance',\n    icon: <PaletteIcon />,\n    label: 'Appearance'\n  },\n\n  {\n    key: 'links',\n    icon: <LinkIcon />,\n    label: 'Links'\n  },\n\n  {\n    key: 'security',\n    icon: <SecurityIcon />,\n    label: 'Security'\n  }\n];\n\nconst initialState = {\n  selectedTab: 0\n};\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleTabChange = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  handleIndexChange = (index) => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const {\n      user,\n      userData,\n      theme\n    } = this.props;\n\n    // Custom Functions\n    const {\n      openSnackbar\n    } = this.props;\n\n    // Custom Functions\n    const {\n      onDeleteAccountClick\n    } = this.props;\n\n    const { selectedTab } = this.state;\n\n    return (\n      <Dialog {...dialogProps} onExited={this.handleExited}>\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">\n            Settings\n          </Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton className={classes.closeButton} onClick={dialogProps.onClose}>\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <Hidden xsDown>\n          <Tabs\n            classes={{ root: classes.tabs }}\n            style={{ overflow: 'initial', minHeight: 'initial' }}\n\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            value={selectedTab}\n            variant=\"fullWidth\"\n            onChange={this.handleTabChange}>\n            {tabs.map((tab) => {\n              return (\n                <Tab key={tab.key} icon={tab.icon} label={tab.label} />\n              );\n            })}\n          </Tabs>\n        </Hidden>\n\n        <Hidden smUp>\n          <Tabs\n            classes={{ root: classes.tabs }}\n            style={{ overflow: 'initial', minHeight: 'initial' }}\n\n            indicatorColor=\"primary\"\n            scrollButtons=\"off\"\n            textColor=\"primary\"\n            value={selectedTab}\n            variant=\"scrollable\"\n            onChange={this.handleTabChange}>\n            {tabs.map((tab) => {\n              return (\n                <Tab key={tab.key} icon={tab.icon} label={tab.label} />\n              );\n            })}\n          </Tabs>\n        </Hidden>\n\n        <SwipeableViews index={selectedTab} onChangeIndex={this.handleIndexChange}>\n          <AccountTab\n            user={user}\n            userData={userData}\n\n            openSnackbar={openSnackbar}\n\n            onDeleteAccountClick={onDeleteAccountClick}\n          />\n\n          <AppearanceTab\n            theme={theme}\n\n            openSnackbar={openSnackbar}\n          />\n\n          <LinksTab\n            theme={theme}\n\n            openSnackbar={openSnackbar}\n          />\n\n          <SecurityTab\n            user={user}\n            userData={userData}\n\n            openSnackbar={openSnackbar}\n          />\n        </SwipeableViews>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n  theme: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Custom Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SettingsDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  username: ''\n};\n\nclass DeleteAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleKeyPress = (event) => {\n    const { userData } = this.props;\n\n    if (userData && userData.username) {\n      const { username } = this.state;\n\n      if (!username) {\n        return;\n      }\n\n      if (username !== userData.username) {\n        return;\n      }\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.deleteAccount();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleUsernameChange = (event) => {\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  render() {\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { performingAction, userData } = this.props;\n\n    // Custom Functions\n    const { deleteAccount } = this.props;\n\n    const { username } = this.state;\n\n    const hasUsername = userData && userData.username;\n\n    return (\n      <Dialog {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\n        <DialogTitle>\n          Delete account?\n        </DialogTitle>\n\n        <DialogContent>\n          <Box mb={hasUsername ? 2 : 0}>\n            <DialogContentText>\n              Deleted accounts can’t be recovered.\n              All data associated with your account will be deleted.\n            </DialogContentText>\n\n            {hasUsername &&\n              <DialogContentText>\n                Type your username and <Hidden xsDown>click</Hidden><Hidden smUp>tap</Hidden> Delete to delete your account.\n                This action is irreversible.\n              </DialogContentText>\n            }\n          </Box>\n\n          {hasUsername &&\n            <TextField\n              autoComplete=\"username\"\n              autoFocus\n              color=\"secondary\"\n              disabled={performingAction}\n              fullWidth\n              label=\"Username\"\n              placeholder={userData.username}\n              required\n              type=\"text\"\n              value={username}\n              variant=\"outlined\"\n\n              onChange={this.handleUsernameChange}\n            />\n          }\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"secondary\" disabled={performingAction} onClick={dialogProps.onClose}>Cancel</Button>\n          <Button color=\"secondary\" disabled={performingAction || (hasUsername && username !== userData.username)} variant=\"contained\" onClick={deleteAccount}>Delete</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nDeleteAccountDialog.propTypes = {\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  performingAction: PropTypes.bool.isRequired,\n  userData: PropTypes.object,\n\n  // Custom Functions\n  deleteAccount: PropTypes.func.isRequired\n};\n\nexport default DeleteAccountDialog;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst styles = (theme) => ({\n  noTitlePadding: {\n    paddingTop: theme.spacing(3)\n  }\n});\n\nclass AlertDialog extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const {\n      title,\n      contentText,\n      dismissiveAction,\n      confirmingAction,\n      acknowledgementAction\n    } = this.props;\n\n    if ((dismissiveAction || confirmingAction) && acknowledgementAction) {\n      console.error(\n        'Dialogs should contain a maximum of two actions. ' +\n        'If a single action is provided, it must be an acknowledgement action. ' +\n        'If two actions are provided, one must be a confirming action, and the other a dismissing action. ' +\n        'Providing a third action such as “Learn more” is not recommended as it navigates the user away from the dialog, leaving the dialog task unfinished. ' +\n        'https://material.io/design/components/dialogs.html#actions'\n      );\n\n      return null;\n    }\n\n    return (\n      <Dialog {...dialogProps}>\n        {title &&\n          <DialogTitle>{title}</DialogTitle>\n        }\n\n        <DialogContent className={title ? null : classes.noTitlePadding}>\n          <DialogContentText>\n            {contentText}\n          </DialogContentText>\n        </DialogContent>\n\n        {(dismissiveAction || confirmingAction || acknowledgementAction) &&\n          <DialogActions>\n            {dismissiveAction}\n            {confirmingAction}\n            {acknowledgementAction}\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nAlertDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  title: PropTypes.string,\n  contentText: PropTypes.string.isRequired,\n  dismissiveAction: PropTypes.element,\n  confirmingAction: PropTypes.element,\n  acknowledgementAction: PropTypes.element,\n};\n\nexport default withStyles(styles)(AlertDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport AboutDialog from '../AboutDialog';\nimport SignUpDialog from '../SignUpDialog';\nimport SignInDialog from '../SignInDialog';\nimport SettingsDialog from '../SettingsDialog';\nimport DeleteAccountDialog from '../DeleteAccountDialog';\nimport AlertDialog from '../AlertDialog';\n\nclass DialogHost extends Component {\n  render() {\n    // Properties\n    const {\n      user,\n      dialogs\n    } = this.props;\n\n    const aboutDialog = dialogs.aboutDialog;\n    const signUpDialog = dialogs.signUpDialog;\n    const signInDialog = dialogs.signInDialog;\n    const settingsDialog = dialogs.settingsDialog;\n    const deleteAccountDialog = dialogs.deleteAccountDialog;\n    const signOutDialog = dialogs.signOutDialog;\n\n    return (\n      <>\n        <AboutDialog\n          dialogProps={aboutDialog.dialogProps}\n\n          {...aboutDialog.props}\n        />\n\n        {user &&\n          <>\n            <AlertDialog\n              dialogProps={signOutDialog.dialogProps}\n\n              {...signOutDialog.props}\n            />\n          </>\n        }\n\n        <Hidden xsDown>\n          {user &&\n            <>\n              <DeleteAccountDialog\n                dialogProps={deleteAccountDialog.dialogProps}\n\n                {...deleteAccountDialog.props}\n              />\n            </>\n          }\n\n          {!user &&\n            <>\n              <SignUpDialog\n                dialogProps={signUpDialog.dialogProps}\n\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={signInDialog.dialogProps}\n\n                {...signInDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n\n        <Hidden smDown>\n          {user &&\n            <>\n              <SettingsDialog\n                dialogProps={settingsDialog.dialogProps}\n\n                {...settingsDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n\n        <Hidden smUp>\n          {user &&\n            <>\n              <DeleteAccountDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...deleteAccountDialog.dialogProps\n                }}\n\n                {...deleteAccountDialog.props}\n              />\n            </>\n          }\n\n          {!user &&\n            <>\n              <SignUpDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signUpDialog.dialogProps\n                }}\n\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signInDialog.dialogProps\n                }}\n\n                {...signInDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n\n        <Hidden mdUp>\n          {user &&\n            <>\n              <SettingsDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...settingsDialog.dialogProps\n                }}\n\n                {...settingsDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n      </>\n    );\n  }\n}\n\nDialogHost.propTypes = {\n  // Properties\n  user: PropTypes.object,\n  dialogs: PropTypes.object.isRequired\n};\n\nexport default DialogHost;\n","import React, { Component } from 'react';\n\nimport readingTime from 'reading-time';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { auth, firestore } from '../../firebase';\nimport authentication from '../../services/authentication';\nimport theming from '../../services/theming';\n\nimport ErrorBoundary from '../ErrorBoundary';\nimport LaunchScreen from '../LaunchScreen';\nimport Bar from '../Bar';\nimport Router from '../Router';\nimport DialogHost from '../DialogHost';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      userData: null,\n      theme: theming.defaultTheme,\n\n      ready: false,\n      performingAction: false,\n\n      aboutDialog: {\n        open: false\n      },\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      deleteAccountDialog: {\n        open: false\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  openDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = true;\n\n    this.setState({ dialog }, callback);\n  };\n\n  closeDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = false;\n\n    this.setState({ dialog }, callback);\n  };\n\n  closeAllDialogs = (callback) => {\n    this.setState({\n      aboutDialog: {\n        open: false\n      },\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      deleteAccountDialog: {\n        open: false\n      },\n\n      signOutDialog: {\n        open: false\n      }\n    }, callback);\n  };\n\n  deleteAccount = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.deleteAccount().then(() => {\n        this.closeAllDialogs(() => {\n          this.openSnackbar('Deleted account');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  signOut = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.signOut().then(() => {\n        this.closeAllDialogs(() => {\n          this.openSnackbar('Signed out');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  openSnackbar = (message, autoHideDuration = 2, callback) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * autoHideDuration,\n        message,\n        open: true\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    const {\n      user,\n      userData,\n      theme,\n      ready,\n      performingAction,\n    } = this.state;\n\n    const {\n      aboutDialog,\n      signUpDialog,\n      signInDialog,\n      settingsDialog,\n      deleteAccountDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n\n        <ErrorBoundary>\n          {!ready &&\n            <LaunchScreen />\n          }\n\n          {ready &&\n            <>\n              <Bar\n                performingAction={performingAction}\n\n                user={user}\n                userData={userData}\n\n                onTitleClick={() => this.openDialog('aboutDialog')}\n\n                onSignUpClick={() => this.openDialog('signUpDialog')}\n                onSignInClick={() => this.openDialog('signInDialog')}\n\n                onSettingsClick={() => this.openDialog('settingsDialog')}\n                onSignOutClick={() => this.openDialog('signOutDialog')}\n              />\n\n              <Router user={user} />\n\n              <DialogHost\n                user={user}\n                dialogs={\n                  {\n                    aboutDialog: {\n                      dialogProps: {\n                        open: aboutDialog.open,\n\n                        onClose: () => this.closeDialog('aboutDialog')\n                      },\n\n                      props: {\n                        user: user\n                      }\n                    },\n\n                    signUpDialog: {\n                      dialogProps: {\n                        open: signUpDialog.open,\n\n                        onClose: (callback) => {\n                          this.closeDialog('signUpDialog');\n\n                          if (callback && typeof callback === 'function') {\n                            callback();\n                          }\n                        }\n                      },\n\n                      props: {\n                        performingAction: performingAction,\n\n                        openSnackbar: this.openSnackbar\n                      }\n                    },\n\n                    signInDialog: {\n                      dialogProps: {\n                        open: signInDialog.open,\n\n                        onClose: (callback) => {\n                          this.closeDialog('signInDialog');\n\n                          if (callback && typeof callback === 'function') {\n                            callback();\n                          }\n                        }\n                      },\n\n                      props: {\n                        performingAction: performingAction,\n\n                        openSnackbar: this.openSnackbar\n                      }\n                    },\n\n                    settingsDialog: {\n                      dialogProps: {\n                        open: settingsDialog.open,\n\n                        onClose: () => this.closeDialog('settingsDialog')\n                      },\n\n                      props: {\n                        user: user,\n                        userData: userData,\n                        theme: theme,\n\n                        openSnackbar: this.openSnackbar,\n\n                        onDeleteAccountClick: () => this.openDialog('deleteAccountDialog')\n                      }\n                    },\n\n                    deleteAccountDialog: {\n                      dialogProps: {\n                        open: deleteAccountDialog.open,\n\n                        onClose: () => this.closeDialog('deleteAccountDialog')\n                      },\n\n                      props: {\n                        performingAction: performingAction,\n                        userData: userData,\n\n                        deleteAccount: this.deleteAccount\n                      }\n                    },\n\n                    signOutDialog: {\n                      dialogProps: {\n                        open: signOutDialog.open,\n\n                        onClose: () => this.closeDialog('signOutDialog')\n                      },\n\n                      props: {\n                        title: 'Sign out?',\n                        contentText: 'While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.',\n                        dismissiveAction: <Button color=\"primary\" onClick={() => this.closeDialog('signOutDialog')}>Cancel</Button>,\n                        confirmingAction: <Button color=\"primary\" disabled={performingAction} variant=\"contained\" onClick={this.signOut}>Sign Out</Button>\n                      }\n                    }\n                  }\n                }\n              />\n\n              <Snackbar\n                autoHideDuration={snackbar.autoHideDuration}\n                message={snackbar.message}\n                open={snackbar.open}\n                onClose={this.closeSnackbar}\n              />\n            </>\n          }\n        </ErrorBoundary>\n      </MuiThemeProvider>\n    );\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    this.removeAuthStateChangedObserver = auth.onAuthStateChanged((user) => {\n      if (!user) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: null,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: null,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: null,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      this.removeReferenceListener = reference.onSnapshot((snapshot) => {\n        if (!snapshot.exists) {\n          if (this.mounted) {\n            this.setState({\n              user: null,\n              userData: null,\n              theme: theming.defaultTheme,\n\n              ready: true\n            });\n          }\n\n          return;\n        }\n\n        const data = snapshot.data();\n\n        if (!data) {\n          if (this.mounted) {\n            this.setState({\n              user: null,\n              userData: null,\n              theme: theming.defaultTheme,\n\n              ready: true\n            });\n          }\n\n          return;\n        }\n\n        if (data.theme) {\n          this.setState({\n            theme: theming.createTheme(data.theme)\n          });\n        } else {\n          this.setState({\n            theme: theming.defaultTheme\n          });\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: data,\n\n            ready: true\n          });\n        }\n      }, (error) => {\n        if (this.mounted) {\n          this.setState({\n            user: null,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            ready: true\n          }, () => {\n            const code = error.code;\n            const message = error.message;\n\n            switch (code) {\n              default:\n                this.openSnackbar(message);\n                return;\n            }\n          });\n        }\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.removeAuthStateChangedObserver) {\n      this.removeAuthStateChangedObserver();\n    }\n\n    if (this.removeReferenceListener) {\n      this.removeReferenceListener();\n    }\n\n    this.mounted = false;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport * as Sentry from '@sentry/browser';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nSentry.init({\n  dsn: 'https://78536326e6524916b6f44b4ea510b7a4@sentry.io/1846624',\n  release: `${process.env.REACT_APP_NAME}@${process.env.REACT_APP_VERSION}`\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}