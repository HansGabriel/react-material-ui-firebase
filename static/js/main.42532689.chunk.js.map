{"version":3,"sources":["layout/LaunchScreen.js","layout/Bar.js","layout/EmptyState.js","content/HomeContent.js","content/NotFoundContent.js","layout/AuthProviderList.js","dialogs/SignUpDialog.js","dialogs/SignInDialog.js","dialogs/ResetPasswordDialog.js","layout/Profile.js","dialogs/WelcomeDialog.js","dialogs/ConfirmationDialog.js","tabs/settings/AccountTab.js","tabs/settings/AppearanceTab.js","dialogs/SettingsDialog.js","dialogs/InputDialog.js","App.js","serviceWorker.js","index.js"],"names":["LaunchScreen","classes","this","props","react_default","a","createElement","CircularProgress","className","circularProgress","Component","withStyles","theme","position","top","left","Bar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","_this$props","name","isPerformingAuthAction","isSignedIn","user","_this$props2","onSignUpClick","onSignInClick","AppBar","color","Toolbar","variant","Typography","style","flexGrow","Fragment","IconButton","disabled","onClick","photoURL","Avatar","alt","src","Person_default","Menu","open","Boolean","onClose","MenuItem","Button","signUpButton","marginRight","spacing","EmptyState","icon","title","description","button","center","transform","textAlign","HomeContent","layout_EmptyState","Home_default","emptyStateIcon","Fab","component","Link","to","Code_default","href","rel","target","GithubCircle_default","buttonIcon","fontSize","marginTop","NotFoundContent","FindInPage_default","AuthProviderList","onAuthProviderClick","Hidden","only","DialogActions","dialogActions","google","firebase","auth","GoogleAuthProvider","Google_default","facebook","FacebookAuthProvider","FacebookBox_default","twitter","TwitterAuthProvider","Twitter_default","gitHub","GithubAuthProvider","dialogActionsMobile","concat","buttonMobile","justifyContent","marginBottom","display","backgroundColor","initialState","emailAddress","password","passwordConfirmation","errors","SignUpDialog","signUp","_this$state","validate","constraints","handleExited","handleKeyPress","key","altKey","ctrlKey","metaKey","shiftKey","handleEmailAddressChange","value","handlePasswordChange","handlePasswordConfirmationChange","handleSignUpClick","fullScreen","_this$state2","Dialog","onExited","onKeyPress","DialogTitle","DialogContent","DialogContentText","layout_AuthProviderList","TextField","autoComplete","error","fullWidth","helperText","label","margin","onChange","required","type","SignInDialog","signIn","handleSignInClick","onResetPasswordClick","placeholder","ResetPasswordDialog","resetPassword","preventDefault","handleResetPasswordClick","autoFocus","Profile","onChangeAvatarClick","displayName","email","profile","changeAvatarContainer","avatar","Tooltip","changeAvatar","size","Edit_default","info","width","marginLeft","height","WelcomeDialog","onOkClick","_this$props3","onCancelClick","onVerifyClick","isUserComplete","layout_Profile","contentText","ConfirmationDialog","cancelText","okText","disableOkButton","highlightOkButton","AccountTab","openVerifyEmailAddressDialog","verifyEmailAddressDialog","closeVerifyEmailAddressDialog","callback","verifyEmailAddress","onVerifyEmailAddressClick","isVerifyingEmailAddress","onAddAvatarClick","onAddDisplayNameClick","onChangeDisplayNameClick","onAddEmailAddressClick","dialogContentTextComplete","dialogContentTextIncomplete","List","ListItem","ListItemIcon","Portrait_default","ListItemText","primary","ListItemSecondaryAction","secondary","Email_default","emailVerified","metadata","lastSignInTime","AccessTime_default","moment","format","creationTime","dialogs_ConfirmationDialog","AppearanceTab","colors","types","primaryColor","secondaryColor","onPrimaryColorChange","onSecondaryColorChange","onTypeChange","dialogContentText","FormControl","InputLabel","Select","map","id","index","charAt","toUpperCase","slice","SettingsDialog","changeTab","selectedTab","changeIndex","handleResetClick","defaultTheme","setTimeout","onResetClick","hasDeviatedFromDefaultSettings","Tabs","indicatorColor","textColor","Tab","settings_AccountTab","settings_AppearanceTab","lib_default","onChangeIndex","InputDialog","textField","_this$props4","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","performance","import","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","createMuiTheme","palette","settings","presence","allowEmpty","length","minimum","equality","addAvatar","url","message","addDisplayName","changeDisplayName","addEmailAddress","App","_isMounted","createUserWithEmailAndPassword","then","closeSignUpDialog","openWelcomeDialog","catch","reason","code","openSnackbar","finally","signInWithEmailAndPassword","closeSignInDialog","signInWithProvider","provider","signInWithPopup","sendPasswordResetEmail","closeResetPasswordDialog","addAvatarDialog","objectSpread","updateProfile","closeAddAvatarDialog","changeAvatarDialog","closeChangeAvatarDialog","_this$state3","addDisplayNameDialog","closeAddDisplayNameDialog","_this$state4","changeDisplayNameDialog","closeChangeDisplayNameDialog","_this$state5","addEmailAddressDialog","updateEmail","closeAddEmailAddressDialog","_this$state6","sendEmailVerification","signOut","closeSignOutDialog","updateTheme","removeLocalStorage","_this$state7","find","localStorage","removeItem","setItem","JSON","stringify","resetTheme","changePrimaryColor","changeSecondaryColor","changeType","openSignUpDialog","signUpDialog","openSignInDialog","signInDialog","openResetPasswordDialog","resetPasswordDialog","welcomeDialog","closeWelcomeDialog","openSettingsDialog","settingsDialog","closeSettingsDialog","openAddAvatarDialog","openChangeAvatarDialog","openAddDisplayNameDialog","openChangeDisplayNameDialog","openAddEmailAddressDialog","openSignOutDialog","signOutDialog","handleAvatarChange","handleDisplayNameChange","snackbar","autoHideDuration","readingTime","time","closeSnackbar","clearMessage","arguments","undefined","isAuthReady","_this2","_this$state8","_this$state9","react_router_dom","basename","MuiThemeProvider","minHeight","layout_LaunchScreen","layout_Bar","react_router","path","exact","render","content_HomeContent","dialogs_WelcomeDialog","dialogs_SettingsDialog","dialogs_InputDialog","dialogs_SignUpDialog","dialogs_SignInDialog","dialogs_ResetPasswordDialog","Snackbar","_this3","parse","getItem","removeAuthObserver","onAuthStateChanged","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uvBAgBMA,oLACK,IAECC,EAAYC,KAAKC,MAAjBF,QAER,OACEG,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAkBC,UAAWP,EAAQQ,0BANhBC,aAeZC,gBAvBA,SAACC,GAAD,MAAY,CACzBH,iBAAkB,CAChBI,SAAU,WACVC,IAAK,MACLC,KAAM,SAmBKJ,CAAmBX,uGCR5BgB,eACJ,SAAAA,EAAYb,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhB,KAAAc,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAApB,KAAMC,KASRoB,SAAW,SAACC,GACV,IAAMC,EAAWD,EAAME,cAEvBT,EAAKU,SAAS,CACZC,KAAM,CACJH,eAfaR,EAoBnBY,UAAY,WACVZ,EAAKU,SAAS,CACZC,KAAM,CACJH,SAAU,SAvBGR,EA4BnBa,oBAAsB,WACpBb,EAAKY,YACLZ,EAAKd,MAAM4B,mBA9BMd,EAiCnBe,mBAAqB,WACnBf,EAAKY,YACLZ,EAAKd,MAAM8B,kBAhCXhB,EAAKiB,MAAQ,CACXN,KAAM,CACJH,SAAU,OALGR,wEAsCV,IAEChB,EAAYC,KAAKC,MAAjBF,QAFDkC,EAKoDjC,KAAKC,MAAxDiC,EALDD,EAKCC,KAAMC,EALPF,EAKOE,uBAAwBC,EAL/BH,EAK+BG,WAAYC,EAL3CJ,EAK2CI,KAL3CC,EAQkCtC,KAAKC,MAAtCsC,EARDD,EAQCC,cAAeC,EARhBF,EAQgBE,cAEfd,EAAS1B,KAAKgC,MAAdN,KAER,OACExB,EAAAC,EAAAC,cAACqC,GAAA,EAAD,CAAQC,MAAM,UAAU/B,SAAS,UAC/BT,EAAAC,EAAAC,cAACuC,GAAA,EAAD,CAASC,QAAQ,WACf1C,EAAAC,EAAAC,cAACyC,GAAA,EAAD,CAAYC,MAAO,CAAEC,SAAU,GAAKL,MAAM,UAAUE,QAAQ,MAAMV,GAEjEE,GACClC,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,SAAP,KACE9C,EAAAC,EAAAC,cAAC6C,GAAA,EAAD,CAAYP,MAAM,UAAUQ,SAAUf,EAAwBgB,QAASnD,KAAKqB,UACzEgB,EAAKe,SAAWlD,EAAAC,EAAAC,cAACiD,GAAA,EAAD,CAAQC,IAAI,SAASC,IAAKlB,EAAKe,WAAelD,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,OAGjED,EAAAC,EAAAC,cAACqD,GAAA,EAAD,CAAMlC,SAAUG,EAAKH,SAAUmC,KAAMC,QAAQjC,EAAKH,UAAWqC,QAAS5D,KAAK2B,WACzEzB,EAAAC,EAAAC,cAACyD,GAAA,EAAD,CAAUX,SAAUf,EAAwBgB,QAASnD,KAAK4B,qBAA1D,YACA1B,EAAAC,EAAAC,cAACyD,GAAA,EAAD,CAAUX,SAAUf,EAAwBgB,QAASnD,KAAK8B,oBAA1D,eAKJM,GACAlC,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,SAAP,KACE9C,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQxD,UAAWP,EAAQgE,aAAcrB,MAAM,YAAYQ,SAAUf,EAAwBS,QAAQ,YAAYO,QAASZ,GAA1H,WACArC,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,YAAYQ,SAAUf,EAAwBS,QAAQ,YAAYO,QAASX,GAAzF,qBAxEIhC,aA4FHC,gBAlGA,SAACC,GAAD,MAAY,CACzBqD,aAAc,CACZC,YAAatD,EAAMuD,QAAQ,MAgGhBxD,CAAmBK,2ECjG5BoD,oLACK,IAECnE,EAAYC,KAAKC,MAAjBF,QAFDkC,EAKsCjC,KAAKC,MAA1CkE,EALDlC,EAKCkC,KAAMC,EALPnC,EAKOmC,MAAOC,EALdpC,EAKcoC,YAAaC,EAL3BrC,EAK2BqC,OAElC,OACEpE,EAAAC,EAAAC,cAAA,OAAKE,UAAWP,EAAQwE,QACrBJ,EACAC,GAASlE,EAAAC,EAAAC,cAACyC,GAAA,EAAD,CAAYH,MAAM,gBAAgBE,QAAQ,MAAMwB,GACzDC,GAAenE,EAAAC,EAAAC,cAACyC,GAAA,EAAD,CAAYH,MAAM,gBAAgBE,QAAQ,aAAayB,GACtEC,UAbgB9D,aA4BVC,gBAtCA,CACb8D,OAAQ,CACN5D,SAAU,WACVC,IAAK,MACLC,KAAM,MACN2D,UAAW,wBACXC,UAAW,WAgCAhE,CAAmByD,ICf5BQ,oLACK,IAEC3E,EAAYC,KAAKC,MAAjBF,QAFDkC,EAKuBjC,KAAKC,MAA3BmC,EALDH,EAKCG,WAAYgC,EALbnC,EAKamC,MAEpB,OAAIhC,EAEAlC,EAAAC,EAAAC,cAACuE,GAAD,CACER,KAAMjE,EAAAC,EAAAC,cAACwE,GAAAzE,EAAD,CAAUG,UAAWP,EAAQ8E,eAAgBnC,MAAM,WACzD0B,MAAM,OACNC,YAAY,4EACZC,OACEpE,EAAAC,EAAAC,cAAC0E,GAAA,EAAD,CAAKxE,UAAWP,EAAQuE,OAAQ5B,MAAM,YAAYqC,UAAWC,IAAMC,GAAG,cAAcrC,QAAQ,YAA5F,0BASN1C,EAAAC,EAAAC,cAACuE,GAAD,CACER,KAAMjE,EAAAC,EAAAC,cAAC8E,GAAA/E,EAAD,CAAUG,UAAWP,EAAQ8E,eAAgBnC,MAAM,WACzD0B,MAAOA,EACPC,YAAY,yEACZC,OACEpE,EAAAC,EAAAC,cAAC0E,GAAA,EAAD,CAAKxE,UAAWP,EAAQuE,OAAQ5B,MAAM,YAAYyC,KAAK,sDAAsDC,IAAI,sBAAsBC,OAAO,SAASzC,QAAQ,YAC7J1C,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAkBG,UAAWP,EAAQwF,aADvC,mBA7BgB/E,aA8CXC,gBA5DA,SAACC,GAAD,MAAY,CACzBmE,eAAgB,CACdW,SAAU9E,EAAMuD,QAAQ,KAG1BK,OAAQ,CACNmB,UAAW/E,EAAMuD,QAAQ,IAG3BsB,WAAY,CACVvB,YAAatD,EAAMuD,QAAQ,MAkDhBxD,CAAmBiE,yBChD5BgB,oLACK,IAEC3F,EAAYC,KAAKC,MAAjBF,QAER,OACEG,EAAAC,EAAAC,cAACuE,GAAD,CACER,KAAMjE,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CAAUG,UAAWP,EAAQ8E,eAAgBnC,MAAM,WACzD0B,MAAM,oBACNC,YAAY,iDACZC,OACEpE,EAAAC,EAAAC,cAAC0E,GAAA,EAAD,CAAKxE,UAAWP,EAAQuE,OAAQ5B,MAAM,YAAYqC,UAAWC,IAAMC,GAAG,IAAIrC,QAAQ,YAChF1C,EAAAC,EAAAC,cAACwE,GAAAzE,EAAD,CAAUG,UAAWP,EAAQwF,aAD/B,qBAXoB/E,aAwBfC,gBAtCA,SAACC,GAAD,MAAY,CACzBmE,eAAgB,CACdW,SAAU9E,EAAMuD,QAAQ,KAG1BK,OAAQ,CACNmB,UAAW/E,EAAMuD,QAAQ,IAG3BsB,WAAY,CACVvB,YAAatD,EAAMuD,QAAQ,MA4BhBxD,CAAmBiF,oHCS5BE,oLACK,IAEC7F,EAAYC,KAAKC,MAAjBF,QAGAoC,EAA2BnC,KAAKC,MAAhCkC,uBAGA0D,EAAwB7F,KAAKC,MAA7B4F,oBAER,OACE3F,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,SAAP,KACE9C,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAK,MACX7F,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CAAe1F,UAAWP,EAAQkG,eAChC/F,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQxD,UAAWP,EAAQmG,OAAQhD,SAAUf,EAAwBS,QAAQ,YAAYO,QAAS,kBAAM0C,EAAoB,IAAIM,IAASC,KAAKC,sBAC5InG,EAAAC,EAAAC,cAACkG,GAAAnG,EAAD,CAAYG,UAAWP,EAAQoE,OADjC,UAKAjE,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQxD,UAAWP,EAAQwG,SAAUrD,SAAUf,EAAwBS,QAAQ,YAAYO,QAAS,kBAAM0C,EAAoB,IAAIM,IAASC,KAAKI,wBAC9ItG,EAAAC,EAAAC,cAACqG,GAAAtG,EAAD,CAAiBG,UAAWP,EAAQoE,OADtC,YAKAjE,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQxD,UAAWP,EAAQ2G,QAASxD,SAAUf,EAAwBS,QAAQ,YAAYO,QAAS,kBAAM0C,EAAoB,IAAIM,IAASC,KAAKO,uBAC7IzG,EAAAC,EAAAC,cAACwG,GAAAzG,EAAD,CAAaG,UAAWP,EAAQoE,OADlC,WAKAjE,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQxD,UAAWP,EAAQ8G,OAAQ3D,SAAUf,EAAwBS,QAAQ,YAAYO,QAAS,kBAAM0C,EAAoB,IAAIM,IAASC,KAAKU,sBAC5I5G,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAkBG,UAAWP,EAAQoE,OADvC,YAOJjE,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,KAAM,KAAM,OAC/B7F,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CAAe1F,UAAWP,EAAQgH,qBAChC7G,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQxD,UAAS,GAAA0G,OAAKjH,EAAQmG,OAAb,KAAAc,OAAuBjH,EAAQkH,cAAgB/D,SAAUf,EAAwBS,QAAQ,YAAYO,QAAS,kBAAM0C,EAAoB,IAAIM,IAASC,KAAKC,sBACzKnG,EAAAC,EAAAC,cAACkG,GAAAnG,EAAD,CAAYG,UAAWP,EAAQoE,OADjC,UAKAjE,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQxD,UAAS,GAAA0G,OAAKjH,EAAQwG,SAAb,KAAAS,OAAyBjH,EAAQkH,cAAgB/D,SAAUf,EAAwBS,QAAQ,YAAYO,QAAS,kBAAM0C,EAAoB,IAAIM,IAASC,KAAKI,wBAC3KtG,EAAAC,EAAAC,cAACqG,GAAAtG,EAAD,CAAiBG,UAAWP,EAAQoE,OADtC,YAKAjE,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQxD,UAAS,GAAA0G,OAAKjH,EAAQ2G,QAAb,KAAAM,OAAwBjH,EAAQkH,cAAgB/D,SAAUf,EAAwBS,QAAQ,YAAYO,QAAS,kBAAM0C,EAAoB,IAAIM,IAASC,KAAKO,uBAC1KzG,EAAAC,EAAAC,cAACwG,GAAAzG,EAAD,CAAaG,UAAWP,EAAQoE,OADlC,WAKAjE,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQxD,UAAS,GAAA0G,OAAKjH,EAAQ8G,OAAb,KAAAG,OAAuBjH,EAAQkH,cAAgB/D,SAAUf,EAAwBS,QAAQ,YAAYO,QAAS,kBAAM0C,EAAoB,IAAIM,IAASC,KAAKU,sBACzK5G,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAkBG,UAAWP,EAAQoE,OADvC,oBAtDmB3D,aAyEhBC,gBAtHA,SAACC,GAAD,MAAY,CACzBuF,cAAe,CACbiB,eAAgB,SAEhBzB,UAAW/E,EAAMuD,QAAQ,KACzBkD,aAAczG,EAAMuD,QAAQ,IAG9B8C,oBAAqB,CACnBK,QAAS,OACTF,eAAgB,UAEhBzB,UAAW/E,EAAMuD,QAAQ,KACzBkD,cAAezG,EAAMuD,QAAQ,KAG/BgD,aAAc,CACZE,aAAczG,EAAMuD,QAAQ,MAG9BiC,OAAQ,CACNmB,gBAAiB,UACjB3E,MAAO,WAGT6D,SAAU,CACRc,gBAAiB,UACjB3E,MAAO,WAGTgE,QAAS,CACPW,gBAAiB,UACjB3E,MAAO,WAGTmE,OAAQ,CACNQ,gBAAiB,UACjB3E,MAAO,WAGTyB,KAAM,CACJH,YAAatD,EAAMuD,QAAQ,OA6EhBxD,CAAmBmF,ICtH5B0B,GAAe,CACnBC,aAAc,GACdC,SAAU,GACVC,qBAAsB,GAEtBC,OAAQ,MAuJKC,eAnJb,SAAAA,EAAY1H,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhB,KAAA2H,IACjB5G,EAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAA2G,GAAAvG,KAAApB,KAAMC,KAKR2H,OAAS,WAAM,IAAAC,EAC4C9G,EAAKiB,MAAtDuF,EADKM,EACLN,aAAcC,EADTK,EACSL,SAAUC,EADnBI,EACmBJ,qBAE1BC,EAASI,IAAS,CAAEP,eAAcC,WAAUC,wBAAwB1G,EAAKd,MAAM8H,aAEjFL,EACF3G,EAAKU,SAAS,CAAEiG,WAEhB3G,EAAKU,SAAS,CACZiG,OAAQ,MACP,WACD3G,EAAKd,MAAM2H,OAAOL,EAAcC,EAAUC,MAjB7B1G,EAsBnBiH,aAAe,WACbjH,EAAKU,SAAS6F,KAvBGvG,EA0BnBkH,eAAiB,SAAC3G,GAChB,IAAM4G,EAAM5G,EAAM4G,IAEd5G,EAAM6G,QAAU7G,EAAM8G,SAAW9G,EAAM+G,SAAW/G,EAAMgH,UAIhD,UAARJ,GACFnH,EAAK6G,UAlCU7G,EAsCnBwH,yBAA2B,SAACjH,GAC1B,IAAMiG,EAAejG,EAAM+D,OAAOmD,MAElCzH,EAAKU,SAAS,CAAE8F,kBAzCCxG,EA4CnB0H,qBAAuB,SAACnH,GACtB,IAAMkG,EAAWlG,EAAM+D,OAAOmD,MAE9BzH,EAAKU,SAAS,CAAE+F,cA/CCzG,EAkDnB2H,iCAAmC,SAACpH,GAClC,IAAMmG,EAAuBnG,EAAM+D,OAAOmD,MAE1CzH,EAAKU,SAAS,CAAEgG,0BArDC1G,EAwDnB4H,kBAAoB,WAClB5H,EAAK6G,UAtDL7G,EAAKiB,MAAQsF,GAHIvG,wEA4DV,IAAAkB,EAE8CjC,KAAKC,MAAlD2I,EAFD3G,EAEC2G,WAAYlF,EAFbzB,EAEayB,KAAMvB,EAFnBF,EAEmBE,uBAFnBG,EAKkCtC,KAAKC,MAAtC2D,EALDtB,EAKCsB,QAASiC,EALVvD,EAKUuD,oBALVgD,EAO0D7I,KAAKgC,MAA9DuF,EAPDsB,EAOCtB,aAAcC,EAPfqB,EAOerB,SAAUC,EAPzBoB,EAOyBpB,qBAAsBC,EAP/CmB,EAO+CnB,OAEtD,OACExH,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CAAQF,WAAYA,EAAYlF,KAAMA,EAAME,QAASA,EAASmF,SAAU/I,KAAKgI,aAAcgB,WAAYhJ,KAAKiI,gBAC1G/H,EAAAC,EAAAC,cAAC6I,GAAA,EAAD,+BAIA/I,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,KACEhJ,EAAAC,EAAAC,cAAC+I,GAAA,EAAD,kGAIAjJ,EAAAC,EAAAC,cAACgJ,GAAD,CAAkBjH,uBAAwBA,EAAwB0D,oBAAqBA,IAEvF3F,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,QACbC,SAAU7B,IAAUA,EAAOH,cAC3BiC,WAAS,EACTC,WAAa/B,GAAUA,EAAOH,aAAgBG,EAAOH,aAAa,GAAK,GACvEmC,MAAM,iBACNC,OAAO,SACPC,SAAU5J,KAAKuI,yBACfsB,UAAQ,EACRC,KAAK,QACLtB,MAAOjB,IAGTrH,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,eACbC,SAAU7B,IAAUA,EAAOF,UAC3BgC,WAAS,EACTC,WAAa/B,GAAUA,EAAOF,SAAYE,EAAOF,SAAS,GAAK,GAC/DkC,MAAM,WACNC,OAAO,SACPC,SAAU5J,KAAKyI,qBACfoB,UAAQ,EACRC,KAAK,WACLtB,MAAOhB,IAGTtH,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,WACbC,SAAU7B,IAAUA,EAAOD,sBAC3B+B,WAAS,EACTC,WAAa/B,GAAUA,EAAOD,qBAAwBC,EAAOD,qBAAqB,GAAK,GACvFiC,MAAM,wBACNC,OAAO,SACPC,SAAU5J,KAAK0I,iCACfmB,UAAQ,EACRC,KAAK,WACLtB,MAAOf,MAKbvH,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,KACE9F,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUS,QAASS,GAAjC,UACA1D,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUQ,UAAYqE,IAAiBC,IAAaC,GAAyBtF,EAAwBS,QAAQ,YAAYO,QAASnD,KAAK2I,mBAArJ,oBA/HiBnI,aCRrB8G,GAAe,CACnBC,aAAc,GACdC,SAAU,GAEVE,OAAQ,MAuIKqC,eAnIb,SAAAA,EAAY9J,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhB,KAAA+J,IACjBhJ,EAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAA+I,GAAA3I,KAAApB,KAAMC,KAKR+J,OAAS,WAAM,IAAAnC,EACsB9G,EAAKiB,MAAhCuF,EADKM,EACLN,aAAcC,EADTK,EACSL,SAEhBE,EAASI,IAAS,CAAEP,eAAcC,YAAYzG,EAAKd,MAAM8H,aAE3DL,EACF3G,EAAKU,SAAS,CAAEiG,WAEhB3G,EAAKU,SAAS,CACZiG,OAAQ,MACP,WACD3G,EAAKd,MAAM+J,OAAOzC,EAAcC,MAjBnBzG,EAsBnBiH,aAAe,WACbjH,EAAKU,SAAS6F,KAvBGvG,EA0BnBkH,eAAiB,SAAC3G,GAChB,IAAM4G,EAAM5G,EAAM4G,IAEd5G,EAAM6G,QAAU7G,EAAM8G,SAAW9G,EAAM+G,SAAW/G,EAAMgH,UAIhD,UAARJ,GACFnH,EAAKiJ,UAlCUjJ,EAsCnBwH,yBAA2B,SAACjH,GAC1B,IAAMiG,EAAejG,EAAM+D,OAAOmD,MAElCzH,EAAKU,SAAS,CAAE8F,kBAzCCxG,EA4CnB0H,qBAAuB,SAACnH,GACtB,IAAMkG,EAAWlG,EAAM+D,OAAOmD,MAE9BzH,EAAKU,SAAS,CAAE+F,cA/CCzG,EAkDnBkJ,kBAAoB,WAClBlJ,EAAKiJ,UAhDLjJ,EAAKiB,MAAQsF,GAHIvG,wEAsDV,IAAAkB,EAE8CjC,KAAKC,MAAlD2I,EAFD3G,EAEC2G,WAAYlF,EAFbzB,EAEayB,KAAMvB,EAFnBF,EAEmBE,uBAFnBG,EAKwDtC,KAAKC,MAA5D2D,EALDtB,EAKCsB,QAASiC,EALVvD,EAKUuD,oBAAqBqE,EAL/B5H,EAK+B4H,qBAL/BrB,EAOoC7I,KAAKgC,MAAxCuF,EAPDsB,EAOCtB,aAAcC,EAPfqB,EAOerB,SAAUE,EAPzBmB,EAOyBnB,OAEhC,OACExH,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CAAQF,WAAYA,EAAYlF,KAAMA,EAAME,QAASA,EAASmF,SAAU/I,KAAKgI,aAAcgB,WAAYhJ,KAAKiI,gBAC1G/H,EAAAC,EAAAC,cAAC6I,GAAA,EAAD,gCAIA/I,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,KACEhJ,EAAAC,EAAAC,cAAC+I,GAAA,EAAD,kHAKAjJ,EAAAC,EAAAC,cAACgJ,GAAD,CAAkBjH,uBAAwBA,EAAwB0D,oBAAqBA,IAEvF3F,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,QACbC,SAAU7B,IAAUA,EAAOH,cAC3BiC,WAAS,EACTC,WAAa/B,GAAUA,EAAOH,aAAgBG,EAAOH,aAAa,GAAK,GACvEoC,OAAO,SACPC,SAAU5J,KAAKuI,yBACf4B,YAAY,iBACZN,UAAQ,EACRC,KAAK,QACLtB,MAAOjB,IAGTrH,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,mBACbC,SAAU7B,IAAUA,EAAOF,UAC3BgC,WAAS,EACTC,WAAa/B,GAAUA,EAAOF,SAAYE,EAAOF,SAAS,GAAK,GAC/DmC,OAAO,SACPC,SAAU5J,KAAKyI,qBACf0B,YAAY,WACZN,UAAQ,EACRC,KAAK,WACLtB,MAAOhB,MAKbtH,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,KACE9F,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUS,QAASS,GAAjC,UACA1D,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUQ,SAAUf,EAAwBS,QAAQ,WAAWO,QAAS+G,GAAtF,kBACAhK,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUQ,UAAYqE,IAAiBC,GAAarF,EAAwBS,QAAQ,YAAYO,QAASnD,KAAKiK,mBAA5H,oBA9GiBzJ,aCTrB8G,GAAe,CACnBC,aAAc,GAEdG,OAAQ,MAgHK0C,eA5Gb,SAAAA,EAAYnK,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhB,KAAAoK,IACjBrJ,EAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAAoJ,GAAAhJ,KAAApB,KAAMC,KAKRoK,cAAgB,WAAM,IACZ9C,EAAiBxG,EAAKiB,MAAtBuF,aAEFG,EAASI,IAAS,CAAEP,gBAAgBxG,EAAKd,MAAM8H,aAEjDL,EACF3G,EAAKU,SAAS,CAAEiG,WAEhB3G,EAAKU,SAAS,CACZiG,OAAQ,MACP,WACD3G,EAAKd,MAAMoK,cAAc9C,MAjBZxG,EAsBnBiH,aAAe,WACbjH,EAAKU,SAAS6F,KAvBGvG,EA0BnBkH,eAAiB,SAAC3G,GAChB,IAAM4G,EAAM5G,EAAM4G,IAEd5G,EAAM6G,QAAU7G,EAAM8G,SAAW9G,EAAM+G,SAAW/G,EAAMgH,UAIhD,UAARJ,IACF5G,EAAMgJ,iBAENvJ,EAAKsJ,kBApCUtJ,EAwCnBwH,yBAA2B,SAACjH,GAC1B,IAAMiG,EAAejG,EAAM+D,OAAOmD,MAElCzH,EAAKU,SAAS,CAAE8F,kBA3CCxG,EA8CnBwJ,yBAA2B,WACzBxJ,EAAKsJ,iBA5CLtJ,EAAKiB,MAAQsF,GAHIvG,wEAkDV,IAAAkB,EAEkCjC,KAAKC,MAAtCyD,EAFDzB,EAECyB,KAAMvB,EAFPF,EAEOE,uBAGNyB,EAAY5D,KAAKC,MAAjB2D,QALDiE,EAO0B7H,KAAKgC,MAA9BuF,EAPDM,EAOCN,aAAcG,EAPfG,EAOeH,OAEtB,OACExH,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CAAQpF,KAAMA,EAAME,QAASA,EAASmF,SAAU/I,KAAKgI,aAAcgB,WAAYhJ,KAAKiI,gBAClF/H,EAAAC,EAAAC,cAAC6I,GAAA,EAAD,4BAIA/I,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,KACEhJ,EAAAC,EAAAC,cAAC+I,GAAA,EAAD,6GAIAjJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,QACbkB,WAAS,EACTjB,SAAU7B,IAAUA,EAAOH,cAC3BiC,WAAS,EACTC,WAAa/B,GAAUA,EAAOH,aAAgBG,EAAOH,aAAa,GAAK,GACvEoC,OAAO,SACPC,SAAU5J,KAAKuI,yBACf4B,YAAY,iBACZN,UAAQ,EACRC,KAAK,QACLtB,MAAOjB,MAKbrH,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,KACE9F,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUS,QAASS,GAAjC,UACA1D,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUQ,UAAWqE,GAAgBpF,EAAwBS,QAAQ,YAAYO,QAASnD,KAAKuK,0BAA7G,2BA1FwB/J,2CC2B5BiK,oLACK,IAEC1K,EAAYC,KAAKC,MAAjBF,QAFDkC,EAKkCjC,KAAKC,MAAtCoC,EALDJ,EAKCI,KAAMF,EALPF,EAKOE,uBAGNuI,EAAwB1K,KAAKC,MAA7ByK,oBAER,OAAKrI,EAAKe,UAAaf,EAAKsI,aAAgBtI,EAAKuI,MAK/C1K,EAAAC,EAAAC,cAAA,OAAKE,UAAWP,EAAQ8K,SACtB3K,EAAAC,EAAAC,cAAA,OAAKE,UAAWP,EAAQ+K,uBACtB5K,EAAAC,EAAAC,cAACiD,GAAA,EAAD,CAAQ/C,UAAWP,EAAQgL,OAAQzH,IAAI,SAASC,IAAKlB,EAAKe,WAEzDsH,GACCxK,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,CAAS5G,MAAM,iBACblE,EAAAC,EAAAC,cAAC0E,GAAA,EAAD,CAAKxE,UAAWP,EAAQkL,aAAcvI,MAAM,UAAUQ,SAAUf,EAAwB+I,KAAK,QAAQ/H,QAASuH,GAC5GxK,EAAAC,EAAAC,cAAC+K,GAAAhL,EAAD,SAMRD,EAAAC,EAAAC,cAAA,OAAKE,UAAWP,EAAQqL,MACtBlL,EAAAC,EAAAC,cAACyC,GAAA,EAAD,CAAYD,QAAQ,MAAMP,EAAKsI,aAC/BzK,EAAAC,EAAAC,cAACyC,GAAA,EAAD,CAAYvC,UAAWP,EAAQwH,aAAc7E,MAAM,gBAAgBE,QAAQ,SAASP,EAAKuI,SAnBtF,YAZSpK,aA+CPC,gBAlFA,SAACC,GAAD,MAAY,CACzBmK,QAAS,CACPpF,UAAW/E,EAAMuD,QAAQ,GACzBQ,UAAW,UAGbqG,sBAAuB,CACrBnK,SAAU,WACV0K,MAAO,MACPC,WAAY,OACZtH,YAAa,QAGf+G,OAAQ,CACNM,MAAO3K,EAAMuD,QAAQ,IACrBsH,OAAQ7K,EAAMuD,QAAQ,IACtBD,YAAa,OACbsH,WAAY,QAGdL,aAAc,CACZtK,SAAU,WACVC,IAAK,QACLC,KAAM,OAGRuK,KAAM,CACJ3F,UAAW/E,EAAMuD,QAAQ,KAG3BsD,aAAc,CACZ9B,WAAY/E,EAAMuD,QAAQ,OAmDfxD,CAAmBgK,ICpE5Be,8MACJvD,eAAiB,SAAC3G,GAChB,IAAM4G,EAAM5G,EAAM4G,IAEd5G,EAAM6G,QAAU7G,EAAM8G,SAAW9G,EAAM+G,SAAW/G,EAAMgH,UAIhD,UAARJ,GACFnH,EAAKd,MAAMwL,qFAIN,IAEC1L,EAAYC,KAAKC,MAAjBF,QAFDkC,EAKsBjC,KAAKC,MAA1B2I,EALD3G,EAKC2G,WAAYlF,EALbzB,EAKayB,KALbpB,EAQyCtC,KAAKC,MAA7CmE,EARD9B,EAQC8B,MAAO/B,EARRC,EAQQD,KAAMF,EARdG,EAQcH,uBAGbyB,EAAY5D,KAAKC,MAAjB2D,QAXD8H,EAckC1L,KAAKC,MAAtC0L,EAdDD,EAcCC,cAAeC,EAdhBF,EAcgBE,cAEjBC,EAAkBxJ,EAAKe,UAAYf,EAAKsI,aAAetI,EAAKuI,MAElE,OACE1K,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CAAQF,WAAYA,EAAYlF,KAAMA,EAAME,QAASA,EAASoF,WAAYhJ,KAAKiI,gBAC5E4D,GACC3L,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,KACEhJ,EAAAC,EAAAC,cAAC0L,GAAD,CAASzJ,KAAMA,IAEfnC,EAAAC,EAAAC,cAACyC,GAAA,EAAD,CAAYvC,UAAWP,EAAQqE,MAAOxB,QAAQ,MAA9C,cAA+DwB,EAA/D,KAEAlE,EAAAC,EAAAC,cAAC+I,GAAA,EAAD,CAAmB7I,UAAWP,EAAQgM,aAAtC,yKAOFF,GACA3L,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,SAAP,KACE9C,EAAAC,EAAAC,cAAC6I,GAAA,EAAD,mBACc7E,EADd,KAIAlE,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,KACEhJ,EAAAC,EAAAC,cAAC+I,GAAA,EAAD,8KAQNjJ,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,KACE9F,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUS,QAASwI,GAAjC,UACAzL,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUQ,SAAUf,EAAwBS,QAAQ,YAAYO,QAASyI,GAAvF,mBA/DkBpL,aAsFbC,gBAhGA,SAACC,GAAD,MAAY,CACzB0D,MAAO,CACLqB,UAAW/E,EAAMuD,QAAQ,IAG3B8H,YAAa,CACXtG,UAAW/E,EAAMuD,QAAQ,MA0FdxD,CAAmB+K,mLCnBnBQ,8MAjFb/D,eAAiB,SAAC3G,GAChB,IAAM4G,EAAM5G,EAAM4G,IAEd5G,EAAM6G,QAAU7G,EAAM8G,SAAW9G,EAAM+G,SAAW/G,EAAMgH,UAIhD,UAARJ,GACFnH,EAAKd,MAAMwL,qFAIN,IAEC/H,EAAS1D,KAAKC,MAAdyD,KAFDzB,EAYHjC,KAAKC,MANPmE,EANKnC,EAMLmC,MACA2H,EAPK9J,EAOL8J,YACAE,EARKhK,EAQLgK,WACAC,EATKjK,EASLiK,OACAC,EAVKlK,EAULkK,gBACAC,EAXKnK,EAWLmK,kBAIMxI,EAAY5D,KAAKC,MAAjB2D,QAfDtB,EAkB8BtC,KAAKC,MAAlC0L,EAlBDrJ,EAkBCqJ,cAAeF,EAlBhBnJ,EAkBgBmJ,UAEvB,OAAK7H,EAKH1D,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CAAQpF,KAAMA,EAAME,QAASA,EAASoF,WAAYhJ,KAAKiI,gBACpD7D,GAASlE,EAAAC,EAAAC,cAAC6I,GAAA,EAAD,KAAc7E,GAEvB2H,GACC7L,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,KACEhJ,EAAAC,EAAAC,cAAC+I,GAAA,EAAD,KAAoB4C,KAItBJ,GAAiBF,IACjBvL,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,KACG2F,GACCzL,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUS,QAASwI,GAC9BM,GAAc,UAIlBR,GACCvL,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUQ,SAAUiJ,EAAiBvJ,QAASwJ,GAAqB,YAAajJ,QAASsI,GACpGS,GAAU,QAvBd,YAlCoB1L,aC6B3B6L,eACJ,SAAAA,EAAYpM,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhB,KAAAqM,IACjBtL,EAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAAqL,GAAAjL,KAAApB,KAAMC,KASRqM,6BAA+B,WAC7BvL,EAAKU,SAAS,CACZ8K,yBAA0B,CACxB7I,MAAM,MAbO3C,EAkBnByL,8BAAgC,SAACC,GAC/B1L,EAAKU,SAAS,CACZ8K,yBAA0B,CACxB7I,MAAM,IAEP,WACG+I,GAAgC,oBAAbA,GACrBA,OAzBa1L,EA8BnB2L,mBAAqB,WACnB3L,EAAKyL,8BAA8B,WACjCzL,EAAKd,MAAM0M,+BA7Bb5L,EAAKiB,MAAQ,CACXuK,yBAA0B,CACxB7I,MAAM,IALO3C,wEAoCV,IAEChB,EAAYC,KAAKC,MAAjBF,QAFDkC,EAK2DjC,KAAKC,MAA/DoC,EALDJ,EAKCI,KAAMF,EALPF,EAKOE,uBAAwByK,EAL/B3K,EAK+B2K,wBAL/BtK,EAQoHtC,KAAKC,MAAxH4M,EARDvK,EAQCuK,iBAAkBnC,EARnBpI,EAQmBoI,oBAAqBoC,EARxCxK,EAQwCwK,sBAAuBC,EAR/DzK,EAQ+DyK,yBAA0BC,EARzF1K,EAQyF0K,uBAExFT,EAA6BvM,KAAKgC,MAAlCuK,yBAEFV,EAAkBxJ,EAAKe,UAAYf,EAAKsI,aAAetI,EAAKuI,MAElE,OACE1K,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,SAAP,KACE9C,EAAAC,EAAAC,cAAC0L,GAAD,CAASzJ,KAAMA,EAAMF,uBAAwBA,EAAwBuI,oBAAqBA,IAE1FxK,EAAAC,EAAAC,cAAC+I,GAAA,EAAD,CAAmB7I,UAAWuL,EAAiB9L,EAAQkN,0BAA4BlN,EAAQmN,6BAA3F,sFAIAhN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,MACI9K,EAAKe,UACLlD,EAAAC,EAAAC,cAACgN,GAAA,EAAD,KACElN,EAAAC,EAAAC,cAACiN,GAAA,EAAD,KACEnN,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,CAAS5G,MAAM,UACblE,EAAAC,EAAAC,cAACkN,GAAAnN,EAAD,QAIJD,EAAAC,EAAAC,cAACmN,GAAA,EAAD,CAAcC,QAAQ,uCAEtBtN,EAAAC,EAAAC,cAACqN,GAAA,EAAD,KACEvN,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUQ,SAAUf,EAAwBS,QAAQ,YAAYO,QAAS0J,GAAvF,SAKLxK,EAAKsI,aACJzK,EAAAC,EAAAC,cAACgN,GAAA,EAAD,KACElN,EAAAC,EAAAC,cAACiN,GAAA,EAAD,KACEnN,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,CAAS5G,MAAM,gBACblE,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,QAIJD,EAAAC,EAAAC,cAACmN,GAAA,EAAD,CAAcC,QAAQ,eAAeE,UAAWrL,EAAKsI,cAErDzK,EAAAC,EAAAC,cAACqN,GAAA,EAAD,KACEvN,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,CAAS5G,MAAM,UACblE,EAAAC,EAAAC,cAAC6C,GAAA,EAAD,CAAYC,SAAUf,EAAwBgB,QAAS4J,GACrD7M,EAAAC,EAAAC,cAAC+K,GAAAhL,EAAD,WAORkC,EAAKsI,aACLzK,EAAAC,EAAAC,cAACgN,GAAA,EAAD,KACElN,EAAAC,EAAAC,cAACiN,GAAA,EAAD,KACEnN,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,CAAS5G,MAAM,gBACblE,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,QAIJD,EAAAC,EAAAC,cAACmN,GAAA,EAAD,CAAcC,QAAQ,4CAEtBtN,EAAAC,EAAAC,cAACqN,GAAA,EAAD,KACEvN,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUQ,SAAUf,EAAwBS,QAAQ,YAAYO,QAAS2J,GAAvF,SAKLzK,EAAKuI,OACJ1K,EAAAC,EAAAC,cAACgN,GAAA,EAAD,KACElN,EAAAC,EAAAC,cAACiN,GAAA,EAAD,KACEnN,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,CAAS5G,MAAM,kBACblE,EAAAC,EAAAC,cAACuN,GAAAxN,EAAD,QAIJD,EAAAC,EAAAC,cAACmN,GAAA,EAAD,CACEC,QAASnL,EAAKuI,MACd8C,UACExN,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,SAAP,KACGX,EAAKuL,eAAiB,YACpBvL,EAAKuL,eAAiBhB,GAA4B,wCAClDvK,EAAKuL,gBAAkBhB,GAA4B,mBAK1DvK,EAAKuL,eACL1N,EAAAC,EAAAC,cAACqN,GAAA,EAAD,KACGb,GAA2B1M,EAAAC,EAAAC,cAACC,GAAA,EAAD,OAC1BuM,GAA2B1M,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUQ,SAAUf,EAAwBS,QAAQ,YAAYO,QAASnD,KAAKsM,8BAA5F,aAMnCjK,EAAKuI,OACL1K,EAAAC,EAAAC,cAACgN,GAAA,EAAD,KACElN,EAAAC,EAAAC,cAACiN,GAAA,EAAD,KACEnN,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,CAAS5G,MAAM,kBACblE,EAAAC,EAAAC,cAACuN,GAAAxN,EAAD,QAIJD,EAAAC,EAAAC,cAACmN,GAAA,EAAD,CAAcC,QAAQ,+CAEtBtN,EAAAC,EAAAC,cAACqN,GAAA,EAAD,KACEvN,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUQ,SAAUf,EAAwBS,QAAQ,YAAYO,QAAS6J,GAAvF,SAKL3K,EAAKwL,SAASC,gBACb5N,EAAAC,EAAAC,cAACgN,GAAA,EAAD,KACElN,EAAAC,EAAAC,cAACiN,GAAA,EAAD,KACEnN,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,CAAS5G,MAAM,gBACblE,EAAAC,EAAAC,cAAC2N,GAAA5N,EAAD,QAIJD,EAAAC,EAAAC,cAACmN,GAAA,EAAD,CAAcC,QAAQ,eAAeE,UAAWM,KAAO3L,EAAKwL,SAASC,gBAAgBG,OAAO,WAI/F5L,EAAKwL,SAASK,cACbhO,EAAAC,EAAAC,cAACgN,GAAA,EAAD,KACElN,EAAAC,EAAAC,cAACiN,GAAA,EAAD,KACEnN,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,CAAS5G,MAAM,aACblE,EAAAC,EAAAC,cAAC2N,GAAA5N,EAAD,QAIJD,EAAAC,EAAAC,cAACmN,GAAA,EAAD,CAAcC,QAAQ,YAAYE,UAAWM,KAAO3L,EAAKwL,SAASK,cAAcD,OAAO,YAK7F/N,EAAAC,EAAAC,cAAC+N,GAAD,CACEzK,KAAM6I,EAAyB7I,KAE/BU,MAAM,4BACN2H,YAAY,8GACZG,OAAO,OACPC,gBAAiBhK,EACjBiK,mBAAiB,EAEjBxI,QAAS5D,KAAKwM,8BAEdb,cAAe3L,KAAKwM,8BACpBf,UAAWzL,KAAK0M,6BAjMDlM,aAuNVC,gBAjOA,SAACC,GAAD,MAAY,CACzBuM,0BAA2B,CACzBxH,UAAW/E,EAAMuD,QAAQ,IAG3BiJ,4BAA6B,CAC3BzH,UAAW/E,EAAMuD,QAAQ,MA2NdxD,CAAmB4L,kCC9O5B+B,oLACK,IAECrO,EAAYC,KAAKC,MAAjBF,QAFDkC,EAKuDjC,KAAKC,MAA3DoO,EALDpM,EAKCoM,OAAQC,EALTrM,EAKSqM,MAAOC,EALhBtM,EAKgBsM,aAAcC,EAL9BvM,EAK8BuM,eAAgB1E,EAL9C7H,EAK8C6H,KAL9CxH,EAQgEtC,KAAKC,MAApEwO,EARDnM,EAQCmM,qBAAsBC,EARvBpM,EAQuBoM,uBAAwBC,EAR/CrM,EAQ+CqM,aAEtD,OACEzO,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,SAAP,KACE9C,EAAAC,EAAAC,cAAC+I,GAAA,EAAD,CAAmB7I,UAAWP,EAAQ6O,mBAAtC,mMAKA1O,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CAAarF,WAAS,EAACG,OAAO,UAC5BzJ,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,sBAEA5O,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAQnF,SAAU6E,EAAsBjG,MAAO+F,GAC5CF,EAAOW,IAAI,SAACtM,GACX,OAAQxC,EAAAC,EAAAC,cAACyD,GAAA,EAAD,CAAUqE,IAAKxF,EAAMuM,GAAIzG,MAAO9F,EAAMuM,IAAKvM,EAAMR,UAK/DhC,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CAAarF,WAAS,EAACG,OAAO,UAC5BzJ,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,wBAEA5O,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAQnF,SAAU8E,EAAwBlG,MAAOgG,GAC9CH,EAAOW,IAAI,SAACtM,GACX,OAAQxC,EAAAC,EAAAC,cAACyD,GAAA,EAAD,CAAUqE,IAAKxF,EAAMuM,GAAIzG,MAAO9F,EAAMuM,IAAKvM,EAAMR,UAK/DhC,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CAAarF,WAAS,EAACG,OAAO,UAC5BzJ,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,aAEA5O,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAQnF,SAAU+E,EAAcnG,MAAOsB,GACpCwE,EAAMU,IAAI,SAAClF,EAAMoF,GAChB,OAAQhP,EAAAC,EAAAC,cAACyD,GAAA,EAAD,CAAUqE,IAAKgH,EAAO1G,MAAOsB,GAAOA,EAAKqF,OAAO,GAAGC,cAAgBtF,EAAKuF,MAAM,gBA3CxE7O,aAkEbC,gBAxEA,SAACC,GAAD,MAAY,CACzBkO,kBAAmB,CACjBnJ,UAAW/E,EAAMuD,QAAQ,MAsEdxD,CAAmB2N,IC2HnBkB,eA3Lb,SAAAA,EAAYrP,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhB,KAAAsP,IACjBvO,EAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAAsO,GAAAlO,KAAApB,KAAMC,KAORgI,eAAiB,SAAC3G,GAChB,IAAM4G,EAAM5G,EAAM4G,IAEd5G,EAAM6G,QAAU7G,EAAM8G,SAAW9G,EAAM+G,SAAW/G,EAAMgH,UAIhD,UAARJ,GACFnH,EAAKd,MAAM2D,WAhBI7C,EAoBnBwO,UAAY,SAACjO,EAAOkH,GAClBzH,EAAKU,SAAS,CACZ+N,YAAahH,KAtBEzH,EA0BnB0O,YAAc,SAACP,GACbnO,EAAKU,SAAS,CACZ+N,YAAaN,KA5BEnO,EAgCnB2O,iBAAmB,WAAM,IAAAzN,EACsClB,EAAKd,MAA1DsO,EADetM,EACfsM,aAAcC,EADCvM,EACDuM,eAAgB1E,EADf7H,EACe6H,KAAM6F,EADrB1N,EACqB0N,aAExCpB,IAAiBoB,EAAapB,cAAgBC,IAAmBmB,EAAanB,gBAAkB1E,IAAS6F,EAAa7F,MACxH8F,WAAW7O,EAAKd,MAAM4P,aAAc,QAjCtC9O,EAAKiB,MAAQ,CACXwN,YAAa,GAJEzO,wEAwCV,IAAAuB,EAcHtC,KAAKC,MAXP2I,EAHKtG,EAGLsG,WACAlF,EAJKpB,EAILoB,KACArB,EALKC,EAKLD,KACAF,EANKG,EAMLH,uBACAyK,EAPKtK,EAOLsK,wBACAyB,EARK/L,EAQL+L,OACAC,EATKhM,EASLgM,MACAC,EAVKjM,EAULiM,aACAC,EAXKlM,EAWLkM,eACA1E,EAZKxH,EAYLwH,KACA6F,EAbKrN,EAaLqN,aAbKjE,EA4BH1L,KAAKC,MAVP2D,EAlBK8H,EAkBL9H,QACAiJ,EAnBKnB,EAmBLmB,iBACAnC,EApBKgB,EAoBLhB,oBACAoC,EArBKpB,EAqBLoB,sBACAC,EAtBKrB,EAsBLqB,yBACAC,EAvBKtB,EAuBLsB,uBACAL,EAxBKjB,EAwBLiB,0BACA8B,EAzBK/C,EAyBL+C,qBACAC,EA1BKhD,EA0BLgD,uBACAC,EA3BKjD,EA2BLiD,aAGMa,EAAgBxP,KAAKgC,MAArBwN,YAEJM,GAAiC,EAUrC,OARIH,IACFG,EACEvB,IAAiBoB,EAAapB,cAC9BC,IAAmBmB,EAAanB,gBAChC1E,IAAS6F,EAAa7F,MAKxB5J,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CAAQF,WAAYA,EAAYlF,KAAMA,EAAME,QAASA,EAASoF,WAAYhJ,KAAKiI,gBAC7E/H,EAAAC,EAAAC,cAAC6I,GAAA,EAAD,iBAEA/I,EAAAC,EAAAC,cAAC2P,GAAA,EAAD,CAAMC,eAAe,UAAUC,UAAU,UAAUrG,SAAU5J,KAAKuP,UAAW/G,MAAOgH,EAAa5M,QAAQ,aACvG1C,EAAAC,EAAAC,cAAC8P,GAAA,EAAD,CAAKxG,MAAM,YACXxJ,EAAAC,EAAAC,cAAC8P,GAAA,EAAD,CAAKxG,MAAM,gBAGbxJ,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,KACEhJ,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAK,MACM,IAAhByJ,GACCtP,EAAAC,EAAAC,cAAC+P,GAAD,CACE9N,KAAMA,EACNF,uBAAwBA,EACxByK,wBAAyBA,EACzBC,iBAAkBA,EAClBnC,oBAAqBA,EACrBoC,sBAAuBA,EACvBC,yBAA0BA,EAC1BC,uBAAwBA,EACxBL,0BAA2BA,IAId,IAAhB6C,GACCtP,EAAAC,EAAAC,cAACgQ,GAAD,CACE/B,OAAQA,EACRC,MAAOA,EACPC,aAAcA,EACdC,eAAgBA,EAChB1E,KAAMA,EACN2E,qBAAsBA,EACtBC,uBAAwBA,EACxBC,aAAcA,KAKpBzO,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,KAAM,KAAM,OAC/B7F,EAAAC,EAAAC,cAACiQ,GAAAlQ,EAAD,CAAgB+O,MAAOM,EAAac,cAAetQ,KAAKyP,aACtDvP,EAAAC,EAAAC,cAAC+P,GAAD,CACE9N,KAAMA,EACNF,uBAAwBA,EACxByK,wBAAyBA,EACzBC,iBAAkBA,EAClBnC,oBAAqBA,EACrBoC,sBAAuBA,EACvBC,yBAA0BA,EAC1BC,uBAAwBA,EACxBL,0BAA2BA,IAG7BzM,EAAAC,EAAAC,cAACgQ,GAAD,CACE/B,OAAQA,EACRC,MAAOA,EACPC,aAAcA,EACdC,eAAgBA,EAChB1E,KAAMA,EACN2E,qBAAsBA,EACtBC,uBAAwBA,EACxBC,aAAcA,OAMtBzO,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,KACE9F,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUS,QAASS,GAAjC,UAEkB,IAAhB4L,GAAqBM,GAAmC5P,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUE,QAAQ,WAAWO,QAASnD,KAAK0P,kBAAzD,SAE1DxP,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUE,QAAQ,YAAYO,QAASS,GAArD,eA3JmBpD,aC+Ed+P,8MArFbtI,eAAiB,SAAC3G,GAChB,IAAM4G,EAAM5G,EAAM4G,IAEd5G,EAAM6G,QAAU7G,EAAM8G,SAAW9G,EAAM+G,SAAW/G,EAAMgH,UAIhD,UAARJ,IACF5G,EAAMgJ,iBAENvJ,EAAKd,MAAMwL,sFAIN,IAAAxJ,EAEsBjC,KAAKC,MAA1B2I,EAFD3G,EAEC2G,WAAYlF,EAFbzB,EAEayB,KAFbpB,EAK2FtC,KAAKC,MAA/FmE,EALD9B,EAKC8B,MAAO2H,EALRzJ,EAKQyJ,YAAayE,EALrBlO,EAKqBkO,UAAWvE,EALhC3J,EAKgC2J,WAAYC,EAL5C5J,EAK4C4J,OAAQC,EALpD7J,EAKoD6J,gBAAiBC,EALrE9J,EAKqE8J,kBALrEV,EAQuB1L,KAAKC,MAA3B2D,EARD8H,EAQC9H,QAASmF,EARV2C,EAQU3C,SARV0H,EAW8BzQ,KAAKC,MAAlC0L,EAXD8E,EAWC9E,cAAeF,EAXhBgF,EAWgBhF,UAEvB,OAAK7H,EAKH1D,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CAAQF,WAAYA,EAAYlF,KAAMA,EAAME,QAASA,EAASmF,SAAUA,EAAUC,WAAYhJ,KAAKiI,gBAChG7D,GAASlE,EAAAC,EAAAC,cAAC6I,GAAA,EAAD,KAAc7E,GAEvB2H,GACC7L,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,KACEhJ,EAAAC,EAAAC,cAAC+I,GAAA,EAAD,KAAoB4C,GAEnByE,GACCtQ,EAAAC,EAAAC,cAAA,YACGoQ,KAMP7E,GAAiBF,IACjBvL,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,KACG2F,GACCzL,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUS,QAASwI,GAC9BM,GAAc,UAIlBR,GACCvL,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,CAAQpB,MAAM,UAAUQ,SAAUiJ,EAAiBvJ,QAASwJ,GAAqB,YAAajJ,QAASsI,GACpGS,GAAU,QA7Bd,YA7Ba1L,aCuD1B2F,IAASuK,cAVM,CACbC,OAAQ,0CACRC,WAAY,6CACZC,YAAa,oDACbC,UAAW,6BACXC,cAAe,yCACfC,kBAAmB,eACnBC,MAAO,wCAKT,IAAM7K,GAAOD,IAASC,OAShBiI,IANclI,IAAS+K,cAMd,CACb,CACEjC,GAAI,MACJ/M,KAAM,MACNiP,OAAQC,KAEV,CACEnC,GAAI,OACJ/M,KAAM,OACNiP,OAAQE,KAEV,CACEpC,GAAI,SACJ/M,KAAM,SACNiP,OAAQG,KAEV,CACErC,GAAI,cACJ/M,KAAM,cACNiP,OAAQI,KAEV,CACEtC,GAAI,SACJ/M,KAAM,SACNiP,OAAQK,KAEV,CACEvC,GAAI,OACJ/M,KAAM,OACNiP,OAAQM,KAEV,CACExC,GAAI,aACJ/M,KAAM,aACNiP,OAAQO,KAEV,CACEzC,GAAI,OACJ/M,KAAM,OACNiP,OAAQQ,KAEV,CACE1C,GAAI,OACJ/M,KAAM,OACNiP,OAAQS,KAEV,CACE3C,GAAI,QACJ/M,KAAM,QACNiP,OAAQU,KAEV,CACE5C,GAAI,cACJ/M,KAAM,cACNiP,OAAQW,KAEV,CACE7C,GAAI,OACJ/M,KAAM,OACNiP,OAAQY,KAEV,CACE9C,GAAI,SACJ/M,KAAM,SACNiP,OAAQa,KAEV,CACE/C,GAAI,QACJ/M,KAAM,QACNiP,OAAQc,KAEV,CACEhD,GAAI,SACJ/M,KAAM,SACNiP,OAAQe,KAEV,CACEjD,GAAI,cACJ/M,KAAM,cACNiP,OAAQgB,KAEV,CACElD,GAAI,QACJ/M,KAAM,QACNiP,OAAQiB,MAEV,CACEnD,GAAI,OACJ/M,KAAM,OACNiP,OAAQkB,MAEV,CACEpD,GAAI,YACJ/M,KAAM,YACNiP,OAAQmB,QAINhE,GAAQ,CACZ,QACA,QAGIqB,GAAe,CACnBpB,aAAc,OACdC,eAAgB,MAChB1E,KAAM,SAGJpJ,GAAQ6R,aAAe,CACzBC,QAAS,CACPhF,QAASiE,IACT/D,UAAW0D,IACXtH,KAAM,WAQJ2I,GACE,iCAGF1K,GAAc,CAClBH,OAAQ,CACNL,aAAc,CACZqD,OAAO,EACP8H,SAAU,CACRC,YAAY,IAIhBnL,SAAU,CACRoL,OAAQ,CACNC,QAAS,GAEXH,SAAU,CACRC,YAAY,IAIhBlL,qBAAsB,CACpBqL,SAAU,WACVF,OAAQ,CACNC,QAAS,GAEXH,SAAU,CACRC,YAAY,KAKlB3I,OAAQ,CACNzC,aAAc,CACZqD,OAAO,EACP8H,SAAU,CACRC,YAAY,IAIhBnL,SAAU,CACRoL,OAAQ,CACNC,QAAS,GAEXH,SAAU,CACRC,YAAY,KAKlBtI,cAAe,CACb9C,aAAc,CACZqD,OAAO,EACP8H,SAAU,CACRC,YAAY,KAKlBI,UAAW,CACThI,OAAQ,CACN2H,SAAU,CACRC,YAAY,GAGdK,IAAK,CACHC,QAAS,oCAKfhI,aAAc,CACZF,OAAQ,CACN2H,SAAU,CACRC,YAAY,GAGdK,IAAK,CACHC,QAAS,oCAKfC,eAAgB,CACdvI,YAAa,CACX+H,SAAU,CACRC,YAAY,KAKlBQ,kBAAmB,CACjBxI,YAAa,CACX+H,SAAU,CACRC,YAAY,KAKlBS,gBAAiB,CACf7L,aAAc,CACZqD,OAAO,EACP8H,SAAU,CACRC,YAAY,MA0oDLU,eAjoDb,SAAAA,EAAYpT,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhB,KAAAqT,IACjBtS,EAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAAqS,GAAAjS,KAAApB,KAAMC,KAHRqT,YAAa,EAEMvS,EAsFnB6G,OAAS,SAACL,EAAcC,EAAUC,GAC5B1G,EAAKiB,MAAMI,YAIVmF,GAAiBC,GAAaC,IAIpBK,IAAS,CACtBP,eACAC,WACAC,wBACCM,GAAYH,SAMf7G,EAAKU,SAAS,CACZU,wBAAwB,GACvB,WACDiE,GAAKmN,+BAA+BhM,EAAcC,GAAUgM,KAAK,SAAChL,GAChEzH,EAAK0S,kBAAkB,WACrB1S,EAAK2S,wBAENC,MAAM,SAACC,GACR,IAAMC,EAAOD,EAAOC,KACdZ,EAAUW,EAAOX,QAEvB,OAAQY,GACN,IAAK,4BACL,IAAK,qBACL,IAAK,6BACL,IAAK,qBAIL,QAEE,YADA9S,EAAK+S,aAAab,MAGrBc,QAAQ,WACThT,EAAKU,SAAS,CACZU,wBAAwB,UAlIbpB,EA6InBiJ,OAAS,SAACzC,EAAcC,GAClBzG,EAAKiB,MAAMI,YAIVmF,GAAiBC,IAIPM,IAAS,CACtBP,eACAC,YACCO,GAAYiC,SAMfjJ,EAAKU,SAAS,CACZU,wBAAwB,GACvB,WACDiE,GAAK4N,2BAA2BzM,EAAcC,GAAUgM,KAAK,SAAChL,GAC5DzH,EAAKkT,kBAAkB,WACrB,IAAM5R,EAAOmG,EAAMnG,KACbsI,EAActI,EAAKsI,YACnBpD,EAAelF,EAAKuI,MAE1B7J,EAAK+S,aAAL,gBAAA9M,OAAkC2D,GAAepD,QAElDoM,MAAM,SAACC,GACR,IAAMC,EAAOD,EAAOC,KACdZ,EAAUW,EAAOX,QAEvB,OAAQY,GACN,IAAK,qBACL,IAAK,qBACL,IAAK,sBACL,IAAK,sBAIL,QAEE,YADA9S,EAAK+S,aAAab,MAGrBc,QAAQ,WACThT,EAAKU,SAAS,CACZU,wBAAwB,UA5LbpB,EAsMnBmT,mBAAqB,SAACC,GAChBpT,EAAKiB,MAAMI,YAIV+R,GAILpT,EAAKU,SAAS,CACZU,wBAAwB,GACvB,WACDiE,GAAKgO,gBAAgBD,GAAUX,KAAK,SAAChL,GACnCzH,EAAK0S,kBAAkB,WACrB1S,EAAKkT,kBAAkB,WACrB,IAAM5R,EAAOmG,EAAMnG,KACbsI,EAActI,EAAKsI,YACnBpD,EAAelF,EAAKuI,MAE1B7J,EAAK+S,aAAL,gBAAA9M,OAAkC2D,GAAepD,UAGpDoM,MAAM,SAACC,GACR,IAAMC,EAAOD,EAAOC,KACdZ,EAAUW,EAAOX,QAEvB,OAAQY,GACN,IAAK,gDACL,IAAK,mCACL,IAAK,+BACL,IAAK,6BACL,IAAK,mDACL,IAAK,qBACL,IAAK,4BACL,IAAK,2BAIL,QAEE,YADA9S,EAAK+S,aAAab,MAGrBc,QAAQ,WACThT,EAAKU,SAAS,CACZU,wBAAwB,SAlPbpB,EA4PnBsJ,cAAgB,SAAC9C,GACXxG,EAAKiB,MAAMI,YAIVmF,IAIUO,IAAS,CACtBP,gBACCQ,GAAYsC,gBAMftJ,EAAKU,SAAS,CACZU,wBAAwB,GACvB,WACDiE,GAAKiO,uBAAuB9M,GAAciM,KAAK,WAC7CzS,EAAKuT,yBAAyB,WAC5BvT,EAAK+S,aAAL,iCAAA9M,OAAmDO,QAEpDoM,MAAM,SAACC,GACR,IAAMC,EAAOD,EAAOC,KACdZ,EAAUW,EAAOX,QAEvB,OAAQY,GACN,IAAK,qBACL,IAAK,gCACL,IAAK,4BACL,IAAK,6BACL,IAAK,4BACL,IAAK,iCACL,IAAK,sBAIL,QAEE,YADA9S,EAAK+S,aAAab,MAGrBc,QAAQ,WACThT,EAAKU,SAAS,CACZU,wBAAwB,UAzSbpB,EAkTnBgS,UAAY,WAAM,IAAAlL,EACqB9G,EAAKiB,MAAlCK,EADQwF,EACRxF,KAAMD,EADEyF,EACFzF,WAAY2I,EADVlD,EACUkD,OAE1B,GAAK1I,GAASD,GAAe2I,IAIzB1I,EAAKe,SAAT,CAIA,IAAMsE,EAASI,IAAS,CAAEiD,UAAUhD,GAAYgL,WAE5CrL,EACF3G,EAAKU,SAAS,SAACO,GAAD,MAAY,CACxBuS,gBAAgBvT,OAAAwT,EAAA,EAAAxT,CAAA,GACXgB,EAAMuS,gBADI,CAEb7M,cAON3G,EAAKU,SAAS,CACZU,wBAAwB,GACvB,WACDE,EAAKoS,cAAc,CAAErR,SAAU2H,IAAUyI,KAAK,WAC5CzS,EAAK2T,qBAAqB,WACxB3T,EAAK+S,aAAa,oBAEnBH,MAAM,SAACC,GACKA,EAAOC,KAApB,IACMZ,EAAUW,EAAOX,QAInBlS,EAAK+S,aAAab,KAGrBc,QAAQ,WACThT,EAAKU,SAAS,CACZU,wBAAwB,UA5VbpB,EAqWnBkK,aAAe,WAAM,IAAApC,EACkB9H,EAAKiB,MAAlCK,EADWwG,EACXxG,KAAMD,EADKyG,EACLzG,WAAY2I,EADPlC,EACOkC,OAE1B,GAAK1I,GAASD,GAAe2I,EAA7B,CAIA,IAAMrD,EAASI,IAAS,CAAEiD,UAAUhD,GAAYkD,cAE5CvD,EACF3G,EAAKU,SAAS,SAACO,GAAD,MAAY,CACxB2S,mBAAmB3T,OAAAwT,EAAA,EAAAxT,CAAA,GACdgB,EAAM2S,mBADO,CAEhBjN,cAOFrF,EAAKe,WAAa2H,EAMtBhK,EAAKU,SAAS,CACZU,wBAAwB,GACvB,WACDE,EAAKoS,cAAc,CAAErR,SAAU2H,IAAUyI,KAAK,WAC5CzS,EAAK6T,wBAAwB,WAC3B7T,EAAK+S,aAAa,sBAEnBH,MAAM,SAACC,GACKA,EAAOC,KAApB,IACMZ,EAAUW,EAAOX,QAInBlS,EAAK+S,aAAab,KAGrBc,QAAQ,WACThT,EAAKU,SAAS,CACZU,wBAAwB,QAvB5BpB,EAAK+S,aAAa,+BA1XH/S,EA0ZnBmS,eAAiB,WAAM,IAAA2B,EACqB9T,EAAKiB,MAAvCK,EADawS,EACbxS,KAAMD,EADOyS,EACPzS,WAAYuI,EADLkK,EACKlK,YAE1B,GAAKtI,GAASD,GAAeuI,IAIzBtI,EAAKsI,YAAT,CAIA,IAAMjD,EAASI,IAAS,CAAE6C,eAAe5C,GAAYmL,gBAEjDxL,EACF3G,EAAKU,SAAS,SAACO,GAAD,MAAY,CACxB8S,qBAAqB9T,OAAAwT,EAAA,EAAAxT,CAAA,GAChBgB,EAAM8S,qBADS,CAElBpN,cAON3G,EAAKU,SAAS,CACZU,wBAAwB,GACvB,WACDE,EAAKoS,cAAc,CAAE9J,gBAAe6I,KAAK,WACvCzS,EAAKgU,0BAA0B,WAC7BhU,EAAK+S,aAAa,0BAEnBH,MAAM,SAACC,GACKA,EAAOC,KAApB,IACMZ,EAAUW,EAAOX,QAInBlS,EAAK+S,aAAab,KAGrBc,QAAQ,WACThT,EAAKU,SAAS,CACZU,wBAAwB,UApcbpB,EA6cnBoS,kBAAoB,WAAM,IAAA6B,EACkBjU,EAAKiB,MAAvCK,EADgB2S,EAChB3S,KAAMD,EADU4S,EACV5S,WAAYuI,EADFqK,EACErK,YAE1B,GAAKtI,GAASD,GAAeuI,EAA7B,CAIA,IAAMjD,EAASI,IAAS,CAAE6C,eAAe5C,GAAYoL,mBAEjDzL,EACF3G,EAAKU,SAAS,SAACO,GAAD,MAAY,CACxBiT,wBAAwBjU,OAAAwT,EAAA,EAAAxT,CAAA,GACnBgB,EAAMiT,wBADY,CAErBvN,cAOFiD,IAAgBtI,EAAKsI,YAMzB5J,EAAKU,SAAS,CACZU,wBAAwB,GACvB,WACDE,EAAKoS,cAAc,CAAE9J,gBAAe6I,KAAK,WACvCzS,EAAKmU,6BAA6B,WAChCnU,EAAK+S,aAAa,4BAEnBH,MAAM,SAACC,GACKA,EAAOC,KAApB,IACMZ,EAAUW,EAAOX,QAInBlS,EAAK+S,aAAab,KAGrBc,QAAQ,WACThT,EAAKU,SAAS,CACZU,wBAAwB,QAvB5BpB,EAAK+S,aAAL,2BAAA9M,OAA6C2D,MAle9B5J,EAkgBnBqS,gBAAkB,WAAM,IAAA+B,EACqBpU,EAAKiB,MAAxCK,EADc8S,EACd9S,KAAMD,EADQ+S,EACR/S,WAAYmF,EADJ4N,EACI5N,aAE1B,GAAKlF,GAASD,GAAemF,IAIzBlF,EAAKuI,MAAT,CAIA,IAAMlD,EAASI,IAAS,CAAEP,gBAAgBQ,GAAYqL,iBAElD1L,EACF3G,EAAKU,SAAS,SAACO,GAAD,MAAY,CACxBoT,sBAAsBpU,OAAAwT,EAAA,EAAAxT,CAAA,GACjBgB,EAAMoT,sBADU,CAEnB1N,cAON3G,EAAKU,SAAS,CACZU,wBAAwB,GACvB,WACDE,EAAKgT,YAAY9N,GAAciM,KAAK,WAClCzS,EAAKuU,2BAA2B,WAC9BvU,EAAK+S,aAAa,4BAEnBH,MAAM,SAACC,GACKA,EAAOC,KAApB,IACMZ,EAAUW,EAAOX,QAInBlS,EAAK+S,aAAab,KAGrBc,QAAQ,WACThT,EAAKU,SAAS,CACZU,wBAAwB,UA5iBbpB,EAqjBnB2L,mBAAqB,SAACD,GAAa,IAAA8I,EACJxU,EAAKiB,MAA1BK,EADyBkT,EACzBlT,KAAMD,EADmBmT,EACnBnT,WAETC,GAASA,EAAKuI,OAAUxI,GAI7BrB,EAAKU,SAAS,CACZU,wBAAwB,GACvB,WACDE,EAAKmT,wBAAwBhC,KAAK,WAChCzS,EAAKU,SAAS,CACZmL,yBAAyB,GACxB,WACD,IAAMrF,EAAelF,EAAKuI,MAE1B7J,EAAK+S,aAAL,+BAAA9M,OAAiDO,IAE7CkF,GAAgC,oBAAbA,GACrBA,QAGHkH,MAAM,SAACC,GACR,IAAMC,EAAOD,EAAOC,KACdZ,EAAUW,EAAOX,QAEvB,OAAQY,GACN,IAAK,gCACL,IAAK,4BACL,IAAK,6BACL,IAAK,4BACL,IAAK,iCAIL,QAEE,YADA9S,EAAK+S,aAAab,MAGrBc,QAAQ,WACThT,EAAKU,SAAS,CACZU,wBAAwB,SA9lBbpB,EAumBnB0U,QAAU,WACH1U,EAAKiB,MAAMI,YAIhBrB,EAAKU,SAAS,CACZU,wBAAwB,GACvB,WACDiE,GAAKqP,UAAUjC,KAAK,WAClBzS,EAAK2U,mBAAmB,WACtB3U,EAAK+S,aAAa,kBAEnBH,MAAM,SAACC,GACKA,EAAOC,KAApB,IACMZ,EAAUW,EAAOX,QAInBlS,EAAK+S,aAAab,KAGrBc,QAAQ,WACThT,EAAKU,SAAS,CACZU,wBAAwB,SA9nBbpB,EA0oBnB4U,YAAc,SAACnD,EAASoD,EAAoBnJ,GAAa,IAAAoJ,EACR9U,EAAKiB,MAA5CuM,EAD+CsH,EAC/CtH,aAAcC,EADiCqH,EACjCrH,eAAgB1E,EADiB+L,EACjB/L,KAEjC0I,EAAQjE,eACXiE,EAAQjE,aAAeA,GAGpBiE,EAAQhE,iBACXgE,EAAQhE,eAAiBA,GAGtBgE,EAAQ1I,OACX0I,EAAQ1I,KAAOA,GAGjBpJ,GAAQ6R,aAAe,CACrBC,QAAS,CACPhF,QAASa,GAAOyH,KAAK,SAAApT,GAAK,OAAIA,EAAMuM,KAAOuD,EAAQjE,eAAc4C,OACjEzD,UAAWW,GAAOyH,KAAK,SAAApT,GAAK,OAAIA,EAAMuM,KAAOuD,EAAQhE,iBAAgB2C,OACrErH,KAAM0I,EAAQ1I,QAIlB/I,EAAKU,SAAS,CACZ8M,aAAciE,EAAQjE,aACtBC,eAAgBgE,EAAQhE,eACxB1E,KAAM0I,EAAQ1I,MACb,WACG8L,EACFG,aAAaC,WAAW,SAExBD,aAAaE,QAAQ,QAASC,KAAKC,UAAU,CAC3C5H,aAAciE,EAAQjE,aACtBC,eAAgBgE,EAAQhE,eACxB1E,KAAM0I,EAAQ1I,QAId2C,GAAgC,oBAAbA,GACrBA,OAjrBa1L,EAyrBnBqV,WAAa,WACXrV,EAAK4U,YAAY,CACfpH,aAAcoB,GAAapB,aAC3BC,eAAgBmB,GAAanB,eAC7B1E,KAAM6F,GAAa7F,OAClB,EAAM,WACP/I,EAAK+S,aAAa,qBA/rBH/S,EAmsBnBsV,mBAAqB,SAAC/U,GACpB,IAAMiN,EAAejN,EAAM+D,OAAOmD,MAElCzH,EAAK4U,YAAY,CACfpH,kBAvsBexN,EA2sBnBuV,qBAAuB,SAAChV,GACtB,IAAMkN,EAAiBlN,EAAM+D,OAAOmD,MAEpCzH,EAAK4U,YAAY,CACfnH,oBA/sBezN,EAmtBnBwV,WAAa,SAACjV,GACZ,IAAMwI,EAAOxI,EAAM+D,OAAOmD,MAE1BzH,EAAK4U,YAAY,CACf7L,UAvtBe/I,EA2tBnByV,iBAAmB,WACjBzV,EAAKU,SAAS,CACZgV,aAAc,CACZ/S,MAAM,MA9tBO3C,EAmuBnB0S,kBAAoB,SAAChH,GACnB1L,EAAKU,SAAS,CACZgV,aAAc,CACZ/S,MAAM,IAEP,WACG+I,GAAgC,oBAAbA,GACrBA,OA1uBa1L,EA+uBnB2V,iBAAmB,WACjB3V,EAAKU,SAAS,CACZkV,aAAc,CACZjT,MAAM,MAlvBO3C,EAuvBnBkT,kBAAoB,SAACxH,GACnB1L,EAAKU,SAAS,CACZkV,aAAc,CACZjT,MAAM,IAEP,WACG+I,GAAgC,oBAAbA,GACrBA,OA9vBa1L,EAmwBnB6V,wBAA0B,WACxB7V,EAAKU,SAAS,CACZoV,oBAAqB,CACnBnT,MAAM,MAtwBO3C,EA2wBnBuT,yBAA2B,SAAC7H,GAC1B1L,EAAKU,SAAS,CACZoV,oBAAqB,CACnBnT,MAAM,IAEP,WACG+I,GAAgC,oBAAbA,GACrBA,OAlxBa1L,EAuxBnB2S,kBAAoB,WAClB3S,EAAKU,SAAS,CACZqV,cAAe,CACbpT,MAAM,MA1xBO3C,EA+xBnBgW,mBAAqB,SAACtK,GACpB1L,EAAKU,SAAS,CACZqV,cAAe,CACbpT,MAAM,IAEP,WACG+I,GAAgC,oBAAbA,GACrBA,OAtyBa1L,EA2yBnBiW,mBAAqB,WACnBjW,EAAKU,SAAS,CACZwV,eAAgB,CACdvT,MAAM,MA9yBO3C,EAmzBnBmW,oBAAsB,SAACzK,GACrB1L,EAAKU,SAAS,CACZwV,eAAgB,CACdvT,MAAM,IAEP,WACG+I,GAAgC,oBAAbA,GACrBA,OA1zBa1L,EA+zBnBoW,oBAAsB,WACpBpW,EAAKU,SAAS,CACZ8S,gBAAiB,CACf7Q,MAAM,MAl0BO3C,EAu0BnB2T,qBAAuB,SAACjI,GACtB1L,EAAKU,SAAS,CACZ8S,gBAAiB,CACf7Q,MAAM,IAEP,WACG+I,GAAgC,oBAAbA,GACrBA,OA90Ba1L,EAm1BnBqW,uBAAyB,WACvBrW,EAAKU,SAAS,CACZkT,mBAAoB,CAClBjR,MAAM,MAt1BO3C,EA21BnB6T,wBAA0B,SAACnI,GACzB1L,EAAKU,SAAS,CACZkT,mBAAoB,CAClBjR,MAAM,IAEP,WACG+I,GAAgC,oBAAbA,GACrBA,OAl2Ba1L,EAu2BnBsW,yBAA2B,WACzBtW,EAAKU,SAAS,CACZqT,qBAAsB,CACpBpR,MAAM,MA12BO3C,EA+2BnBgU,0BAA4B,SAACtI,GAC3B1L,EAAKU,SAAS,CACZqT,qBAAsB,CACpBpR,MAAM,IAEP,WACG+I,GAAgC,oBAAbA,GACrBA,OAt3Ba1L,EA23BnBuW,4BAA8B,WAC5BvW,EAAKU,SAAS,CACZwT,wBAAyB,CACvBvR,MAAM,MA93BO3C,EAm4BnBmU,6BAA+B,SAACzI,GAC9B1L,EAAKU,SAAS,CACZwT,wBAAyB,CACvBvR,MAAM,IAEP,WACG+I,GAAgC,oBAAbA,GACrBA,OA14Ba1L,EA+4BnBwW,0BAA4B,WAC1BxW,EAAKU,SAAS,CACZ2T,sBAAuB,CACrB1R,MAAM,MAl5BO3C,EAu5BnBuU,2BAA6B,SAAC7I,GAC5B1L,EAAKU,SAAS,CACZ2T,sBAAuB,CACrB1R,MAAM,IAEP,WACG+I,GAAgC,oBAAbA,GACrBA,OA95Ba1L,EAm6BnByW,kBAAoB,WAClBzW,EAAKU,SAAS,CACZgW,cAAe,CACb/T,MAAM,MAt6BO3C,EA26BnB2U,mBAAqB,SAACjJ,GACpB1L,EAAKU,SAAS,CACZgW,cAAe,CACb/T,MAAM,IAEP,WACG+I,GAAgC,oBAAbA,GACrBA,OAl7Ba1L,EAu7BnB2W,mBAAqB,SAACpW,GACpB,IAAMyJ,EAASzJ,EAAM+D,OAAOmD,MAE5BzH,EAAKU,SAAS,CAAEsJ,YA17BChK,EA67BnB4W,wBAA0B,SAACrW,GACzB,IAAMqJ,EAAcrJ,EAAM+D,OAAOmD,MAEjCzH,EAAKU,SAAS,CAAEkJ,iBAh8BC5J,EAm8BnBwH,yBAA2B,SAACjH,GAC1B,IAAMiG,EAAejG,EAAM+D,OAAOmD,MAElCzH,EAAKU,SAAS,CAAE8F,kBAt8BCxG,EA48BnB+S,aAAe,SAACb,GACdlS,EAAKU,SAAS,CACZmW,SAAU,CACRC,iBAA8C,EAA5BC,IAAY7E,GAAS8E,KACvC9E,UACAvP,MAAM,MAj9BO3C,EA09BnBiX,cAAgB,WAA0B,IAAzBC,EAAyBC,UAAAtF,OAAA,QAAAuF,IAAAD,UAAA,IAAAA,UAAA,GAChCN,EAAa7W,EAAKiB,MAAlB4V,SAER7W,EAAKU,SAAS,CACZmW,SAAU,CACR3E,QAASgF,EAAe,GAAKL,EAAS3E,QACtCvP,MAAM,MA79BV3C,EAAKiB,MAAQ,CACXuM,aAAcoB,GAAapB,aAC3BC,eAAgBmB,GAAanB,eAC7B1E,KAAM6F,GAAa7F,KAEnBsO,aAAa,EACbjW,wBAAwB,EACxByK,yBAAyB,EACzBxK,YAAY,EAEZC,KAAM,KACN0I,OAAQ,GACRJ,YAAa,GACbpD,aAAc,GAEdkP,aAAc,CACZ/S,MAAM,GAGRiT,aAAc,CACZjT,MAAM,GAGRmT,oBAAqB,CACnBnT,MAAM,GAGRoT,cAAe,CACbpT,MAAM,GAGRuT,eAAgB,CACdvT,MAAM,GAGR6Q,gBAAiB,CACf7Q,MAAM,EAENgE,OAAQ,MAGViN,mBAAoB,CAClBjR,MAAM,EAENgE,OAAQ,MAGVoN,qBAAsB,CACpBpR,MAAM,EAENgE,OAAQ,MAGVuN,wBAAyB,CACvBvR,MAAM,EAENgE,OAAQ,MAGV0N,sBAAuB,CACrB1R,MAAM,EAENgE,OAAQ,MAGV+P,cAAe,CACb/T,MAAM,GAGRkU,SAAU,CACRC,iBAAkB,EAClB5E,QAAS,GACTvP,MAAM,IA3EO3C,wEAq+BV,IAAAsX,EAAArY,KAAAsY,EAcHtY,KAAKgC,MAXPuM,EAHK+J,EAGL/J,aACAC,EAJK8J,EAIL9J,eACA1E,EALKwO,EAKLxO,KACAsO,EANKE,EAMLF,YACAjW,EAPKmW,EAOLnW,uBACAyK,EARK0L,EAQL1L,wBACAxK,EATKkW,EASLlW,WACAC,EAVKiW,EAULjW,KACA0I,EAXKuN,EAWLvN,OACAJ,EAZK2N,EAYL3N,YACApD,EAbK+Q,EAaL/Q,aAbKgR,EA6BHvY,KAAKgC,MAXPyU,EAlBK8B,EAkBL9B,aACAE,EAnBK4B,EAmBL5B,aACAE,EApBK0B,EAoBL1B,oBACAC,EArBKyB,EAqBLzB,cACAG,EAtBKsB,EAsBLtB,eACA1C,EAvBKgE,EAuBLhE,gBACAI,EAxBK4D,EAwBL5D,mBACAG,EAzBKyD,EAyBLzD,qBACAG,EA1BKsD,EA0BLtD,wBACAG,EA3BKmD,EA2BLnD,sBACAqC,EA5BKc,EA4BLd,cAGMG,EAAa5X,KAAKgC,MAAlB4V,SAER,OACE1X,EAAAC,EAAAC,cAACoY,EAAA,EAAD,CAAQC,SAAS,+BACfvY,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CAAkBhY,MAAOA,IACvBR,EAAAC,EAAAC,cAAA,OAAK0C,MAAO,CAAE6V,UAAW,QAAStR,gBAAwC,SAAvB3G,GAAM8R,QAAQ1I,KAAkB,UAAY,aAC3FsO,GACAlY,EAAAC,EAAAC,cAACwY,GAAD,MAGDR,GACClY,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,SAAP,KACE9C,EAAAC,EAAAC,cAACyY,GAAD,CACE3W,KAAMuQ,GAENrQ,WAAYA,EACZD,uBAAwBA,EAExBE,KAAMA,EAENE,cAAevC,KAAKwW,iBACpBhU,cAAexC,KAAK0W,iBAEpB7U,gBAAiB7B,KAAKgX,mBACtBjV,eAAgB/B,KAAKwX,oBAGvBtX,EAAAC,EAAAC,cAAC0Y,EAAA,EAAD,KACE5Y,EAAAC,EAAAC,cAAC0Y,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAO/Y,EAAAC,EAAAC,cAAC8Y,GAAD,CAAa9W,WAAYA,EAAYgC,MAAOqO,QACjFvS,EAAAC,EAAAC,cAAC0Y,EAAA,EAAD,CAAO/T,UAAWW,MAGnBtD,GACClC,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,SAAP,KACE9C,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAK,MACX7F,EAAAC,EAAAC,cAAC+Y,GAAD,CACEzV,KAAMoT,EAAcpT,KAEpBU,MAAOqO,GACPpQ,KAAMA,EACNF,uBAAwBA,EAExByB,QAAS5D,KAAK+W,mBAEdpL,cAAe3L,KAAK+W,mBACpBnL,cAAe,WACbyM,EAAK3L,mBAAmB,WACtB2L,EAAKtB,2BAMb7W,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,KAAM,KAAM,OAC/B7F,EAAAC,EAAAC,cAAC+Y,GAAD,CACEvQ,YAAU,EACVlF,KAAMoT,EAAcpT,KAEpBU,MAAOqO,GACPpQ,KAAMA,EACNF,uBAAwBA,EAExByB,QAAS5D,KAAK+W,mBAEdpL,cAAe3L,KAAK+W,mBACpBnL,cAAe,WACbyM,EAAK3L,mBAAmB,WACtB2L,EAAKtB,2BAMb7W,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAK,MACX7F,EAAAC,EAAAC,cAACgZ,GAAD,CACE1V,KAAMuT,EAAevT,KAErBrB,KAAMA,EACNF,uBAAwBA,EACxByK,wBAAyBA,EACzByB,OAAQA,GACRC,MAAOA,GACPC,aAAcA,EACdC,eAAgBA,EAChB1E,KAAMA,EACN6F,aAAcA,GAEd/L,QAAS5D,KAAKkX,oBACdrK,iBAAkB7M,KAAKmX,oBACvBzM,oBAAqB1K,KAAKoX,uBAC1BtK,sBAAuB9M,KAAKqX,yBAC5BtK,yBAA0B/M,KAAKsX,4BAC/BtK,uBAAwBhN,KAAKuX,0BAC7B5K,0BAA2B3M,KAAK0M,mBAChC+B,qBAAsBzO,KAAKqW,mBAC3B3H,uBAAwB1O,KAAKsW,qBAC7B3H,aAAc3O,KAAKuW,WACnB1G,aAAc7P,KAAKoW,cAIvBlW,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,KAAM,KAAM,OAC/B7F,EAAAC,EAAAC,cAACgZ,GAAD,CACExQ,YAAU,EACVlF,KAAMuT,EAAevT,KAErBrB,KAAMA,EACNF,uBAAwBA,EACxByK,wBAAyBA,EACzByB,OAAQA,GACRC,MAAOA,GACPC,aAAcA,EACdC,eAAgBA,EAChB1E,KAAMA,EACN6F,aAAcA,GAEd/L,QAAS5D,KAAKkX,oBACdrK,iBAAkB7M,KAAKmX,oBACvBzM,oBAAqB1K,KAAKoX,uBAC1BtK,sBAAuB9M,KAAKqX,yBAC5BtK,yBAA0B/M,KAAKsX,4BAC/BtK,uBAAwBhN,KAAKuX,0BAC7B5K,0BAA2B3M,KAAK0M,mBAChC+B,qBAAsBzO,KAAKqW,mBAC3B3H,uBAAwB1O,KAAKsW,qBAC7B3H,aAAc3O,KAAKuW,WACnB1G,aAAc7P,KAAKoW,cAIvBlW,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAK,MACX7F,EAAAC,EAAAC,cAACiZ,GAAD,CACE3V,KAAM6Q,EAAgB7Q,KAEtBU,MAAM,aACN2H,YAAY,iGACZyE,UACEtQ,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,QACbkB,WAAS,EACTjB,SAAUgL,EAAgB7M,SAAU6M,EAAgB7M,OAAOqD,QAC3DvB,WAAS,EACTC,WAAa8K,EAAgB7M,QAAU6M,EAAgB7M,OAAOqD,OAAUwJ,EAAgB7M,OAAOqD,OAAO,GAAK,GAC3GpB,OAAO,SACPC,SAAU5J,KAAK0X,mBACfvN,YAAY,aACZN,UAAQ,EACRC,KAAK,MACLtB,MAAOuC,IAGXmB,OAAO,MACPC,iBAAkBpB,GAAU5I,EAC5BiK,mBAAiB,EAEjBxI,QAAS5D,KAAK0U,qBACd3L,SAAU,WACRsP,EAAK5W,SAAS,CACZsJ,OAAQ,MAIZY,cAAe3L,KAAK0U,qBACpBjJ,UAAWzL,KAAK+S,aAIpB7S,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,KAAM,KAAM,OAC/B7F,EAAAC,EAAAC,cAACiZ,GAAD,CACEzQ,YAAU,EACVlF,KAAM6Q,EAAgB7Q,KAEtBU,MAAM,aACN2H,YAAY,iGACZyE,UACEtQ,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,QACbkB,WAAS,EACTjB,SAAUgL,EAAgB7M,SAAU6M,EAAgB7M,OAAOqD,QAC3DvB,WAAS,EACTC,WAAa8K,EAAgB7M,QAAU6M,EAAgB7M,OAAOqD,OAAUwJ,EAAgB7M,OAAOqD,OAAO,GAAK,GAC3GpB,OAAO,SACPC,SAAU5J,KAAK0X,mBACfvN,YAAY,aACZN,UAAQ,EACRC,KAAK,MACLtB,MAAOuC,IAGXmB,OAAO,MACPC,iBAAkBpB,GAAU5I,EAC5BiK,mBAAiB,EAEjBxI,QAAS5D,KAAK0U,qBACd3L,SAAU,WACRsP,EAAK5W,SAAS,CACZsJ,OAAQ,MAIZY,cAAe3L,KAAK0U,qBACpBjJ,UAAWzL,KAAK+S,aAIpB7S,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAK,MACX7F,EAAAC,EAAAC,cAACiZ,GAAD,CACE3V,KAAMiR,EAAmBjR,KAEzBU,MAAM,gBACN2H,YAAY,iGACZyE,UACEtQ,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,QACbkB,WAAS,EACTjB,SAAUoL,EAAmBjN,SAAUiN,EAAmBjN,OAAOqD,QACjEvB,WAAS,EACTC,WAAakL,EAAmBjN,QAAUiN,EAAmBjN,OAAOqD,OAAU4J,EAAmBjN,OAAOqD,OAAO,GAAK,GACpHpB,OAAO,SACPC,SAAU5J,KAAK0X,mBACfvN,YAAa9H,EAAKe,SAClByG,UAAQ,EACRC,KAAK,MACLtB,MAAOuC,IAGXmB,OAAO,SACPC,iBAAkBpB,GAAU5I,EAC5BiK,mBAAiB,EAEjBxI,QAAS5D,KAAK4U,wBACd7L,SAAU,WACRsP,EAAK5W,SAAS,CACZsJ,OAAQ,MAIZY,cAAe3L,KAAK4U,wBACpBnJ,UAAWzL,KAAKiL,gBAIpB/K,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,KAAM,KAAM,OAC/B7F,EAAAC,EAAAC,cAACiZ,GAAD,CACEzQ,YAAU,EACVlF,KAAMiR,EAAmBjR,KAEzBU,MAAM,gBACN2H,YAAY,iGACZyE,UACEtQ,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,QACbkB,WAAS,EACTjB,SAAUoL,EAAmBjN,SAAUiN,EAAmBjN,OAAOqD,QACjEvB,WAAS,EACTC,WAAakL,EAAmBjN,QAAUiN,EAAmBjN,OAAOqD,OAAU4J,EAAmBjN,OAAOqD,OAAO,GAAK,GACpHpB,OAAO,SACPC,SAAU5J,KAAK0X,mBACfvN,YAAa9H,EAAKe,SAClByG,UAAQ,EACRC,KAAK,MACLtB,MAAOuC,IAGXmB,OAAO,SACPC,iBAAkBpB,GAAU5I,EAC5BiK,mBAAiB,EAEjBxI,QAAS5D,KAAK4U,wBACd7L,SAAU,WACRsP,EAAK5W,SAAS,CACZsJ,OAAQ,MAIZY,cAAe3L,KAAK4U,wBACpBnJ,UAAWzL,KAAKiL,gBAIpB/K,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAK,MACX7F,EAAAC,EAAAC,cAACiZ,GAAD,CACE3V,KAAMoR,EAAqBpR,KAE3BU,MAAM,mBACN2H,YAAY,uGACZyE,UACEtQ,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,OACbkB,WAAS,EACTjB,SAAUuL,EAAqBpN,SAAUoN,EAAqBpN,OAAOiD,aACrEnB,WAAS,EACTC,WAAaqL,EAAqBpN,QAAUoN,EAAqBpN,OAAOiD,YAAemK,EAAqBpN,OAAOiD,YAAY,GAAK,GACpIhB,OAAO,SACPC,SAAU5J,KAAK2X,wBACfxN,YAAY,eACZN,UAAQ,EACRC,KAAK,OACLtB,MAAOmC,IAGXuB,OAAO,MACPC,iBAAkBxB,GAAexI,EACjCiK,mBAAiB,EAEjBxI,QAAS5D,KAAK+U,0BACdhM,SAAU,WACRsP,EAAK5W,SAAS,CACZkJ,YAAa,MAIjBgB,cAAe3L,KAAK+U,0BACpBtJ,UAAWzL,KAAKkT,kBAIpBhT,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,KAAM,KAAM,OAC/B7F,EAAAC,EAAAC,cAACiZ,GAAD,CACEzQ,YAAU,EACVlF,KAAMoR,EAAqBpR,KAE3BU,MAAM,mBACN2H,YAAY,uGACZyE,UACEtQ,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,OACbkB,WAAS,EACTjB,SAAUuL,EAAqBpN,SAAUoN,EAAqBpN,OAAOiD,aACrEnB,WAAS,EACTC,WAAaqL,EAAqBpN,QAAUoN,EAAqBpN,OAAOiD,YAAemK,EAAqBpN,OAAOiD,YAAY,GAAK,GACpIhB,OAAO,SACPC,SAAU5J,KAAK2X,wBACfxN,YAAY,eACZN,UAAQ,EACRC,KAAK,OACLtB,MAAOmC,IAGXuB,OAAO,MACPC,iBAAkBxB,GAAexI,EACjCiK,mBAAiB,EAEjBxI,QAAS5D,KAAK+U,0BACdhM,SAAU,WACRsP,EAAK5W,SAAS,CACZkJ,YAAa,MAIjBgB,cAAe3L,KAAK+U,0BACpBtJ,UAAWzL,KAAKkT,kBAIpBhT,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAK,MACX7F,EAAAC,EAAAC,cAACiZ,GAAD,CACE3V,KAAMuR,EAAwBvR,KAE9BU,MAAM,sBACN2H,YAAY,uGACZyE,UACEtQ,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,OACbkB,WAAS,EACTjB,SAAU0L,EAAwBvN,SAAUuN,EAAwBvN,OAAOiD,aAC3EnB,WAAS,EACTC,WAAawL,EAAwBvN,QAAUuN,EAAwBvN,OAAOiD,YAAesK,EAAwBvN,OAAOiD,YAAY,GAAK,GAC7IhB,OAAO,SACPC,SAAU5J,KAAK2X,wBACfxN,YAAa9H,EAAKsI,YAClBd,UAAQ,EACRC,KAAK,OACLtB,MAAOmC,IAGXuB,OAAO,SACPC,iBAAkBxB,GAAexI,EACjCiK,mBAAiB,EAEjBxI,QAAS5D,KAAKkV,6BACdnM,SAAU,WACRsP,EAAK5W,SAAS,CACZkJ,YAAa,MAIjBgB,cAAe3L,KAAKkV,6BACpBzJ,UAAWzL,KAAKmT,qBAIpBjT,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,KAAM,KAAM,OAC/B7F,EAAAC,EAAAC,cAACiZ,GAAD,CACEzQ,YAAU,EACVlF,KAAMuR,EAAwBvR,KAE9BU,MAAM,sBACN2H,YAAY,uGACZyE,UACEtQ,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,OACbkB,WAAS,EACTjB,SAAU0L,EAAwBvN,SAAUuN,EAAwBvN,OAAOiD,aAC3EnB,WAAS,EACTC,WAAawL,EAAwBvN,QAAUuN,EAAwBvN,OAAOiD,YAAesK,EAAwBvN,OAAOiD,YAAY,GAAK,GAC7IhB,OAAO,SACPC,SAAU5J,KAAK2X,wBACfxN,YAAa9H,EAAKsI,YAClBd,UAAQ,EACRC,KAAK,OACLtB,MAAOmC,IAGXuB,OAAO,SACPC,iBAAkBxB,GAAexI,EACjCiK,mBAAiB,EAEjBxI,QAAS5D,KAAKkV,6BACdnM,SAAU,WACRsP,EAAK5W,SAAS,CACZkJ,YAAa,MAIjBgB,cAAe3L,KAAKkV,6BACpBzJ,UAAWzL,KAAKmT,qBAIpBjT,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAK,MACX7F,EAAAC,EAAAC,cAACiZ,GAAD,CACE3V,KAAM0R,EAAsB1R,KAE5BU,MAAM,qBACN2H,YAAY,4GACZyE,UACEtQ,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,QACbkB,WAAS,EACTjB,SAAU6L,EAAsB1N,SAAU0N,EAAsB1N,OAAOH,cACvEiC,WAAS,EACTC,WAAa2L,EAAsB1N,QAAU0N,EAAsB1N,OAAOH,aAAgB6N,EAAsB1N,OAAOH,aAAa,GAAK,GACzIoC,OAAO,SACPC,SAAU5J,KAAKuI,yBACf4B,YAAY,iBACZN,UAAQ,EACRC,KAAK,QACLtB,MAAOjB,IAGX2E,OAAO,MACPC,iBAAkB5E,GAAgBpF,EAClCiK,mBAAiB,EAEjBxI,QAAS5D,KAAKsV,2BACdvM,SAAU,WACRsP,EAAK5W,SAAS,CACZ8F,aAAc,MAIlBoE,cAAe3L,KAAKsV,2BACpB7J,UAAWzL,KAAKoT,mBAIpBlT,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,KAAM,KAAM,OAC/B7F,EAAAC,EAAAC,cAACiZ,GAAD,CACEzQ,YAAU,EACVlF,KAAM0R,EAAsB1R,KAE5BU,MAAM,qBACN2H,YAAY,4GACZyE,UACEtQ,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEC,aAAa,QACbkB,WAAS,EACTjB,SAAU6L,EAAsB1N,SAAU0N,EAAsB1N,OAAOH,cACvEiC,WAAS,EACTC,WAAa2L,EAAsB1N,QAAU0N,EAAsB1N,OAAOH,aAAgB6N,EAAsB1N,OAAOH,aAAa,GAAK,GACzIoC,OAAO,SACPC,SAAU5J,KAAKuI,yBACf4B,YAAY,iBACZN,UAAQ,EACRC,KAAK,QACLtB,MAAOjB,IAGX2E,OAAO,MACPC,iBAAkB5E,GAAgBpF,EAClCiK,mBAAiB,EAEjBxI,QAAS5D,KAAKsV,2BACdvM,SAAU,WACRsP,EAAK5W,SAAS,CACZ8F,aAAc,MAIlBoE,cAAe3L,KAAKsV,2BACpB7J,UAAWzL,KAAKoT,mBAIpBlT,EAAAC,EAAAC,cAAC+N,GAAD,CACEzK,KAAM+T,EAAc/T,KAEpBU,MAAM,YACN2H,YAAY,wHACZG,OAAO,WACPC,gBAAiBhK,EACjBiK,mBAAiB,EAEjBxI,QAAS5D,KAAK0V,mBACd/J,cAAe3L,KAAK0V,mBACpBjK,UAAWzL,KAAKyV,YAKpBrT,GACAlC,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,SAAP,KACE9C,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAK,MACX7F,EAAAC,EAAAC,cAACkZ,GAAD,CACE5V,KAAM+S,EAAa/S,KAEnBvB,uBAAwBA,EACxB4F,YAAaA,GAAYH,OAEzBA,OAAQ5H,KAAK4H,OAEbhE,QAAS5D,KAAKyT,kBACd5N,oBAAqB7F,KAAKkU,sBAI9BhU,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,KAAM,KAAM,OAC/B7F,EAAAC,EAAAC,cAACkZ,GAAD,CACE1Q,YAAU,EACVlF,KAAM+S,EAAa/S,KAEnBvB,uBAAwBA,EACxB4F,YAAaA,GAAYH,OAEzBA,OAAQ5H,KAAK4H,OAEbhE,QAAS5D,KAAKyT,kBACd5N,oBAAqB7F,KAAKkU,sBAI9BhU,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAK,MACX7F,EAAAC,EAAAC,cAACmZ,GAAD,CACE7V,KAAMiT,EAAajT,KAEnBvB,uBAAwBA,EACxB4F,YAAaA,GAAYiC,OAEzBA,OAAQhK,KAAKgK,OAEbpG,QAAS5D,KAAKiU,kBACdpO,oBAAqB7F,KAAKkU,mBAC1BhK,qBAAsBlK,KAAK4W,2BAI/B1W,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,KAAM,KAAM,OAC/B7F,EAAAC,EAAAC,cAACmZ,GAAD,CACE3Q,YAAU,EACVlF,KAAMiT,EAAajT,KAEnBvB,uBAAwBA,EACxB4F,YAAaA,GAAYiC,OAEzBA,OAAQhK,KAAKgK,OAEbpG,QAAS5D,KAAKiU,kBACdpO,oBAAqB7F,KAAKkU,mBAC1BhK,qBAAsBlK,KAAK4W,2BAI/B1W,EAAAC,EAAAC,cAACoZ,GAAD,CACE9V,KAAMmT,EAAoBnT,KAE1BvB,uBAAwBA,EACxB4F,YAAaA,GAAYsC,cAEzBA,cAAerK,KAAKqK,cAEpBzG,QAAS5D,KAAKsU,4BAKpBpU,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE5B,iBAAkBD,EAASC,iBAC3B5E,QAAS2E,EAAS3E,QAClBvP,KAAMkU,EAASlU,KACfE,QAAS5D,KAAKgY,gEAUV,IAAA0B,EAAA1Z,KAClBA,KAAKsT,YAAa,EAElB,IAAM5S,EAAQwV,KAAKyD,MAAM5D,aAAa6D,QAAQ,UAE1ClZ,GACFV,KAAK2V,YAAYjV,GAGnBV,KAAK6Z,mBAAqB1T,IAASC,OAAO0T,mBAAmB,SAACzX,GACxDqX,EAAKpG,YACPoG,EAAKjY,SAAS,CACZ2W,aAAa,EACbhW,aAAcC,EACdA,0DAONrC,KAAKsT,YAAa,EAElBtT,KAAK6Z,4BAhoDSrZ,aCzSEmD,QACW,cAA7BoW,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASlB,OAAO/Y,EAAAC,EAAAC,cAACga,GAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjH,KAAK,SAAAkH,GACjCA,EAAaC","file":"static/js/main.42532689.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = (theme) => ({\n  circularProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%'\n  }\n});\n\nclass LaunchScreen extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <CircularProgress className={classes.circularProgress} />\n    );\n  }\n}\n\nLaunchScreen.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LaunchScreen);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst styles = (theme) => ({\n  signUpButton: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { name, isPerformingAuthAction, isSignedIn, user } = this.props;\n\n    // Events\n    const { onSignUpClick, onSignInClick } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Typography style={{ flexGrow: 1 }} color=\"inherit\" variant=\"h6\">{name}</Typography>\n\n          {isSignedIn &&\n            <React.Fragment>\n              <IconButton color=\"inherit\" disabled={isPerformingAuthAction} onClick={this.openMenu}>\n                {user.photoURL ? <Avatar alt=\"Avatar\" src={user.photoURL} /> : <PersonIcon />}\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem disabled={isPerformingAuthAction} onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem disabled={isPerformingAuthAction} onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </React.Fragment>\n          }\n\n          {!isSignedIn &&\n            <React.Fragment>\n              <Button className={classes.signUpButton} color=\"secondary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              <Button color=\"secondary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </React.Fragment>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  \n  name: PropTypes.string.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isSignedIn: PropTypes.bool.isRequired,\n\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Bar);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n};\n\nclass EmptyState extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { icon, title, description, button } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon}\n        {title && <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>}\n        {description && <Typography color=\"textSecondary\" variant=\"subtitle1\">{description}</Typography>}\n        {button}\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  button: PropTypes.element\n};\n\nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport CodeIcon from '@material-ui/icons/Code';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: theme.spacing(12)\n  },\n\n  button: {\n    marginTop: theme.spacing(1)\n  },\n\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass HomeContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { isSignedIn, title } = this.props;\n\n    if (isSignedIn) {\n      return (\n        <EmptyState\n          icon={<HomeIcon className={classes.emptyStateIcon} color=\"action\" />}\n          title=\"Home\"\n          description=\"Use React + Material-UI + Firebase as the starting-point for your project\"\n          button={\n            <Fab className={classes.button} color=\"secondary\" component={Link} to=\"/some-magic\" variant=\"extended\">\n              Click For Some Magic\n            </Fab>\n          }\n        />\n      );\n    }\n\n    return (\n      <EmptyState\n        icon={<CodeIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title={title}\n        description=\"The three musketeers, all in one pack in the form of a boilerplate app\"\n        button={\n          <Fab className={classes.button} color=\"secondary\" href=\"https://github.com/Phoqe/react-material-ui-firebase\" rel=\"noopener noreferrer\" target=\"_blank\" variant=\"extended\">\n            <GitHubCircleIcon className={classes.buttonIcon} />\n            GitHub\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nHomeContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  isSignedIn: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(HomeContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport FindIcon from '@material-ui/icons/FindInPage';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: theme.spacing(12)\n  },\n\n  button: {\n    marginTop: theme.spacing(1)\n  },\n\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass NotFoundContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<FindIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Content Not Found\"\n        description=\"The requested URL was not found on this server\"\n        button={\n          <Fab className={classes.button} color=\"secondary\" component={Link} to=\"/\" variant=\"extended\">\n            <HomeIcon className={classes.buttonIcon} /> Go Home\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nNotFoundContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NotFoundContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport firebase from 'firebase/app';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nconst styles = (theme) => ({\n  dialogActions: {\n    justifyContent: 'center',\n\n    marginTop: theme.spacing(2.5),\n    marginBottom: theme.spacing(1)\n  },\n\n  dialogActionsMobile: {\n    display: 'grid',\n    justifyContent: 'stretch',\n\n    marginTop: theme.spacing(2.5),\n    marginBottom: -theme.spacing(0.5)\n  },\n\n  buttonMobile: {\n    marginBottom: theme.spacing(1.5)\n  },\n\n  google: {\n    backgroundColor: '#4285f4',\n    color: '#ffffff'\n  },\n\n  facebook: {\n    backgroundColor: '#3c5a99',\n    color: '#ffffff'\n  },\n\n  twitter: {\n    backgroundColor: '#1da1f2',\n    color: '#ffffff'\n  },\n\n  gitHub: {\n    backgroundColor: '#24292e',\n    color: '#ffffff'\n  },\n\n  icon: {\n    marginRight: theme.spacing(0.5)\n  }\n});\n\nclass AuthProviderList extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    return (\n      <React.Fragment>\n        <Hidden only=\"xs\">\n          <DialogActions className={classes.dialogActions}>\n            <Button className={classes.google} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={classes.facebook} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={classes.twitter} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n\n            <Button className={classes.gitHub} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n          </DialogActions>\n        </Hidden>\n\n        <Hidden only={['sm', 'md', 'lg', 'xl']}>\n          <DialogActions className={classes.dialogActionsMobile}>\n            <Button className={`${classes.google} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={`${classes.facebook} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={`${classes.twitter} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n\n            <Button className={`${classes.gitHub} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n          </DialogActions>\n        </Hidden>\n      </React.Fragment>\n    );\n  }\n}\n\nAuthProviderList.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool,\n\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AuthProviderList);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AuthProviderList from '../layout/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const { emailAddress, password, passwordConfirmation } = this.state;\n    \n    const errors = validate({ emailAddress, password, passwordConfirmation }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signUp(emailAddress, password, passwordConfirmation);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({ passwordConfirmation });\n  };\n\n  handleSignUpClick = () => {\n    this.signUp();\n  };\n\n  render() {\n    // Properties\n    const { fullScreen, open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick } = this.props;\n\n    const { emailAddress, password, passwordConfirmation, errors } = this.state;\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Create an account to access features that are unavailable to users who haven't signed up.\n          </DialogContentText>\n\n          <AuthProviderList isPerformingAuthAction={isPerformingAuthAction} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              label=\"E-mail address\"\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"new-password\"\n              error={!!(errors && errors.password)}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              label=\"Password\"\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              required\n              type=\"password\"\n              value={password}\n            />\n\n            <TextField\n              autoComplete=\"password\"\n              error={!!(errors && errors.passwordConfirmation)}\n              fullWidth\n              helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n              label=\"Password confirmation\"\n              margin=\"normal\"\n              onChange={this.handlePasswordConfirmationChange}\n              required\n              type=\"password\"\n              value={passwordConfirmation}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password || !passwordConfirmation) || isPerformingAuthAction} variant=\"contained\" onClick={this.handleSignUpClick}>Sign Up</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  constraints: PropTypes.object.isRequired,\n\n  signUp: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default SignUpDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AuthProviderList from '../layout/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signIn = () => {\n    const { emailAddress, password } = this.state;\n    \n    const errors = validate({ emailAddress, password }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signIn(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handleSignInClick = () => {\n    this.signIn();\n  };\n\n  render() {\n    // Properties\n    const { fullScreen, open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick, onResetPasswordClick } = this.props;\n\n    const { emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Some features might be unavailable until you sign in.\n            While you're signed in you can manage your account.\n          </DialogContentText>\n\n          <AuthProviderList isPerformingAuthAction={isPerformingAuthAction} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"current-password\"\n              error={!!(errors && errors.password)}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              value={password}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"outlined\" onClick={onResetPasswordClick}>Reset Password</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password) || isPerformingAuthAction} variant=\"contained\" onClick={this.handleSignInClick}>Sign In</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  constraints: PropTypes.object.isRequired,\n\n  signIn: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired,\n  onResetPasswordClick: PropTypes.func.isRequired\n};\n\nexport default SignInDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n\n  errors: null\n};\n\nclass ResetPasswordDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n    \n    const errors = validate({ emailAddress }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.resetPassword(emailAddress);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.resetPassword();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handleResetPasswordClick = () => {\n    this.resetPassword();\n  };\n\n  render() {\n    // Properties\n    const { open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Reset your password\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            An e-mail will be sent to your e-mail address containing instructions on how to reset your password.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={!emailAddress || isPerformingAuthAction} variant=\"contained\" onClick={this.handleResetPasswordClick}>Reset Password</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nResetPasswordDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  constraints: PropTypes.object.isRequired,\n\n  resetPassword: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default ResetPasswordDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fab from '@material-ui/core/Fab';\nimport Typography from '@material-ui/core/Typography';\n\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = (theme) => ({\n  profile: {\n    marginTop: theme.spacing(2),\n    textAlign: 'center'\n  },\n\n  changeAvatarContainer: {\n    position: 'relative',\n    width: '50%',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n\n  avatar: {\n    width: theme.spacing(12),\n    height: theme.spacing(12),\n    marginRight: 'auto',\n    marginLeft: 'auto'\n  },\n\n  changeAvatar: {\n    position: 'absolute',\n    top: '-7.5%',\n    left: '60%',\n  },\n\n  info: {\n    marginTop: theme.spacing(0.5)\n  },\n\n  emailAddress: {\n    marginTop: -theme.spacing(0.5)\n  },\n});\n\nclass Profile extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onChangeAvatarClick } = this.props;\n\n    if (!user.photoURL || !user.displayName || !user.email) {\n      return null;\n    }\n\n    return (\n      <div className={classes.profile}>\n        <div className={classes.changeAvatarContainer}>\n          <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n\n          {onChangeAvatarClick &&\n            <Tooltip title=\"Change avatar\">\n              <Fab className={classes.changeAvatar} color=\"primary\" disabled={isPerformingAuthAction} size=\"small\" onClick={onChangeAvatarClick}>\n                <EditIcon />\n              </Fab>\n            </Tooltip>\n          }\n        </div>\n\n        <div className={classes.info}>\n          <Typography variant=\"h6\">{user.displayName}</Typography>\n          <Typography className={classes.emailAddress} color=\"textSecondary\" variant=\"body1\">{user.email}</Typography>\n        </div>\n      </div>\n    );\n  }\n}\n\nProfile.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool,\n\n  onChangeAvatarClick: PropTypes.func\n};\n\nexport default withStyles(styles)(Profile);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport Profile from '../layout/Profile';\n\nconst styles = (theme) => ({\n  title: {\n    marginTop: theme.spacing(3)\n  },\n\n  contentText: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nclass WelcomeDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { fullScreen, open } = this.props;\n\n    // Custom Properties\n    const { title, user, isPerformingAuthAction } = this.props;\n\n    // Dialog Events\n    const { onClose } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onVerifyClick } = this.props;\n\n    const isUserComplete = (user.photoURL && user.displayName && user.email);\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {isUserComplete &&\n          <DialogContent>\n            <Profile user={user} />\n\n            <Typography className={classes.title} variant=\"h6\">Welcome to {title}!</Typography>\n\n            <DialogContentText className={classes.contentText}>\n              Complete your account by verifying your e-mail address.\n              An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\n            </DialogContentText>\n          </DialogContent>\n        }\n\n        {!isUserComplete &&\n          <React.Fragment>\n            <DialogTitle>\n              Welcome to {title}!\n            </DialogTitle>\n\n            <DialogContent>\n              <DialogContentText>\n                Complete your account by verifying your e-mail address.\n                An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\n              </DialogContentText>\n            </DialogContent>\n          </React.Fragment>\n        }\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onCancelClick}>Cancel</Button>\n          <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onVerifyClick}>Verify</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nWelcomeDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n\n  onCancelClick: PropTypes.func.isRequired,\n  onVerifyClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(WelcomeDialog);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass ConfirmationDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Dialog Properties\n    const { open } = this.props;\n\n    // Custom Properties\n    const {\n      title,\n      contentText,\n      cancelText,\n      okText,\n      disableOkButton,\n      highlightOkButton\n    } = this.props;\n\n    // Dialog Events\n    const { onClose } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onOkClick } = this.props;\n\n    if (!onClose) {\n      return null;\n    }\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" disabled={disableOkButton} variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default ConfirmationDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport PortraitIcon from '@material-ui/icons/Portrait';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport Profile from '../../layout/Profile';\n\nimport ConfirmationDialog from '../../dialogs/ConfirmationDialog';\n\nconst styles = (theme) => ({\n  dialogContentTextComplete: {\n    marginTop: theme.spacing(1)\n  },\n\n  dialogContentTextIncomplete: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    };\n  }\n\n  openVerifyEmailAddressDialog = () => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeVerifyEmailAddressDialog = (callback) => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.closeVerifyEmailAddressDialog(() => {\n      this.props.onVerifyEmailAddressClick();\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user, isPerformingAuthAction, isVerifyingEmailAddress } = this.props;\n\n    // Events\n    const { onAddAvatarClick, onChangeAvatarClick, onAddDisplayNameClick, onChangeDisplayNameClick, onAddEmailAddressClick } = this.props;\n\n    const { verifyEmailAddressDialog } = this.state;\n\n    const isUserComplete = (user.photoURL && user.displayName && user.email);\n\n    return (\n      <React.Fragment>\n        <Profile user={user} isPerformingAuthAction={isPerformingAuthAction} onChangeAvatarClick={onChangeAvatarClick} />\n\n        <DialogContentText className={isUserComplete ? classes.dialogContentTextComplete : classes.dialogContentTextIncomplete}>\n          Here's some info about your account. You can manage your account through the tabs.\n        </DialogContentText>\n\n        <List>\n          {!user.photoURL &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Avatar\">\n                  <PortraitIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have an avatar. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddAvatarClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.displayName &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Display name\">\n                  <PersonIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Display name\" secondary={user.displayName} />\n\n              <ListItemSecondaryAction>\n                <Tooltip title=\"Change\">\n                  <IconButton disabled={isPerformingAuthAction} onClick={onChangeDisplayNameClick}>\n                    <EditIcon />\n                  </IconButton>\n                </Tooltip>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {!user.displayName &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Display name\">\n                  <PersonIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have a display name. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddDisplayNameClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.email &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"E-mail address\">\n                  <EmailIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText\n                primary={user.email}\n                secondary={\n                  <React.Fragment>\n                    {user.emailVerified && 'Verified'}\n                    {(!user.emailVerified && isVerifyingEmailAddress) && 'Awaiting e-mail address verification'}\n                    {(!user.emailVerified && !isVerifyingEmailAddress) && 'Not verified'}\n                  </React.Fragment>\n                }\n              />\n\n              {!user.emailVerified &&\n                <ListItemSecondaryAction>\n                  {isVerifyingEmailAddress && <CircularProgress />}\n                  {!isVerifyingEmailAddress && <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={this.openVerifyEmailAddressDialog}>Verify</Button>}\n                </ListItemSecondaryAction>\n              }\n            </ListItem>\n          }\n\n          {!user.email &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"E-mail address\">\n                  <EmailIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have an e-mail address. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddEmailAddressClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.metadata.lastSignInTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Last sign-in\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Last sign-in\" secondary={moment(user.metadata.lastSignInTime).format('LLLL')} />\n            </ListItem>\n          }\n\n          {user.metadata.creationTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Signed up\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Signed up\" secondary={moment(user.metadata.creationTime).format('LLLL')} />\n            </ListItem>\n          }\n        </List>\n\n        <ConfirmationDialog\n          open={verifyEmailAddressDialog.open}\n\n          title=\"Send verification e-mail?\"\n          contentText=\"An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\"\n          okText=\"Send\"\n          disableOkButton={isPerformingAuthAction}\n          highlightOkButton\n\n          onClose={this.closeVerifyEmailAddressDialog}\n\n          onCancelClick={this.closeVerifyEmailAddressDialog}\n          onOkClick={this.verifyEmailAddress}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nAccountTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n\n  onAddAvatarClick: PropTypes.func.isRequired,\n  onChangeAvatarClick: PropTypes.func.isRequired,\n  onAddDisplayNameClick: PropTypes.func.isRequired,\n  onChangeDisplayNameClick: PropTypes.func.isRequired,\n  onAddEmailAddressClick: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nclass AppearanceTab extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          The app's primary and secondary colors, and their variants, help create a color theme that is harmonious,\n          ensures accessible text, and distinguishes UI elements and surfaces from one another.\n        </DialogContentText>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Primary color</InputLabel>\n\n          <Select onChange={onPrimaryColorChange} value={primaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Secondary color</InputLabel>\n\n          <Select onChange={onSecondaryColorChange} value={secondaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Type</InputLabel>\n\n          <Select onChange={onTypeChange} value={type}>\n            {types.map((type, index) => {\n              return (<MenuItem key={index} value={type}>{type.charAt(0).toUpperCase() + type.slice(1)}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nAppearanceTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AppearanceTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport AccountTab from '../tabs/settings/AccountTab';\nimport AppearanceTab from '../tabs/settings/AppearanceTab';\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedTab: 0\n    };\n  }\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onClose();\n    }\n  };\n\n  changeTab = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  changeIndex = (index) => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  handleResetClick = () => {\n    const { primaryColor, secondaryColor, type, defaultTheme } = this.props;\n\n    if (primaryColor !== defaultTheme.primaryColor || secondaryColor !== defaultTheme.secondaryColor || type !== defaultTheme.type) {\n      setTimeout(this.props.onResetClick, 137.5);\n    }\n  };\n\n  render() {\n    // Properties\n    const {\n      fullScreen,\n      open,\n      user,\n      isPerformingAuthAction,\n      isVerifyingEmailAddress,\n      colors,\n      types,\n      primaryColor,\n      secondaryColor,\n      type,\n      defaultTheme\n    } = this.props;\n\n    // Events\n    const {\n      onClose,\n      onAddAvatarClick,\n      onChangeAvatarClick,\n      onAddDisplayNameClick,\n      onChangeDisplayNameClick,\n      onAddEmailAddressClick,\n      onVerifyEmailAddressClick,\n      onPrimaryColorChange,\n      onSecondaryColorChange,\n      onTypeChange\n    } = this.props;\n\n    const { selectedTab } = this.state;\n\n    let hasDeviatedFromDefaultSettings = false;\n\n    if (defaultTheme) {\n      hasDeviatedFromDefaultSettings = (\n        primaryColor !== defaultTheme.primaryColor ||\n        secondaryColor !== defaultTheme.secondaryColor ||\n        type !== defaultTheme.type\n      );\n    }\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>Settings</DialogTitle>\n\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" onChange={this.changeTab} value={selectedTab} variant=\"fullWidth\">\n          <Tab label=\"Account\" />\n          <Tab label=\"Appearance\" />\n        </Tabs>\n\n        <DialogContent>\n          <Hidden only=\"xs\">\n            {selectedTab === 0 &&\n              <AccountTab\n                user={user}\n                isPerformingAuthAction={isPerformingAuthAction}\n                isVerifyingEmailAddress={isVerifyingEmailAddress}\n                onAddAvatarClick={onAddAvatarClick}\n                onChangeAvatarClick={onChangeAvatarClick}\n                onAddDisplayNameClick={onAddDisplayNameClick}\n                onChangeDisplayNameClick={onChangeDisplayNameClick}\n                onAddEmailAddressClick={onAddEmailAddressClick}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n            }\n\n            {selectedTab === 1 &&\n              <AppearanceTab\n                colors={colors}\n                types={types}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            }\n          </Hidden>\n\n          <Hidden only={['sm', 'md', 'lg', 'xl']}>\n            <SwipeableViews index={selectedTab} onChangeIndex={this.changeIndex}>\n              <AccountTab\n                user={user}\n                isPerformingAuthAction={isPerformingAuthAction}\n                isVerifyingEmailAddress={isVerifyingEmailAddress}\n                onAddAvatarClick={onAddAvatarClick}\n                onChangeAvatarClick={onChangeAvatarClick}\n                onAddDisplayNameClick={onAddDisplayNameClick}\n                onChangeDisplayNameClick={onChangeDisplayNameClick}\n                onAddEmailAddressClick={onAddEmailAddressClick}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n\n              <AppearanceTab\n                colors={colors}\n                types={types}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            </SwipeableViews>\n          </Hidden>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n\n          {(selectedTab === 1 && hasDeviatedFromDefaultSettings) && <Button color=\"primary\" variant=\"outlined\" onClick={this.handleResetClick}>Reset</Button>}\n\n          <Button color=\"primary\" variant=\"contained\" onClick={onClose}>OK</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAddAvatarClick: PropTypes.func.isRequired,\n  onChangeAvatarClick: PropTypes.func.isRequired,\n  onAddDisplayNameClick: PropTypes.func.isRequired,\n  onChangeDisplayNameClick: PropTypes.func.isRequired,\n  onAddEmailAddressClick: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired,\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired,\n  onResetClick: PropTypes.func.isRequired\n};\n\nexport default SettingsDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass InputDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Dialog Properties\n    const { fullScreen, open } = this.props;\n\n    // Custom Properties\n    const { title, contentText, textField, cancelText, okText, disableOkButton, highlightOkButton } = this.props;\n\n    // Dialog Events\n    const { onClose, onExited } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onOkClick } = this.props;\n\n    if (!onClose) {\n      return null;\n    }\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={onExited} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n\n            {textField &&\n              <form>\n                {textField}\n              </form>\n            }\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" disabled={disableOkButton} variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nInputDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  textField: PropTypes.element,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default InputDialog;","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport validate from 'validate.js';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/performance';\n\nimport readingTime from 'reading-time';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport LaunchScreen from './layout/LaunchScreen';\n\nimport Bar from './layout/Bar';\n\nimport HomeContent from './content/HomeContent';\nimport NotFoundContent from './content/NotFoundContent';\n\nimport SignUpDialog from './dialogs/SignUpDialog';\nimport SignInDialog from './dialogs/SignInDialog';\nimport ResetPasswordDialog from './dialogs/ResetPasswordDialog';\nimport WelcomeDialog from './dialogs/WelcomeDialog';\nimport SettingsDialog from './dialogs/SettingsDialog';\nimport InputDialog from './dialogs/InputDialog';\nimport ConfirmationDialog from './dialogs/ConfirmationDialog';\n\n/**\n * Firebase\n */\n\nconst config = {\n  apiKey: 'AIzaSyDYZOrZVpXkPQD6J31mb9t2eIIxmGEJK-Q',\n  authDomain: 'react-material-ui-firebase.firebaseapp.com',\n  databaseURL: 'https://react-material-ui-firebase.firebaseio.com',\n  projectId: 'react-material-ui-firebase',\n  storageBucket: 'react-material-ui-firebase.appspot.com',\n  messagingSenderId: '552659850812',\n  appId: '1:552659850812:web:d685f74f72161d96'\n};\n\nfirebase.initializeApp(config);\n\nconst auth = firebase.auth();\n\n// eslint-disable-next-line no-unused-vars\nconst performance = firebase.performance();\n\n/**\n * Theming\n */\n\nconst colors = [\n  {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n  {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n  {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n  {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n  {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n  {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n  {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n  {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n  {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n  {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n  {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n  {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n  {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n  {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n  {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n  {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n  {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n  {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n  {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n];\n\nconst types = [\n  'light',\n  'dark'\n];\n\nconst defaultTheme = {\n  primaryColor: 'blue',\n  secondaryColor: 'red',\n  type: 'light'\n};\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: red,\n    type: 'light'\n  }\n});\n\n/**\n * Settings\n */\n\nconst settings = {\n  name: 'React + Material-UI + Firebase'\n};\n\nconst constraints = {\n  signUp: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    },\n\n    password: {\n      length: {\n        minimum: 6\n      },\n      presence: {\n        allowEmpty: false\n      }\n    },\n\n    passwordConfirmation: {\n      equality: 'password',\n      length: {\n        minimum: 6\n      },\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  signIn: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    },\n\n    password: {\n      length: {\n        minimum: 6\n      },\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  resetPassword: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  addAvatar: {\n    avatar: {\n      presence: {\n        allowEmpty: false\n      },\n\n      url: {\n        message: \"^Avatar URL is not a valid URL\"\n      }\n    }\n  },\n\n  changeAvatar: {\n    avatar: {\n      presence: {\n        allowEmpty: false\n      },\n\n      url: {\n        message: \"^Avatar URL is not a valid URL\"\n      }\n    }\n  },\n\n  addDisplayName: {\n    displayName: {\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  changeDisplayName: {\n    displayName: {\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  addEmailAddress: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n};\n\nclass App extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: defaultTheme.type,\n\n      isAuthReady: false,\n      isPerformingAuthAction: false,\n      isVerifyingEmailAddress: false,\n      isSignedIn: false,\n\n      user: null,\n      avatar: '',\n      displayName: '',\n      emailAddress: '',\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      resetPasswordDialog: {\n        open: false\n      },\n\n      welcomeDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      addAvatarDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      changeAvatarDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      addDisplayNameDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      changeDisplayNameDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      addEmailAddressDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  /**\n   * Creates a new user account associated with the specified email address and password.\n   * @param emailAddress\n   * @param password\n   * @param passwordConfirmation\n   */\n  signUp = (emailAddress, password, passwordConfirmation) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password || !passwordConfirmation) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress,\n      password,\n      passwordConfirmation\n    }, constraints.signUp);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.openWelcomeDialog();\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/email-already-in-use':\n          case 'auth/invalid-email':\n          case 'auth/operation-not-allowed':\n          case 'auth/weak-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Asynchronously signs in using an email and password.\n   * @param emailAddress\n   * @param password\n   */\n  signIn = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress,\n      password,\n    }, constraints.signIn);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignInDialog(() => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/user-disabled':\n          case 'auth/user-not-found':\n          case 'auth/wrong-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Authenticates a Firebase client using a popup-based OAuth authentication flow.\n   * @param provider\n   */\n  signInWithProvider = (provider) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!provider) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithPopup(provider).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.closeSignInDialog(() => {\n            const user = value.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n          });\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sends a password reset email to the given email address.\n   * @param emailAddress\n   */\n  resetPassword = (emailAddress) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress\n    }, constraints.resetPassword);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.sendPasswordResetEmail(emailAddress).then(() => {\n        this.closeResetPasswordDialog(() => {\n          this.openSnackbar(`Password reset e-mail sent to ${emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n          case 'auth/user-not-found':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sets an avatar.\n   */\n  addAvatar = () => {\n    const { user, isSignedIn, avatar } = this.state;\n\n    if (!user || !isSignedIn || !avatar) {\n      return;\n    }\n\n    if (user.photoURL) {\n      return;\n    }\n\n    const errors = validate({ avatar }, constraints.addAvatar);\n\n    if (errors) {\n      this.setState((state) => ({\n        addAvatarDialog: {\n          ...state.addAvatarDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ photoURL: avatar }).then(() => {\n        this.closeAddAvatarDialog(() => {\n          this.openSnackbar('Avatar added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Changes the current avatar.\n   */\n  changeAvatar = () => {\n    const { user, isSignedIn, avatar } = this.state;\n\n    if (!user || !isSignedIn || !avatar) {\n      return;\n    }\n\n    const errors = validate({ avatar }, constraints.changeAvatar);\n\n    if (errors) {\n      this.setState((state) => ({\n        changeAvatarDialog: {\n          ...state.changeAvatarDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    if (user.photoURL === avatar) {\n      this.openSnackbar('Avatar already being used');\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ photoURL: avatar }).then(() => {\n        this.closeChangeAvatarDialog(() => {\n          this.openSnackbar('Avatar changed');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sets a display name.\n   */\n  addDisplayName = () => {\n    const { user, isSignedIn, displayName } = this.state;\n\n    if (!user || !isSignedIn || !displayName) {\n      return;\n    }\n\n    if (user.displayName) {\n      return;\n    }\n\n    const errors = validate({ displayName }, constraints.addDisplayName);\n\n    if (errors) {\n      this.setState((state) => ({\n        addDisplayNameDialog: {\n          ...state.addDisplayNameDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ displayName }).then(() => {\n        this.closeAddDisplayNameDialog(() => {\n          this.openSnackbar('Display name added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Changes the current display name.\n   */\n  changeDisplayName = () => {\n    const { user, isSignedIn, displayName } = this.state;\n\n    if (!user || !isSignedIn || !displayName) {\n      return;\n    }\n\n    const errors = validate({ displayName }, constraints.changeDisplayName);\n\n    if (errors) {\n      this.setState((state) => ({\n        changeDisplayNameDialog: {\n          ...state.changeDisplayNameDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    if (displayName === user.displayName) {\n      this.openSnackbar(`Display name is already ${displayName}`);\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ displayName }).then(() => {\n        this.closeChangeDisplayNameDialog(() => {\n          this.openSnackbar('Display name changed');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sets an e-mail address.\n   */\n  addEmailAddress = () => {\n    const { user, isSignedIn, emailAddress } = this.state;\n\n    if (!user || !isSignedIn || !emailAddress) {\n      return;\n    }\n\n    if (user.email) {\n      return;\n    }\n\n    const errors = validate({ emailAddress }, constraints.addEmailAddress);\n\n    if (errors) {\n      this.setState((state) => ({\n        addEmailAddressDialog: {\n          ...state.addEmailAddressDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateEmail(emailAddress).then(() => {\n        this.closeAddEmailAddressDialog(() => {\n          this.openSnackbar('E-mail address added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sends a verification email to a user.\n   */\n  verifyEmailAddress = (callback) => {\n    const { user, isSignedIn } = this.state;\n\n    if (!user || !user.email || !isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.sendEmailVerification().then(() => {\n        this.setState({\n          isVerifyingEmailAddress: true\n        }, () => {\n          const emailAddress = user.email;\n\n          this.openSnackbar(`Verification e-mail sent to ${emailAddress}`);\n\n          if (callback && typeof callback === 'function') {\n            callback();\n          }\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Signs out the current user.\n   */\n  signOut = () => {\n    if (!this.state.isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signOut().then(() => {\n        this.closeSignOutDialog(() => {\n          this.openSnackbar('Signed out');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Changes the current theme. Theme is applied in real-time.\n   * @param palette\n   * @param removeLocalStorage\n   * @param callback\n   */\n  updateTheme = (palette, removeLocalStorage, callback) => {\n    const { primaryColor, secondaryColor, type } = this.state;\n\n    if (!palette.primaryColor) {\n      palette.primaryColor = primaryColor;\n    }\n\n    if (!palette.secondaryColor) {\n      palette.secondaryColor = secondaryColor;\n    }\n\n    if (!palette.type) {\n      palette.type = type;\n    }\n\n    theme = createMuiTheme({\n      palette: {\n        primary: colors.find(color => color.id === palette.primaryColor).import,\n        secondary: colors.find(color => color.id === palette.secondaryColor).import,\n        type: palette.type\n      }\n    });\n\n    this.setState({\n      primaryColor: palette.primaryColor,\n      secondaryColor: palette.secondaryColor,\n      type: palette.type\n    }, () => {\n      if (removeLocalStorage) {\n        localStorage.removeItem('theme');\n      } else {\n        localStorage.setItem('theme', JSON.stringify({\n          primaryColor: palette.primaryColor,\n          secondaryColor: palette.secondaryColor,\n          type: palette.type\n        }));\n      }\n\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Resets the current theme to the default one.\n   */\n  resetTheme = () => {\n    this.updateTheme({\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: defaultTheme.type\n    }, true, () => {\n      this.openSnackbar('Settings reset');\n    });\n  };\n\n  changePrimaryColor = (event) => {\n    const primaryColor = event.target.value;\n\n    this.updateTheme({\n      primaryColor\n    });\n  };\n\n  changeSecondaryColor = (event) => {\n    const secondaryColor = event.target.value;\n\n    this.updateTheme({\n      secondaryColor\n    });\n  };\n\n  changeType = (event) => {\n    const type = event.target.value;\n\n    this.updateTheme({\n      type\n    });\n  };\n\n  openSignUpDialog = () => {\n    this.setState({\n      signUpDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignUpDialog = (callback) => {\n    this.setState({\n      signUpDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSignInDialog = () => {\n    this.setState({\n      signInDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignInDialog = (callback) => {\n    this.setState({\n      signInDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openResetPasswordDialog = () => {\n    this.setState({\n      resetPasswordDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeResetPasswordDialog = (callback) => {\n    this.setState({\n      resetPasswordDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openWelcomeDialog = () => {\n    this.setState({\n      welcomeDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeWelcomeDialog = (callback) => {\n    this.setState({\n      welcomeDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSettingsDialog = () => {\n    this.setState({\n      settingsDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSettingsDialog = (callback) => {\n    this.setState({\n      settingsDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddAvatarDialog = () => {\n    this.setState({\n      addAvatarDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddAvatarDialog = (callback) => {\n    this.setState({\n      addAvatarDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openChangeAvatarDialog = () => {\n    this.setState({\n      changeAvatarDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeChangeAvatarDialog = (callback) => {\n    this.setState({\n      changeAvatarDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddDisplayNameDialog = () => {\n    this.setState({\n      addDisplayNameDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddDisplayNameDialog = (callback) => {\n    this.setState({\n      addDisplayNameDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openChangeDisplayNameDialog = () => {\n    this.setState({\n      changeDisplayNameDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeChangeDisplayNameDialog = (callback) => {\n    this.setState({\n      changeDisplayNameDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddEmailAddressDialog = () => {\n    this.setState({\n      addEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddEmailAddressDialog = (callback) => {\n    this.setState({\n      addEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSignOutDialog = () => {\n    this.setState({\n      signOutDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignOutDialog = (callback) => {\n    this.setState({\n      signOutDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  handleAvatarChange = (event) => {\n    const avatar = event.target.value;\n\n    this.setState({ avatar });\n  };\n\n  handleDisplayNameChange = (event) => {\n    const displayName = event.target.value;\n\n    this.setState({ displayName });\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  /**\n   * Opens a snackbar. Snackbars provide brief messages about app processes through a message.\n   */\n  openSnackbar = (message) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * 2,\n        message,\n        open: true\n      }\n    });\n  };\n\n  /**\n   * Sets the `open` state of a snackbar to `false`. A direct response to the snackbar's `onClose` event.\n   * @param clearMessage Whether or not to clear the message of the snackbar.\n   */\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    // Properties\n    const {\n      primaryColor,\n      secondaryColor,\n      type,\n      isAuthReady,\n      isPerformingAuthAction,\n      isVerifyingEmailAddress,\n      isSignedIn,\n      user,\n      avatar,\n      displayName,\n      emailAddress\n    } = this.state;\n\n    // Dialogs\n    const {\n      signUpDialog,\n      signInDialog,\n      resetPasswordDialog,\n      welcomeDialog,\n      settingsDialog,\n      addAvatarDialog,\n      changeAvatarDialog,\n      addDisplayNameDialog,\n      changeDisplayNameDialog,\n      addEmailAddressDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    return (\n      <Router basename=\"/react-material-ui-firebase\">\n        <MuiThemeProvider theme={theme}>\n          <div style={{ minHeight: '100vh', backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa' }}>\n            {!isAuthReady &&\n              <LaunchScreen />\n            }\n\n            {isAuthReady &&\n              <React.Fragment>\n                <Bar\n                  name={settings.name}\n\n                  isSignedIn={isSignedIn}\n                  isPerformingAuthAction={isPerformingAuthAction}\n\n                  user={user}\n\n                  onSignUpClick={this.openSignUpDialog}\n                  onSignInClick={this.openSignInDialog}\n\n                  onSettingsClick={this.openSettingsDialog}\n                  onSignOutClick={this.openSignOutDialog}\n                />\n\n                <Switch>\n                  <Route path=\"/\" exact render={() => (<HomeContent isSignedIn={isSignedIn} title={settings.name} />)} />\n                  <Route component={NotFoundContent} />\n                </Switch>\n\n                {isSignedIn &&\n                  <React.Fragment>\n                    <Hidden only=\"xs\">\n                      <WelcomeDialog\n                        open={welcomeDialog.open}\n\n                        title={settings.name}\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        onClose={this.closeWelcomeDialog}\n\n                        onCancelClick={this.closeWelcomeDialog}\n                        onVerifyClick={() => {\n                          this.verifyEmailAddress(() => {\n                            this.closeWelcomeDialog()\n                          })\n                        }}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <WelcomeDialog\n                        fullScreen\n                        open={welcomeDialog.open}\n\n                        title={settings.name}\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        onClose={this.closeWelcomeDialog}\n\n                        onCancelClick={this.closeWelcomeDialog}\n                        onVerifyClick={() => {\n                          this.verifyEmailAddress(() => {\n                            this.closeWelcomeDialog()\n                          })\n                        }}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <SettingsDialog\n                        open={settingsDialog.open}\n\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        isVerifyingEmailAddress={isVerifyingEmailAddress}\n                        colors={colors}\n                        types={types}\n                        primaryColor={primaryColor}\n                        secondaryColor={secondaryColor}\n                        type={type}\n                        defaultTheme={defaultTheme}\n\n                        onClose={this.closeSettingsDialog}\n                        onAddAvatarClick={this.openAddAvatarDialog}\n                        onChangeAvatarClick={this.openChangeAvatarDialog}\n                        onAddDisplayNameClick={this.openAddDisplayNameDialog}\n                        onChangeDisplayNameClick={this.openChangeDisplayNameDialog}\n                        onAddEmailAddressClick={this.openAddEmailAddressDialog}\n                        onVerifyEmailAddressClick={this.verifyEmailAddress}\n                        onPrimaryColorChange={this.changePrimaryColor}\n                        onSecondaryColorChange={this.changeSecondaryColor}\n                        onTypeChange={this.changeType}\n                        onResetClick={this.resetTheme}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <SettingsDialog\n                        fullScreen\n                        open={settingsDialog.open}\n\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        isVerifyingEmailAddress={isVerifyingEmailAddress}\n                        colors={colors}\n                        types={types}\n                        primaryColor={primaryColor}\n                        secondaryColor={secondaryColor}\n                        type={type}\n                        defaultTheme={defaultTheme}\n\n                        onClose={this.closeSettingsDialog}\n                        onAddAvatarClick={this.openAddAvatarDialog}\n                        onChangeAvatarClick={this.openChangeAvatarDialog}\n                        onAddDisplayNameClick={this.openAddDisplayNameDialog}\n                        onChangeDisplayNameClick={this.openChangeDisplayNameDialog}\n                        onAddEmailAddressClick={this.openAddEmailAddressDialog}\n                        onVerifyEmailAddressClick={this.verifyEmailAddress}\n                        onPrimaryColorChange={this.changePrimaryColor}\n                        onSecondaryColorChange={this.changeSecondaryColor}\n                        onTypeChange={this.changeType}\n                        onResetClick={this.resetTheme}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <InputDialog\n                        open={addAvatarDialog.open}\n\n                        title=\"Add avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(addAvatarDialog.errors && addAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(addAvatarDialog.errors && addAvatarDialog.errors.avatar) ? addAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder=\"Avatar URL\"\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddAvatarDialog}\n                        onOkClick={this.addAvatar}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <InputDialog\n                        fullScreen\n                        open={addAvatarDialog.open}\n\n                        title=\"Add avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(addAvatarDialog.errors && addAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(addAvatarDialog.errors && addAvatarDialog.errors.avatar) ? addAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder=\"Avatar URL\"\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddAvatarDialog}\n                        onOkClick={this.addAvatar}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <InputDialog\n                        open={changeAvatarDialog.open}\n\n                        title=\"Change avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar) ? changeAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder={user.photoURL}\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeAvatarDialog}\n                        onOkClick={this.changeAvatar}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <InputDialog\n                        fullScreen\n                        open={changeAvatarDialog.open}\n\n                        title=\"Change avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar) ? changeAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder={user.photoURL}\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeAvatarDialog}\n                        onOkClick={this.changeAvatar}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <InputDialog\n                        open={addDisplayNameDialog.open}\n\n                        title=\"Add display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName) ? addDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder=\"Display name\"\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddDisplayNameDialog}\n                        onOkClick={this.addDisplayName}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <InputDialog\n                        fullScreen\n                        open={addDisplayNameDialog.open}\n\n                        title=\"Add display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName) ? addDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder=\"Display name\"\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddDisplayNameDialog}\n                        onOkClick={this.addDisplayName}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <InputDialog\n                        open={changeDisplayNameDialog.open}\n\n                        title=\"Change display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName) ? changeDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder={user.displayName}\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeDisplayNameDialog}\n                        onOkClick={this.changeDisplayName}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <InputDialog\n                        fullScreen\n                        open={changeDisplayNameDialog.open}\n\n                        title=\"Change display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName) ? changeDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder={user.displayName}\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeDisplayNameDialog}\n                        onOkClick={this.changeDisplayName}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <InputDialog\n                        open={addEmailAddressDialog.open}\n\n                        title=\"Add e-mail address\"\n                        contentText=\"Your e-mail address is used to identify you. It's not visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"email\"\n                            autoFocus\n                            error={!!(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress)}\n                            fullWidth\n                            helperText={(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress) ? addEmailAddressDialog.errors.emailAddress[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleEmailAddressChange}\n                            placeholder=\"E-mail address\"\n                            required\n                            type=\"email\"\n                            value={emailAddress}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!emailAddress || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddEmailAddressDialog}\n                        onExited={() => {\n                          this.setState({\n                            emailAddress: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddEmailAddressDialog}\n                        onOkClick={this.addEmailAddress}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <InputDialog\n                        fullScreen\n                        open={addEmailAddressDialog.open}\n\n                        title=\"Add e-mail address\"\n                        contentText=\"Your e-mail address is used to identify you. It's not visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"email\"\n                            autoFocus\n                            error={!!(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress)}\n                            fullWidth\n                            helperText={(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress) ? addEmailAddressDialog.errors.emailAddress[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleEmailAddressChange}\n                            placeholder=\"E-mail address\"\n                            required\n                            type=\"email\"\n                            value={emailAddress}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!emailAddress || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddEmailAddressDialog}\n                        onExited={() => {\n                          this.setState({\n                            emailAddress: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddEmailAddressDialog}\n                        onOkClick={this.addEmailAddress}\n                      />\n                    </Hidden>\n\n                    <ConfirmationDialog\n                      open={signOutDialog.open}\n\n                      title=\"Sign out?\"\n                      contentText=\"While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\"\n                      okText=\"Sign Out\"\n                      disableOkButton={isPerformingAuthAction}\n                      highlightOkButton\n\n                      onClose={this.closeSignOutDialog}\n                      onCancelClick={this.closeSignOutDialog}\n                      onOkClick={this.signOut}\n                    />\n                  </React.Fragment>\n                }\n\n                {!isSignedIn &&\n                  <React.Fragment>\n                    <Hidden only=\"xs\">\n                      <SignUpDialog\n                        open={signUpDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={constraints.signUp}\n\n                        signUp={this.signUp}\n\n                        onClose={this.closeSignUpDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <SignUpDialog\n                        fullScreen\n                        open={signUpDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={constraints.signUp}\n\n                        signUp={this.signUp}\n\n                        onClose={this.closeSignUpDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <SignInDialog\n                        open={signInDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={constraints.signIn}\n\n                        signIn={this.signIn}\n\n                        onClose={this.closeSignInDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                        onResetPasswordClick={this.openResetPasswordDialog}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <SignInDialog\n                        fullScreen\n                        open={signInDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={constraints.signIn}\n\n                        signIn={this.signIn}\n\n                        onClose={this.closeSignInDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                        onResetPasswordClick={this.openResetPasswordDialog}\n                      />\n                    </Hidden>\n\n                    <ResetPasswordDialog\n                      open={resetPasswordDialog.open}\n\n                      isPerformingAuthAction={isPerformingAuthAction}\n                      constraints={constraints.resetPassword}\n\n                      resetPassword={this.resetPassword}\n\n                      onClose={this.closeResetPasswordDialog}\n                    />\n                  </React.Fragment>\n                }\n\n                <Snackbar\n                  autoHideDuration={snackbar.autoHideDuration}\n                  message={snackbar.message}\n                  open={snackbar.open}\n                  onClose={this.closeSnackbar}\n                />\n              </React.Fragment>\n            }\n          </div>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    const theme = JSON.parse(localStorage.getItem('theme'));\n\n    if (theme) {\n      this.updateTheme(theme);\n    }\n\n    this.removeAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      if (this._isMounted) {\n        this.setState({\n          isAuthReady: true,\n          isSignedIn: !!user,\n          user\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n\n    this.removeAuthObserver();\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}