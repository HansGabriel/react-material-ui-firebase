{"version":3,"sources":["layout/Bar.js","layout/EmptyState.js","content/HomeContent.js","dialogs/SignUpDialog.js","dialogs/SignInDialog.js","dialogs/ResetPasswordDialog.js","dialogs/ConfirmationDialog.js","tabs/settings/AccountTab.js","tabs/settings/AppearanceTab.js","dialogs/SettingsDialog.js","dialogs/SignOutDialog.js","App.js","serviceWorker.js","index.js"],"names":["Bar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","_this$props","classes","title","isSignedIn","isSigningUp","isSigningIn","_this$props2","onSignUpClick","onSignInClick","react_default","a","createElement","AppBar_default","color","position","Toolbar_default","variant","Typography_default","style","flexGrow","Fragment","IconButton_default","onClick","Person_default","Menu_default","open","Boolean","onClose","MenuItem_default","Button_default","className","signUpButton","disabled","Component","withStyles","theme","marginRight","spacing","unit","EmptyState","icon","text","center","top","left","transform","textAlign","HomeContent","layout_EmptyState","Home_default","emptyStateIcon","fontSize","concat","initialState","emailAddress","password","passwordConfirmation","errors","SignUpDialog","signUp","_this$state","validate","email","presence","allowEmpty","length","minimum","equality","handleExited","handleKeyPress","key","altKey","ctrlKey","metaKey","shiftKey","handleEmailAddressChange","target","value","handlePasswordChange","handlePasswordConfirmationChange","handleSignUpClick","_this$state2","Dialog_default","onExited","onKeyPress","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","autoComplete","autoFocus","error","fullWidth","helperText","label","margin","onChange","required","type","DialogActions_default","SignInDialog","signIn","handleSignInClick","onResetPasswordClick","placeholder","ResetPasswordDialog","resetPassword","preventDefault","handleResetPasswordClick","isResettingPassword","ConfirmationDialog","onOkClick","contentText","cancelText","okText","highlightOkButton","onCancelClick","AccountTab","openVerifyEmailAddressDialog","verifyEmailAddressDialog","closeVerifyEmailAddressDialog","callback","verifyEmailAddress","onVerifyEmailAddressClick","user","isVerifyingEmailAddress","dialogContentText","List_default","ListItem_default","ListItemIcon_default","Tooltip_default","Email_default","ListItemText_default","primary","secondary","emailVerified","ListItemSecondaryAction_default","AccessTime_default","moment","metadata","lastSignInTime","format","creationTime","dialogs_ConfirmationDialog","marginTop","AppearanceTab","colors","types","primaryColor","secondaryColor","onPrimaryColorChange","onSecondaryColorChange","onTypeChange","FormControl_default","InputLabel_default","Select_default","map","id","name","index","charAt","toUpperCase","slice","SettingsDialog","changeTab","selectedTab","onResetClick","DynamicTab","Tab","Tabs_default","settings_AccountTab","settings_AppearanceTab","setTimeout","SignOutDialog","signOut","isSigningOut","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","import","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","defaultTheme","createMuiTheme","palette","typography","useNextVariants","settings","App","updateTheme","removeLocalStorage","find","localStorage","removeItem","setItem","JSON","stringify","resetTheme","changePrimaryColor","changeSecondaryColor","changeType","showSignUpDialog","signUpDialog","closeSignUpDialog","showSignInDialog","signInDialog","closeSignInDialog","showResetPasswordDialog","resetPasswordDialog","closeResetPasswordDialog","showSettingsDialog","settingsDialog","closeSettingsDialog","showSignOutDialog","signOutDialog","closeSignOutDialog","openSnackbar","message","snackbar","autoHideDuration","readingTime","time","closeSnackbar","clearMessage","arguments","undefined","auth","createUserWithEmailAndPassword","then","userCredential","catch","signInWithEmailAndPassword","displayName","sendPasswordResetEmail","sendEmailVerification","isAuthReady","_this$state3","_this$state4","react_router_dom","styles","minHeight","backgroundColor","layout_Bar","react_router","path","exact","component","PersonOutline_default","dialogs_SignUpDialog","dialogs_SignInDialog","dialogs_ResetPasswordDialog","dialogs_SettingsDialog","dialogs_SignOutDialog","Snackbar_default","_this2","parse","getItem","removeAuthObserver","onAuthStateChanged","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca250cdf.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst styles = (theme) => ({\n  signUpButton: {\n    marginRight: theme.spacing.unit\n  }\n});\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Properties\n    const { classes, title, isSignedIn, isSigningUp, isSigningIn } = this.props;\n\n    // Events\n    const { onSignUpClick, onSignInClick } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Typography style={{ flexGrow: 1 }} color=\"inherit\" variant=\"h6\">{title}</Typography>\n\n          {isSignedIn &&\n            <React.Fragment>\n              <IconButton color=\"inherit\" onClick={this.openMenu}>\n                <PersonIcon />\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </React.Fragment>\n          }\n\n          {!isSignedIn &&\n            <React.Fragment>\n              <Button className={classes.signUpButton} color=\"secondary\" disabled={isSigningUp} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              <Button color=\"secondary\" disabled={isSigningIn} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </React.Fragment>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  isSignedIn: PropTypes.bool.isRequired,\n  isSigningUp: PropTypes.bool.isRequired,\n  isSigningIn: PropTypes.bool.isRequired,\n\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Bar);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n};\n\nclass EmptyState extends Component {\n  render() {\n    const { classes, icon, text } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon}\n        <Typography color=\"textSecondary\" variant=\"h4\">{text}</Typography>\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  classes: PropTypes.object.isRequired,\n  icon: PropTypes.element.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  }\n});\n\nclass HomeContent extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<HomeIcon className={classes.emptyStateIcon} color=\"action\" />}\n        text=\"Home\"\n      />\n    );\n  }\n}\n\nHomeContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(HomeContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      },\n      \n      password: {\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      },\n\n      passwordConfirmation: {\n        equality: 'password',\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress, password, passwordConfirmation } = this.state;\n    \n    const errors = validate({ emailAddress, password, passwordConfirmation }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signUp(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({ passwordConfirmation });\n  };\n\n  handleSignUpClick = () => {\n    this.signUp();\n  };\n\n  render() {\n    // Properties\n    const { open, isSigningUp } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, password, passwordConfirmation, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Create an account to access features that are unavailable to users who haven't signed up.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              label=\"E-mail address\"\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"new-password\"\n              error={(errors && errors.password) ? true : false}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              label=\"Password\"\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              required\n              type=\"password\"\n              value={password}\n            />\n\n            <TextField\n              autoComplete=\"password\"\n              error={(errors && errors.passwordConfirmation) ? true : false}\n              fullWidth\n              helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n              label=\"Password confirmation\"\n              margin=\"normal\"\n              onChange={this.handlePasswordConfirmationChange}\n              required\n              type=\"password\"\n              value={passwordConfirmation}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password || !passwordConfirmation) || isSigningUp} variant=\"contained\" onClick={this.handleSignUpClick}>Sign Up</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isSigningUp: PropTypes.bool.isRequired,\n\n  signUp: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default SignUpDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signIn = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      },\n      \n      password: {\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress, password } = this.state;\n    \n    const errors = validate({ emailAddress, password }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signIn(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handleSignInClick = () => {\n    this.signIn();\n  };\n\n  render() {\n    // Properties\n    const { open, isSigningIn } = this.props;\n\n    // Events\n    const { onClose, onResetPasswordClick } = this.props;\n\n    const { emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Some features might be unavailable until you sign in.\n            While you're signed in you can manage your account.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"current-password\"\n              error={(errors && errors.password) ? true : false}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              value={password}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={onResetPasswordClick}>Reset Password</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password) || isSigningIn} variant=\"contained\" onClick={this.handleSignInClick}>Sign In</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isSigningIn: PropTypes.bool.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onResetPasswordClick: PropTypes.func.isRequired\n};\n\nexport default SignInDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n\n  errors: null\n};\n\nclass ResetPasswordDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress } = this.state;\n    \n    const errors = validate({ emailAddress }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.resetPassword(emailAddress);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.resetPassword();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handleResetPasswordClick = () => {\n    this.resetPassword();\n  };\n\n  render() {\n    // Properties\n    const { open, isResettingPassword } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Reset your password\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            An e-mail will be sent to your e-mail address containing instructions on how to reset your password.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={!emailAddress || isResettingPassword} variant=\"contained\" onClick={this.handleResetPasswordClick}>Reset Password</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nResetPasswordDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isResettingPassword: PropTypes.bool.isRequired,\n\n  resetPassword: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default ResetPasswordDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\n/**\n * Confirmation dialogs give users the ability to provide final confirmation of a choice\n * before committing to it, so they have a chance to change their minds if necessary.\n * If the user confirms a choice, it’s carried out. Otherwise, the user can dismiss the\n * dialog. For example, users can listen to multiple ringtones but only make a final\n * selection upon touching “OK.”\n */\nclass ConfirmationDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    /**\n     * Properties\n     */\n\n    // Dialog\n    const { open } = this.props;\n\n    // Custom\n    const { title, contentText, cancelText, okText, highlightOkButton } = this.props;\n\n    /**\n     * Events\n     */\n\n    // Dialog\n    const { onClose } = this.props;\n\n    // Custom\n    const { onCancelClick, onOkClick } = this.props;\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string.isRequired,\n  contentText: PropTypes.string.isRequired,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default ConfirmationDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\n\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport ConfirmationDialog from '../../dialogs/ConfirmationDialog';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    };\n  }\n\n  openVerifyEmailAddressDialog = () => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeVerifyEmailAddressDialog = (callback) => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.closeVerifyEmailAddressDialog(() => {\n      this.props.onVerifyEmailAddressClick();\n    });\n  };\n\n  render() {\n    const { classes, user, isVerifyingEmailAddress } = this.props;\n    const { verifyEmailAddressDialog } = this.state;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          This is a summary of your account.\n          You can manage your account throughout all the settings.\n        </DialogContentText>\n\n        <List>\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"E-mail address\">\n                <EmailIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary={user.email} secondary={user.emailVerified ? 'Verified' : 'Not verified'} />\n\n            {!user.emailVerified &&\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isVerifyingEmailAddress} variant=\"contained\" onClick={this.openVerifyEmailAddressDialog}>Verify</Button>\n              </ListItemSecondaryAction>\n            }\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"Signed in\">\n                <AccessTimeIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary=\"Signed in\" secondary={moment(user.metadata.lastSignInTime).format('LLLL')} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"Signed up\">\n                <AccessTimeIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary=\"Signed up\" secondary={moment(user.metadata.creationTime).format('LLLL')} />\n          </ListItem>\n        </List>\n\n        <ConfirmationDialog\n          open={verifyEmailAddressDialog.open}\n\n          title=\"Verify e-mail address?\"\n          contentText=\"An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\"\n          okText=\"Verify\"\n          highlightOkButton\n\n          onClose={this.closeVerifyEmailAddressDialog}\n\n          onCancelClick={this.closeVerifyEmailAddressDialog}\n          onOkClick={this.verifyEmailAddress}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nAccountTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n\n  onVerifyEmailAddressClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AppearanceTab extends Component {\n  render() {\n    // Properties\n    const { classes, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          Customize the look and feel to your own liking.\n          You can reset all changes you've made by clicking Reset.\n        </DialogContentText>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Primary color</InputLabel>\n\n          <Select onChange={onPrimaryColorChange} value={primaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Secondary color</InputLabel>\n\n          <Select onChange={onSecondaryColorChange} value={secondaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Type</InputLabel>\n\n          <Select onChange={onTypeChange} value={type}>\n            {types.map((type, index) => {\n              return (<MenuItem key={index} value={type}>{type.charAt(0).toUpperCase() + type.slice(1)}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nAppearanceTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AppearanceTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\n\nimport AccountTab from '../tabs/settings/AccountTab';\nimport AppearanceTab from '../tabs/settings/AppearanceTab';\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedTab: 0\n    };\n  }\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onClose();\n    }\n  };\n\n  changeTab = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  render() {\n    // Properties\n    const { open, user, isVerifyingEmailAddress, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onClose, onVerifyEmailAddressClick, onPrimaryColorChange, onSecondaryColorChange, onTypeChange, onResetClick } = this.props;\n\n    const { selectedTab } = this.state;\n\n    const DynamicTab = withStyles({\n      label: {\n        color: type === 'light' ? '#000000' : '#ffffff'\n      }\n    })(Tab);\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>Settings</DialogTitle>\n\n        <Tabs onChange={this.changeTab} value={selectedTab} variant=\"fullWidth\">\n          <DynamicTab label=\"Account\" />\n          <DynamicTab label=\"Appearance\" />\n        </Tabs>\n\n        <DialogContent>\n          {selectedTab === 0 &&\n            <AccountTab user={user} isVerifyingEmailAddress={isVerifyingEmailAddress} onVerifyEmailAddressClick={onVerifyEmailAddressClick} />\n          }\n\n          {selectedTab === 1 &&\n            <AppearanceTab\n              colors={colors}\n              types={types}\n              primaryColor={primaryColor}\n              secondaryColor={secondaryColor}\n              type={type}\n              onPrimaryColorChange={onPrimaryColorChange}\n              onSecondaryColorChange={onSecondaryColorChange}\n              onTypeChange={onTypeChange}\n            />\n          }\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={() => { setTimeout(onResetClick, 137.5) }}>Reset</Button>\n          <Button color=\"primary\" variant=\"contained\" onClick={onClose}>OK</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired,\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired,\n  onResetClick: PropTypes.func.isRequired\n};\n\nexport default SettingsDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass SignOutDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.signOut();\n    }\n  };\n\n  render() {\n    // Properties\n    const { open, isSigningOut } = this.props;\n\n    // Methods\n    const { signOut } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign out?\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={isSigningOut} variant=\"contained\" onClick={signOut}>Sign Out</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignOutDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isSigningOut: PropTypes.bool.isRequired,\n\n  signOut: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default SignOutDialog;","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport readingTime from 'reading-time';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nimport { createMuiTheme, withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\n\nimport Bar from './layout/Bar';\nimport EmptyState from './layout/EmptyState';\n\nimport HomeContent from './content/HomeContent';\n\nimport SignUpDialog from './dialogs/SignUpDialog';\nimport SignInDialog from './dialogs/SignInDialog';\nimport ResetPasswordDialog from './dialogs/ResetPasswordDialog';\nimport SettingsDialog from './dialogs/SettingsDialog';\nimport SignOutDialog from './dialogs/SignOutDialog';\n\nconst config = {\n  apiKey: 'AIzaSyDYZOrZVpXkPQD6J31mb9t2eIIxmGEJK-Q',\n  authDomain: 'react-material-ui-firebase.firebaseapp.com',\n  databaseURL: 'https://react-material-ui-firebase.firebaseio.com',\n  projectId: 'react-material-ui-firebase',\n  storageBucket: 'react-material-ui-firebase.appspot.com',\n  messagingSenderId: '552659850812'\n};\n\nfirebase.initializeApp(config);\n\nconst colors = [\n  {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n  {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n  {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n  {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n  {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n  {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n  {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n  {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n  {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n  {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n  {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n  {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n  {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n  {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n  {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n  {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n  {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n  {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n  {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n];\n\nconst types = [\n  'light',\n  'dark'\n];\n\nconst defaultTheme = {\n  primaryColor: 'blue-gray',\n  secondaryColor: 'red'\n};\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: blueGray,\n    secondary: red,\n    type: 'light'\n  },\n\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst styles = theme => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  }\n});\n\nconst settings = {\n  title: 'React + Material-UI + Firebase'\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: 'light',\n\n      isAuthReady: false,\n\n      isSigningUp: false,\n      isSigningIn: false,\n      isResettingPassword: false,\n      isSignedIn: false,\n      isVerifyingEmailAddress: false,\n      isSigningOut: false,\n\n      user: null,\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      resetPasswordDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  updateTheme = (palette, removeLocalStorage) => {\n    const { primaryColor, secondaryColor, type } = this.state;\n\n    if (!palette.primaryColor) {\n      palette.primaryColor = primaryColor;\n    }\n\n    if (!palette.secondaryColor) {\n      palette.secondaryColor = secondaryColor;\n    }\n\n    if (!palette.type) {\n      palette.type = type;\n    }\n\n    theme = createMuiTheme({\n      palette: {\n        primary: colors.find(color => color.id === palette.primaryColor).import,\n        secondary: colors.find(color => color.id === palette.secondaryColor).import,\n        type: palette.type\n      },\n\n      typography: {\n        useNextVariants: true\n      }\n    });\n\n    this.setState({\n      primaryColor: palette.primaryColor,\n      secondaryColor: palette.secondaryColor,\n      type: palette.type\n    }, () => {\n      if (removeLocalStorage) {\n        localStorage.removeItem('theme');\n      } else {\n        localStorage.setItem('theme', JSON.stringify({\n          primaryColor: palette.primaryColor,\n          secondaryColor: palette.secondaryColor,\n          type: palette.type\n        }));\n      }\n    });\n  };\n\n  resetTheme = () => {\n    this.updateTheme({\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: 'light'\n    }, true);\n  };\n\n  changePrimaryColor = (event) => {\n    const primaryColor = event.target.value;\n\n    this.updateTheme({\n      primaryColor\n    });\n  };\n\n  changeSecondaryColor = (event) => {\n    const secondaryColor = event.target.value;\n\n    this.updateTheme({\n      secondaryColor\n    });\n  };\n\n  changeType = (event) => {\n    const type = event.target.value;\n\n    this.updateTheme({\n      type\n    });\n  };\n\n  showSignUpDialog = () => {\n    this.setState({\n      signUpDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignUpDialog = (callback) => {\n    this.setState({\n      signUpDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignInDialog = () => {\n    this.setState({\n      signInDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignInDialog = (callback) => {\n    this.setState({\n      signInDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showResetPasswordDialog = () => {\n    this.setState({\n      resetPasswordDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeResetPasswordDialog = (callback) => {\n    this.setState({\n      resetPasswordDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSettingsDialog = () => {\n    this.setState({\n      settingsDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSettingsDialog = (callback) => {\n    this.setState({\n      settingsDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignOutDialog = () => {\n    this.setState({\n      signOutDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignOutDialog = (callback) => {\n    this.setState({\n      signOutDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Opens a snackbar. Snackbars provide brief messages about app processes through a message.\n   */\n  openSnackbar = (message) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * 2,\n        message,\n        open: true\n      }\n    });\n  };\n\n  /**\n   * Sets the `open` state of a snackbar to `false`. A direct response to the snackbar's `onClose` event.\n   * @param clearMessage Whether or not to clear the message of the snackbar.\n   */\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  signUp = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t sign up');\n      \n      return;\n    }\n\n    this.setState({\n      isSigningUp: true\n    }, () => {\n      firebase.auth().createUserWithEmailAndPassword(emailAddress, password).then((userCredential) => {\n        this.setState({\n          isSigningUp: false\n        }, () => {\n          this.closeSignUpDialog(() => {\n            const user = userCredential.user;\n            const emailAddress = user.email;\n\n            this.openSnackbar('Signed up as ' + emailAddress);\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningUp: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  signIn = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t sign in again');\n      \n      return;\n    }\n\n    this.setState({\n      isSigningIn: true\n    }, () => {\n      firebase.auth().signInWithEmailAndPassword(emailAddress, password).then((userCredential) => {\n        this.setState({\n          isSigningIn: false\n        }, () => {\n          this.closeSignInDialog(() => {\n            const user = userCredential.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.openSnackbar('Signed in as ' + (displayName || emailAddress));\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningIn: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  resetPassword = (emailAddress) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t reset their password');\n\n      return;\n    }\n\n    this.setState({\n      isResettingPassword: true\n    }, () => {\n      firebase.auth().sendPasswordResetEmail(emailAddress).then(() => {\n        this.setState({\n          isResettingPassword: false\n        }, () => {\n          this.closeResetPasswordDialog(() => {\n            this.openSnackbar('Password reset email sent');\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isResettingPassword: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  verifyEmailAddress = () => {\n    const { isSignedIn, isVerifyingEmailAddress, user } = this.state;\n\n    if (!isSignedIn || isVerifyingEmailAddress || !user) {\n      return;\n    }\n\n    user.sendEmailVerification().then(() => {\n      this.setState({\n        isVerifyingEmailAddress: true\n      }, () => {\n        this.openSnackbar('Password reset e-mail sent');\n      });\n    }).catch((error) => {\n      this.openSnackbar(error.message);\n    });\n  };\n\n  signOut = () => {\n    if (!this.state.isSignedIn) {\n      this.openSnackbar('Not signed in');\n\n      return;\n    }\n\n    this.setState({\n      isSigningOut: true\n    }, () => {\n      firebase.auth().signOut().then(() => {\n        this.setState({\n          isSigningOut: false\n        }, () => {\n          this.closeSignOutDialog(() => {\n            this.openSnackbar('Signed out');\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningOut: false\n        }, () => {\n          this.closeSignOutDialog(() => {\n            this.openSnackbar(error.message);\n          });\n        });\n      });\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    // Properties\n    const { primaryColor, secondaryColor, type, isAuthReady, isSigningUp, isSigningIn, isResettingPassword, isSignedIn, isVerifyingEmailAddress, isSigningOut, user } = this.state;\n\n    // Dialogs\n    const { signUpDialog, signInDialog, resetPasswordDialog, settingsDialog, signOutDialog } = this.state;\n\n    const { snackbar } = this.state;\n\n    if (!isAuthReady) {\n      return null;\n    }\n\n    return (\n      <Router>\n        <MuiThemeProvider theme={theme}>\n          <div style={{ minHeight: '100vh', backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa' }}>\n            <Bar\n              title={settings.title}\n\n              isSignedIn={isSignedIn}\n              isSigningUp={isSigningUp}\n              isSigningIn={isSigningIn}\n\n              onSignUpClick={this.showSignUpDialog}\n              onSignInClick={this.showSignInDialog}\n\n              onSettingsClick={this.showSettingsDialog}\n              onSignOutClick={this.showSignOutDialog}\n            />\n\n            {isSignedIn &&\n              <Route path=\"/\" exact component={HomeContent} />\n            }\n\n            {!isSignedIn &&\n              <EmptyState\n                icon={<PersonOutlineIcon className={classes.emptyStateIcon} color=\"action\" />}\n                text=\"You are not signed in.\"\n              />\n            }\n\n            {!isSignedIn &&\n              <SignUpDialog\n                open={signUpDialog.open}\n                isSigningUp={isSigningUp}\n                signUp={this.signUp}\n                onClose={this.closeSignUpDialog}\n              />\n            }\n\n            {!isSignedIn &&\n              <SignInDialog\n                open={signInDialog.open}\n                isSigningIn={isSigningIn}\n                signIn={this.signIn}\n                onClose={this.closeSignInDialog}\n                onResetPasswordClick={this.showResetPasswordDialog}\n              />\n            }\n\n            {!isSignedIn &&\n              <ResetPasswordDialog\n                open={resetPasswordDialog.open}\n                isResettingPassword={isResettingPassword}\n                resetPassword={this.resetPassword}\n                onClose={this.closeResetPasswordDialog}\n              />\n            }\n\n            {isSignedIn &&\n              <SettingsDialog\n                open={settingsDialog.open}\n                user={user}\n                isVerifyingEmailAddress={isVerifyingEmailAddress}\n                colors={colors}\n                types={types}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n\n                onClose={this.closeSettingsDialog}\n                onVerifyEmailAddressClick={this.verifyEmailAddress}\n                onPrimaryColorChange={this.changePrimaryColor}\n                onSecondaryColorChange={this.changeSecondaryColor}\n                onTypeChange={this.changeType}\n                onResetClick={this.resetTheme}\n              />\n            }\n\n            {isSignedIn &&\n              <SignOutDialog\n                open={signOutDialog.open}\n                isSigningOut={isSigningOut}\n                signOut={this.signOut}\n                onClose={this.closeSignOutDialog}\n              />\n            }\n\n            <Snackbar\n              autoHideDuration={snackbar.autoHideDuration}\n              message={snackbar.message}\n              open={snackbar.open}\n              onClose={this.closeSnackbar}\n            />\n          </div>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    const theme = JSON.parse(localStorage.getItem('theme'));\n\n    if (theme) {\n      this.updateTheme(theme);\n    }\n\n    this.removeAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      this.setState({\n        isAuthReady: true,\n        isSignedIn: !!user,\n        user\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeAuthObserver();\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}