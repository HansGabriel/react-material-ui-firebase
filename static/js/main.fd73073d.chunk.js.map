{"version":3,"sources":["layout/LaunchScreen.js","layout/Bar.js","layout/EmptyState.js","content/HomeContent.js","content/NotFoundContent.js","layout/AuthProviderList.js","dialogs/SignUpDialog.js","dialogs/SignInDialog.js","dialogs/ResetPasswordDialog.js","layout/Profile.js","dialogs/WelcomeDialog.js","dialogs/ConfirmationDialog.js","tabs/settings/AccountTab.js","tabs/settings/AppearanceTab.js","dialogs/SettingsDialog.js","dialogs/InputDialog.js","App.js","serviceWorker.js","index.js"],"names":["LaunchScreen","classes","this","props","react_default","a","createElement","CircularProgress_default","className","circularProgress","Component","withStyles","theme","position","top","left","Bar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","_this$props","name","isPerformingAuthAction","isSignedIn","user","_this$props2","onSignUpClick","onSignInClick","AppBar_default","color","Toolbar_default","variant","Typography_default","style","flexGrow","Fragment","IconButton_default","disabled","onClick","photoURL","Avatar_default","alt","src","Person_default","Menu_default","open","Boolean","onClose","MenuItem_default","Button_default","signUpButton","marginRight","concat","spacing","unit","EmptyState","icon","title","description","button","center","transform","textAlign","HomeContent","layout_EmptyState","Home_default","emptyStateIcon","Fab_default","component","Link","to","Code_default","href","rel","target","GithubCircle_default","buttonIcon","fontSize","marginTop","NotFoundContent","FindInPage_default","AuthProviderList","onAuthProviderClick","Hidden_default","only","DialogActions_default","dialogActions","facebook","firebase","auth","FacebookAuthProvider","FacebookBox_default","google","GoogleAuthProvider","Google_default","gitHub","GithubAuthProvider","twitter","TwitterAuthProvider","Twitter_default","dialogActionsMobile","buttonMobile","justifyContent","marginBottom","display","backgroundColor","initialState","emailAddress","password","passwordConfirmation","errors","SignUpDialog","signUp","_this$state","validate","constraints","handleExited","handleKeyPress","key","altKey","ctrlKey","metaKey","shiftKey","handleEmailAddressChange","value","handlePasswordChange","handlePasswordConfirmationChange","handleSignUpClick","fullScreen","_this$state2","Dialog_default","onExited","onKeyPress","DialogTitle_default","DialogContent_default","DialogContentText_default","layout_AuthProviderList","TextField_default","autoComplete","error","fullWidth","helperText","label","margin","onChange","required","type","SignInDialog","signIn","handleSignInClick","onResetPasswordClick","placeholder","ResetPasswordDialog","resetPassword","preventDefault","handleResetPasswordClick","autoFocus","Profile","extraTopMargin","onChangeAvatarClick","displayName","email","profileExtraTopMargin","profile","changeAvatarContainer","avatar","Tooltip_default","changeAvatar","size","Edit_default","info","width","marginLeft","height","WelcomeDialog","onOkClick","_this$props3","onCancelClick","onVerifyClick","isUserComplete","layout_Profile","contentText","ConfirmationDialog","cancelText","okText","disableOkButton","highlightOkButton","AccountTab","openVerifyEmailAddressDialog","verifyEmailAddressDialog","closeVerifyEmailAddressDialog","callback","verifyEmailAddress","onVerifyEmailAddressClick","isVerifyingEmailAddress","onAddAvatarClick","onAddDisplayNameClick","onChangeDisplayNameClick","onAddEmailAddressClick","dialogContentTextComplete","dialogContentTextIncomplete","List_default","disablePadding","ListItem_default","ListItemIcon_default","Portrait_default","ListItemText_default","primary","ListItemSecondaryAction_default","secondary","Email_default","emailVerified","metadata","lastSignInTime","AccessTime_default","moment","format","creationTime","dialogs_ConfirmationDialog","AppearanceTab","colors","types","primaryColor","secondaryColor","onPrimaryColorChange","onSecondaryColorChange","onTypeChange","dialogContentText","FormControl_default","InputLabel_default","Select_default","map","id","index","charAt","toUpperCase","slice","SettingsDialog","changeTab","selectedTab","changeIndex","handleResetClick","defaultTheme","setTimeout","onResetClick","hasDeviatedFromDefaultSettings","Tabs_default","indicatorColor","textColor","Tab_default","settings_AccountTab","settings_AppearanceTab","lib_default","onChangeIndex","InputDialog","textField","_this$props4","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","performance","import","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","createMuiTheme","palette","typography","useNextVariants","settings","presence","allowEmpty","length","minimum","equality","addAvatar","url","message","addDisplayName","changeDisplayName","addEmailAddress","App","_isMounted","createUserWithEmailAndPassword","then","closeSignUpDialog","openWelcomeDialog","catch","reason","code","openSnackbar","finally","signInWithEmailAndPassword","closeSignInDialog","signInWithProvider","provider","signInWithPopup","sendPasswordResetEmail","closeResetPasswordDialog","addAvatarDialog","objectSpread","updateProfile","closeAddAvatarDialog","changeAvatarDialog","closeChangeAvatarDialog","_this$state3","addDisplayNameDialog","closeAddDisplayNameDialog","_this$state4","changeDisplayNameDialog","closeChangeDisplayNameDialog","_this$state5","addEmailAddressDialog","updateEmail","closeAddEmailAddressDialog","_this$state6","sendEmailVerification","signOut","closeSignOutDialog","updateTheme","removeLocalStorage","_this$state7","find","localStorage","removeItem","setItem","JSON","stringify","resetTheme","changePrimaryColor","changeSecondaryColor","changeType","openSignUpDialog","signUpDialog","openSignInDialog","signInDialog","openResetPasswordDialog","resetPasswordDialog","welcomeDialog","closeWelcomeDialog","openSettingsDialog","settingsDialog","closeSettingsDialog","openAddAvatarDialog","openChangeAvatarDialog","openAddDisplayNameDialog","openChangeDisplayNameDialog","openAddEmailAddressDialog","openSignOutDialog","signOutDialog","handleAvatarChange","handleDisplayNameChange","snackbar","autoHideDuration","readingTime","time","closeSnackbar","clearMessage","arguments","undefined","isAuthReady","_this2","_this$state8","_this$state9","react_router_dom","basename","styles","minHeight","layout_LaunchScreen","layout_Bar","react_router","path","exact","render","content_HomeContent","dialogs_WelcomeDialog","dialogs_SettingsDialog","dialogs_InputDialog","dialogs_SignUpDialog","dialogs_SignInDialog","dialogs_ResetPasswordDialog","Snackbar_default","_this3","parse","getItem","removeAuthObserver","onAuthStateChanged","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd73073d.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = (theme) => ({\n  circularProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%'\n  }\n});\n\nclass LaunchScreen extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <CircularProgress className={classes.circularProgress} />\n    );\n  }\n}\n\nLaunchScreen.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LaunchScreen);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst styles = (theme) => ({\n  signUpButton: {\n    marginRight: `${theme.spacing.unit}px`\n  }\n});\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { name, isPerformingAuthAction, isSignedIn, user } = this.props;\n\n    // Events\n    const { onSignUpClick, onSignInClick } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Typography style={{ flexGrow: 1 }} color=\"inherit\" variant=\"h6\">{name}</Typography>\n\n          {isSignedIn &&\n            <React.Fragment>\n              <IconButton color=\"inherit\" disabled={isPerformingAuthAction} onClick={this.openMenu}>\n                {user.photoURL ? <Avatar alt=\"Avatar\" src={user.photoURL} /> : <PersonIcon />}\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem disabled={isPerformingAuthAction} onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem disabled={isPerformingAuthAction} onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </React.Fragment>\n          }\n\n          {!isSignedIn &&\n            <React.Fragment>\n              <Button className={classes.signUpButton} color=\"secondary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              <Button color=\"secondary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </React.Fragment>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  \n  name: PropTypes.string.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isSignedIn: PropTypes.bool.isRequired,\n\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Bar);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n};\n\nclass EmptyState extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { icon, title, description, button } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon}\n        {title && <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>}\n        {description && <Typography color=\"textSecondary\" variant=\"subtitle1\">{description}</Typography>}\n        {button}\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  button: PropTypes.element\n};\n\nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport CodeIcon from '@material-ui/icons/Code';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  },\n\n  buttonIcon: {\n    marginRight: `${theme.spacing.unit}px`\n  }\n});\n\nclass HomeContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { isSignedIn, title } = this.props;\n\n    if (isSignedIn) {\n      return (\n        <EmptyState\n          icon={<HomeIcon className={classes.emptyStateIcon} color=\"action\" />}\n          title=\"Home\"\n          description=\"Use React + Material-UI + Firebase as the starting-point for your project\"\n          button={\n            <Fab className={classes.button} color=\"secondary\" component={Link} to=\"/some-magic\" variant=\"extended\">\n              Click For Some Magic\n            </Fab>\n          }\n        />\n      );\n    }\n\n    return (\n      <EmptyState\n        icon={<CodeIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title={title}\n        description=\"The three musketeers, all in one pack in the form of a boilerplate app\"\n        button={\n          <Fab className={classes.button} color=\"secondary\" href=\"https://github.com/Phoqe/react-material-ui-firebase\" rel=\"noopener noreferrer\" target=\"_blank\" variant=\"extended\">\n            <GitHubCircleIcon className={classes.buttonIcon} />\n            GitHub\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nHomeContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  isSignedIn: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(HomeContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport FindIcon from '@material-ui/icons/FindInPage';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  },\n\n  buttonIcon: {\n    marginRight: `${theme.spacing.unit}px`\n  }\n});\n\nclass NotFoundContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<FindIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Content Not Found\"\n        description=\"The requested URL was not found on this server\"\n        button={\n          <Fab className={classes.button} color=\"secondary\" component={Link} to=\"/\" variant=\"extended\">\n            <HomeIcon className={classes.buttonIcon} /> Go Home\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nNotFoundContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NotFoundContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport firebase from 'firebase/app';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\n\nconst styles = (theme) => ({\n  dialogActions: {\n    justifyContent: 'center',\n\n    marginTop: `${theme.spacing.unit * 2.5}px`,\n    marginBottom: `${theme.spacing.unit}px`\n  },\n\n  dialogActionsMobile: {\n    display: 'grid',\n    justifyContent: 'stretch',\n\n    marginTop: `${theme.spacing.unit * 2.5}px`,\n    marginBottom: `-${theme.spacing.unit / 2}px`\n  },\n\n  buttonMobile: {\n    marginBottom: `${theme.spacing.unit * 1.5}px`\n  },\n\n  facebook: {\n    backgroundColor: '#3c5a99',\n    color: '#ffffff'\n  },\n\n  google: {\n    backgroundColor: '#4285f4',\n    color: '#ffffff'\n  },\n\n  gitHub: {\n    backgroundColor: '#24292e',\n    color: '#ffffff'\n  },\n\n  twitter: {\n    backgroundColor: '#1da1f2',\n    color: '#ffffff'\n  },\n\n  icon: {\n    marginRight: `${theme.spacing.unit / 2}px`\n  }\n});\n\nclass AuthProviderList extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    return (\n      <React.Fragment>\n        <Hidden only=\"xs\">\n          <DialogActions className={classes.dialogActions}>\n            <Button className={classes.facebook} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={classes.google} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={classes.gitHub} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n\n            <Button className={classes.twitter} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n          </DialogActions>\n        </Hidden>\n\n        <Hidden only={['sm', 'md', 'lg', 'xl']}>\n          <DialogActions className={classes.dialogActionsMobile}>\n            <Button className={`${classes.facebook} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={`${classes.google} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={`${classes.gitHub} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n\n            <Button className={`${classes.twitter} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n          </DialogActions>\n        </Hidden>\n      </React.Fragment>\n    );\n  }\n}\n\nAuthProviderList.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool,\n\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AuthProviderList);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AuthProviderList from '../layout/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const { emailAddress, password, passwordConfirmation } = this.state;\n    \n    const errors = validate({ emailAddress, password, passwordConfirmation }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signUp(emailAddress, password, passwordConfirmation);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({ passwordConfirmation });\n  };\n\n  handleSignUpClick = () => {\n    this.signUp();\n  };\n\n  render() {\n    // Properties\n    const { fullScreen, open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick } = this.props;\n\n    const { emailAddress, password, passwordConfirmation, errors } = this.state;\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Create an account to access features that are unavailable to users who haven't signed up.\n          </DialogContentText>\n\n          <AuthProviderList isPerformingAuthAction={isPerformingAuthAction} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              label=\"E-mail address\"\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"new-password\"\n              error={!!(errors && errors.password)}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              label=\"Password\"\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              required\n              type=\"password\"\n              value={password}\n            />\n\n            <TextField\n              autoComplete=\"password\"\n              error={!!(errors && errors.passwordConfirmation)}\n              fullWidth\n              helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n              label=\"Password confirmation\"\n              margin=\"normal\"\n              onChange={this.handlePasswordConfirmationChange}\n              required\n              type=\"password\"\n              value={passwordConfirmation}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password || !passwordConfirmation) || isPerformingAuthAction} variant=\"contained\" onClick={this.handleSignUpClick}>Sign Up</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  constraints: PropTypes.object.isRequired,\n\n  signUp: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default SignUpDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AuthProviderList from '../layout/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signIn = () => {\n    const { emailAddress, password } = this.state;\n    \n    const errors = validate({ emailAddress, password }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signIn(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handleSignInClick = () => {\n    this.signIn();\n  };\n\n  render() {\n    // Properties\n    const { fullScreen, open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick, onResetPasswordClick } = this.props;\n\n    const { emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Some features might be unavailable until you sign in.\n            While you're signed in you can manage your account.\n          </DialogContentText>\n\n          <AuthProviderList isPerformingAuthAction={isPerformingAuthAction} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"current-password\"\n              error={!!(errors && errors.password)}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              value={password}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"outlined\" onClick={onResetPasswordClick}>Reset Password</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password) || isPerformingAuthAction} variant=\"contained\" onClick={this.handleSignInClick}>Sign In</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  constraints: PropTypes.object.isRequired,\n\n  signIn: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired,\n  onResetPasswordClick: PropTypes.func.isRequired\n};\n\nexport default SignInDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n\n  errors: null\n};\n\nclass ResetPasswordDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n    \n    const errors = validate({ emailAddress }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.resetPassword(emailAddress);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.resetPassword();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handleResetPasswordClick = () => {\n    this.resetPassword();\n  };\n\n  render() {\n    // Properties\n    const { open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Reset your password\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            An e-mail will be sent to your e-mail address containing instructions on how to reset your password.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={!emailAddress || isPerformingAuthAction} variant=\"contained\" onClick={this.handleResetPasswordClick}>Reset Password</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nResetPasswordDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  constraints: PropTypes.object.isRequired,\n\n  resetPassword: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default ResetPasswordDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fab from '@material-ui/core/Fab';\nimport Typography from '@material-ui/core/Typography';\n\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = (theme) => ({\n  profile: {\n    marginTop: `${theme.spacing.unit * 2}px`,\n    textAlign: 'center'\n  },\n\n  profileExtraTopMargin: {\n    marginTop: `${theme.spacing.unit * 3}px`,\n    textAlign: 'center'\n  },\n\n  changeAvatarContainer: {\n    position: 'relative',\n    width: '50%',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n\n  avatar: {\n    width: `${theme.spacing.unit * 12}px`,\n    height: `${theme.spacing.unit * 12}px`,\n    marginRight: 'auto',\n    marginLeft: 'auto'\n  },\n\n  changeAvatar: {\n    position: 'absolute',\n    top: '-7.5%',\n    left: '60%',\n  },\n\n  info: {\n    marginTop: `${theme.spacing.unit * 0.5}px`\n  },\n\n  emailAddress: {\n    marginTop: `-${theme.spacing.unit * 0.5}px`\n  },\n});\n\nclass Profile extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user, isPerformingAuthAction, extraTopMargin } = this.props;\n\n    // Events\n    const { onChangeAvatarClick } = this.props;\n\n    if (!user.photoURL || !user.displayName || !user.email) {\n      return null;\n    }\n\n    return (\n      <div className={extraTopMargin ? classes.profileExtraTopMargin : classes.profile}>\n        <div className={classes.changeAvatarContainer}>\n          <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n\n          {onChangeAvatarClick &&\n            <Tooltip title=\"Change avatar\">\n              <Fab className={classes.changeAvatar} color=\"primary\" disabled={isPerformingAuthAction} size=\"small\" onClick={onChangeAvatarClick}>\n                <EditIcon />\n              </Fab>\n            </Tooltip>\n          }\n        </div>\n\n        <div className={classes.info}>\n          <Typography variant=\"h6\">{user.displayName}</Typography>\n          <Typography className={classes.emailAddress} color=\"textSecondary\" variant=\"body1\">{user.email}</Typography>\n        </div>\n      </div>\n    );\n  }\n}\n\nProfile.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool,\n  extraTopMargin: PropTypes.bool,\n\n  onChangeAvatarClick: PropTypes.func\n};\n\nexport default withStyles(styles)(Profile);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport Profile from '../layout/Profile';\n\nconst styles = (theme) => ({\n  title: {\n    marginTop: `${theme.spacing.unit * 3}px`\n  },\n\n  contentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass WelcomeDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { fullScreen, open } = this.props;\n\n    // Custom Properties\n    const { title, user, isPerformingAuthAction } = this.props;\n\n    // Dialog Events\n    const { onClose } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onVerifyClick } = this.props;\n\n    const isUserComplete = (user.photoURL && user.displayName && user.email);\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {isUserComplete &&\n          <DialogContent>\n            <Profile user={user} />\n\n            <Typography className={classes.title} variant=\"h6\">Welcome to {title}!</Typography>\n\n            <DialogContentText className={classes.contentText}>\n              Complete your account by verifying your e-mail address.\n              An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\n            </DialogContentText>\n          </DialogContent>\n        }\n\n        {!isUserComplete &&\n          <React.Fragment>\n            <DialogTitle>\n              Welcome to {title}!\n            </DialogTitle>\n\n            <DialogContent>\n              <DialogContentText>\n                Complete your account by verifying your e-mail address.\n                An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\n              </DialogContentText>\n            </DialogContent>\n          </React.Fragment>\n        }\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onCancelClick}>Cancel</Button>\n          <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onVerifyClick}>Verify</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nWelcomeDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n\n  onCancelClick: PropTypes.func.isRequired,\n  onVerifyClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(WelcomeDialog);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass ConfirmationDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Dialog Properties\n    const { open } = this.props;\n\n    // Custom Properties\n    const {\n      title,\n      contentText,\n      cancelText,\n      okText,\n      disableOkButton,\n      highlightOkButton\n    } = this.props;\n\n    // Dialog Events\n    const { onClose } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onOkClick } = this.props;\n\n    if (!onClose) {\n      return null;\n    }\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" disabled={disableOkButton} variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default ConfirmationDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport PortraitIcon from '@material-ui/icons/Portrait';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport Profile from '../../layout/Profile';\n\nimport ConfirmationDialog from '../../dialogs/ConfirmationDialog';\n\nconst styles = (theme) => ({\n  dialogContentTextComplete: {\n    marginTop: `${theme.spacing.unit}px`,\n    marginBottom: `${theme.spacing.unit}px`\n  },\n\n  dialogContentTextIncomplete: {\n    marginTop: `${theme.spacing.unit * 3}px`,\n    marginBottom: `${theme.spacing.unit}px`\n  }\n});\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    };\n  }\n\n  openVerifyEmailAddressDialog = () => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeVerifyEmailAddressDialog = (callback) => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.closeVerifyEmailAddressDialog(() => {\n      this.props.onVerifyEmailAddressClick();\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user, isPerformingAuthAction, isVerifyingEmailAddress } = this.props;\n\n    // Events\n    const { onAddAvatarClick, onChangeAvatarClick, onAddDisplayNameClick, onChangeDisplayNameClick, onAddEmailAddressClick } = this.props;\n\n    const { verifyEmailAddressDialog } = this.state;\n\n    const isUserComplete = (user.photoURL && user.displayName && user.email);\n\n    return (\n      <React.Fragment>\n        <Profile user={user} isPerformingAuthAction={isPerformingAuthAction} extraTopMargin onChangeAvatarClick={onChangeAvatarClick} />\n\n        <DialogContentText className={isUserComplete ? classes.dialogContentTextComplete : classes.dialogContentTextIncomplete}>\n          Here's some info about your account. You can manage your account through the tabs.\n        </DialogContentText>\n\n        <List disablePadding>\n          {!user.photoURL &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Avatar\">\n                  <PortraitIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have an avatar. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddAvatarClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.displayName &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Display name\">\n                  <PersonIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Display name\" secondary={user.displayName} />\n\n              <ListItemSecondaryAction>\n                <Tooltip title=\"Change\">\n                  <IconButton disabled={isPerformingAuthAction} onClick={onChangeDisplayNameClick}>\n                    <EditIcon />\n                  </IconButton>\n                </Tooltip>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {!user.displayName &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Display name\">\n                  <PersonIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have a display name. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddDisplayNameClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.email &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"E-mail address\">\n                  <EmailIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText\n                primary={user.email}\n                secondary={\n                  <React.Fragment>\n                    {user.emailVerified && 'Verified'}\n                    {(!user.emailVerified && isVerifyingEmailAddress) && 'Awaiting e-mail address verification'}\n                    {(!user.emailVerified && !isVerifyingEmailAddress) && 'Not verified'}\n                  </React.Fragment>\n                }\n              />\n\n              {!user.emailVerified &&\n                <ListItemSecondaryAction>\n                  {isVerifyingEmailAddress && <CircularProgress />}\n                  {!isVerifyingEmailAddress && <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={this.openVerifyEmailAddressDialog}>Verify</Button>}\n                </ListItemSecondaryAction>\n              }\n            </ListItem>\n          }\n\n          {!user.email &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"E-mail address\">\n                  <EmailIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have an e-mail address. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddEmailAddressClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.metadata.lastSignInTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Last sign-in\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Last sign-in\" secondary={moment(user.metadata.lastSignInTime).format('LLLL')} />\n            </ListItem>\n          }\n\n          {user.metadata.creationTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Signed up\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Signed up\" secondary={moment(user.metadata.creationTime).format('LLLL')} />\n            </ListItem>\n          }\n        </List>\n\n        <ConfirmationDialog\n          open={verifyEmailAddressDialog.open}\n\n          title=\"Send verification e-mail?\"\n          contentText=\"An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\"\n          okText=\"Send\"\n          disableOkButton={isPerformingAuthAction}\n          highlightOkButton\n\n          onClose={this.closeVerifyEmailAddressDialog}\n\n          onCancelClick={this.closeVerifyEmailAddressDialog}\n          onOkClick={this.verifyEmailAddress}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nAccountTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n\n  onAddAvatarClick: PropTypes.func.isRequired,\n  onChangeAvatarClick: PropTypes.func.isRequired,\n  onAddDisplayNameClick: PropTypes.func.isRequired,\n  onChangeDisplayNameClick: PropTypes.func.isRequired,\n  onAddEmailAddressClick: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 3}px`\n  }\n});\n\nclass AppearanceTab extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          The app's primary and secondary colors, and their variants, help create a color theme that is harmonious,\n          ensures accessible text, and distinguishes UI elements and surfaces from one another.\n        </DialogContentText>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Primary color</InputLabel>\n\n          <Select onChange={onPrimaryColorChange} value={primaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Secondary color</InputLabel>\n\n          <Select onChange={onSecondaryColorChange} value={secondaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Type</InputLabel>\n\n          <Select onChange={onTypeChange} value={type}>\n            {types.map((type, index) => {\n              return (<MenuItem key={index} value={type}>{type.charAt(0).toUpperCase() + type.slice(1)}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nAppearanceTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AppearanceTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport AccountTab from '../tabs/settings/AccountTab';\nimport AppearanceTab from '../tabs/settings/AppearanceTab';\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedTab: 0\n    };\n  }\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onClose();\n    }\n  };\n\n  changeTab = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  changeIndex = (index) => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  handleResetClick = () => {\n    const { primaryColor, secondaryColor, type, defaultTheme } = this.props;\n\n    if (primaryColor !== defaultTheme.primaryColor || secondaryColor !== defaultTheme.secondaryColor || type !== defaultTheme.type) {\n      setTimeout(this.props.onResetClick, 137.5);\n    }\n  };\n\n  render() {\n    // Properties\n    const {\n      fullScreen,\n      open,\n      user,\n      isPerformingAuthAction,\n      isVerifyingEmailAddress,\n      colors,\n      types,\n      primaryColor,\n      secondaryColor,\n      type,\n      defaultTheme\n    } = this.props;\n\n    // Events\n    const {\n      onClose,\n      onAddAvatarClick,\n      onChangeAvatarClick,\n      onAddDisplayNameClick,\n      onChangeDisplayNameClick,\n      onAddEmailAddressClick,\n      onVerifyEmailAddressClick,\n      onPrimaryColorChange,\n      onSecondaryColorChange,\n      onTypeChange\n    } = this.props;\n\n    const { selectedTab } = this.state;\n\n    let hasDeviatedFromDefaultSettings = false;\n\n    if (defaultTheme) {\n      hasDeviatedFromDefaultSettings = (\n        primaryColor !== defaultTheme.primaryColor ||\n        secondaryColor !== defaultTheme.secondaryColor ||\n        type !== defaultTheme.type\n      );\n    }\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>Settings</DialogTitle>\n\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" onChange={this.changeTab} value={selectedTab} variant=\"fullWidth\">\n          <Tab label=\"Account\" />\n          <Tab label=\"Appearance\" />\n        </Tabs>\n\n        <DialogContent>\n          <Hidden only=\"xs\">\n            {selectedTab === 0 &&\n              <AccountTab\n                user={user}\n                isPerformingAuthAction={isPerformingAuthAction}\n                isVerifyingEmailAddress={isVerifyingEmailAddress}\n                onAddAvatarClick={onAddAvatarClick}\n                onChangeAvatarClick={onChangeAvatarClick}\n                onAddDisplayNameClick={onAddDisplayNameClick}\n                onChangeDisplayNameClick={onChangeDisplayNameClick}\n                onAddEmailAddressClick={onAddEmailAddressClick}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n            }\n\n            {selectedTab === 1 &&\n              <AppearanceTab\n                colors={colors}\n                types={types}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            }\n          </Hidden>\n\n          <Hidden only={['sm', 'md', 'lg', 'xl']}>\n            <SwipeableViews index={selectedTab} onChangeIndex={this.changeIndex}>\n              <AccountTab\n                user={user}\n                isPerformingAuthAction={isPerformingAuthAction}\n                isVerifyingEmailAddress={isVerifyingEmailAddress}\n                onAddAvatarClick={onAddAvatarClick}\n                onChangeAvatarClick={onChangeAvatarClick}\n                onAddDisplayNameClick={onAddDisplayNameClick}\n                onChangeDisplayNameClick={onChangeDisplayNameClick}\n                onAddEmailAddressClick={onAddEmailAddressClick}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n\n              <AppearanceTab\n                colors={colors}\n                types={types}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            </SwipeableViews>\n          </Hidden>\n        </DialogContent>\n\n        {(selectedTab === 1 && hasDeviatedFromDefaultSettings) &&\n          <DialogActions>\n            <Button color=\"primary\" variant=\"contained\" onClick={this.handleResetClick}>Reset</Button>\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAddAvatarClick: PropTypes.func.isRequired,\n  onChangeAvatarClick: PropTypes.func.isRequired,\n  onAddDisplayNameClick: PropTypes.func.isRequired,\n  onChangeDisplayNameClick: PropTypes.func.isRequired,\n  onAddEmailAddressClick: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired,\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired,\n  onResetClick: PropTypes.func.isRequired\n};\n\nexport default SettingsDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass InputDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Dialog Properties\n    const { fullScreen, open } = this.props;\n\n    // Custom Properties\n    const { title, contentText, textField, cancelText, okText, disableOkButton, highlightOkButton } = this.props;\n\n    // Dialog Events\n    const { onClose, onExited } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onOkClick } = this.props;\n\n    if (!onClose) {\n      return null;\n    }\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={onExited} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n\n            {textField &&\n              <form>\n                {textField}\n              </form>\n            }\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" disabled={disableOkButton} variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nInputDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  textField: PropTypes.element,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default InputDialog;","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport validate from 'validate.js';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/performance';\n\nimport readingTime from 'reading-time';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport LaunchScreen from './layout/LaunchScreen';\n\nimport Bar from './layout/Bar';\n\nimport HomeContent from './content/HomeContent';\nimport NotFoundContent from './content/NotFoundContent';\n\nimport SignUpDialog from './dialogs/SignUpDialog';\nimport SignInDialog from './dialogs/SignInDialog';\nimport ResetPasswordDialog from './dialogs/ResetPasswordDialog';\nimport WelcomeDialog from './dialogs/WelcomeDialog';\nimport SettingsDialog from './dialogs/SettingsDialog';\nimport InputDialog from './dialogs/InputDialog';\nimport ConfirmationDialog from './dialogs/ConfirmationDialog';\n\n/**\n * Firebase\n */\n\nconst config = {\n  apiKey: 'AIzaSyDYZOrZVpXkPQD6J31mb9t2eIIxmGEJK-Q',\n  authDomain: 'react-material-ui-firebase.firebaseapp.com',\n  databaseURL: 'https://react-material-ui-firebase.firebaseio.com',\n  projectId: 'react-material-ui-firebase',\n  storageBucket: 'react-material-ui-firebase.appspot.com',\n  messagingSenderId: '552659850812',\n  appId: '1:552659850812:web:d685f74f72161d96'\n};\n\nfirebase.initializeApp(config);\n\nconst auth = firebase.auth();\n\n// eslint-disable-next-line no-unused-vars\nconst performance = firebase.performance();\n\n/**\n * Theming\n */\n\nconst colors = [\n  {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n  {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n  {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n  {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n  {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n  {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n  {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n  {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n  {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n  {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n  {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n  {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n  {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n  {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n  {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n  {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n  {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n  {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n  {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n];\n\nconst types = [\n  'light',\n  'dark'\n];\n\nconst defaultTheme = {\n  primaryColor: 'blue',\n  secondaryColor: 'red',\n  type: 'light'\n};\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: red,\n    type: 'light'\n  },\n\n  typography: {\n    useNextVariants: true\n  }\n});\n\n/**\n * Settings\n */\n\nconst settings = {\n  name: 'React + Material-UI + Firebase'\n};\n\nconst constraints = {\n  signUp: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    },\n\n    password: {\n      length: {\n        minimum: 6\n      },\n      presence: {\n        allowEmpty: false\n      }\n    },\n\n    passwordConfirmation: {\n      equality: 'password',\n      length: {\n        minimum: 6\n      },\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  signIn: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    },\n\n    password: {\n      length: {\n        minimum: 6\n      },\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  resetPassword: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  addAvatar: {\n    avatar: {\n      presence: {\n        allowEmpty: false\n      },\n\n      url: {\n        message: \"^Avatar URL is not a valid URL\"\n      }\n    }\n  },\n\n  changeAvatar: {\n    avatar: {\n      presence: {\n        allowEmpty: false\n      },\n\n      url: {\n        message: \"^Avatar URL is not a valid URL\"\n      }\n    }\n  },\n\n  addDisplayName: {\n    displayName: {\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  changeDisplayName: {\n    displayName: {\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  addEmailAddress: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n};\n\nclass App extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: defaultTheme.type,\n\n      isAuthReady: false,\n      isPerformingAuthAction: false,\n      isVerifyingEmailAddress: false,\n      isSignedIn: false,\n\n      user: null,\n      avatar: '',\n      displayName: '',\n      emailAddress: '',\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      resetPasswordDialog: {\n        open: false\n      },\n\n      welcomeDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      addAvatarDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      changeAvatarDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      addDisplayNameDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      changeDisplayNameDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      addEmailAddressDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  /**\n   * Creates a new user account associated with the specified email address and password.\n   * @param emailAddress\n   * @param password\n   * @param passwordConfirmation\n   */\n  signUp = (emailAddress, password, passwordConfirmation) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password || !passwordConfirmation) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress,\n      password,\n      passwordConfirmation\n    }, constraints.signUp);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.openWelcomeDialog();\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/email-already-in-use':\n          case 'auth/invalid-email':\n          case 'auth/operation-not-allowed':\n          case 'auth/weak-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Asynchronously signs in using an email and password.\n   * @param emailAddress\n   * @param password\n   */\n  signIn = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress,\n      password,\n    }, constraints.signIn);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignInDialog(() => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/user-disabled':\n          case 'auth/user-not-found':\n          case 'auth/wrong-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Authenticates a Firebase client using a popup-based OAuth authentication flow.\n   * @param provider\n   */\n  signInWithProvider = (provider) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!provider) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithPopup(provider).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.closeSignInDialog(() => {\n            const user = value.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n          });\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sends a password reset email to the given email address.\n   * @param emailAddress\n   */\n  resetPassword = (emailAddress) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress\n    }, constraints.resetPassword);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.sendPasswordResetEmail(emailAddress).then(() => {\n        this.closeResetPasswordDialog(() => {\n          this.openSnackbar(`Password reset e-mail sent to ${emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n          case 'auth/user-not-found':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sets an avatar.\n   */\n  addAvatar = () => {\n    const { user, isSignedIn, avatar } = this.state;\n\n    if (!user || !isSignedIn || !avatar) {\n      return;\n    }\n\n    if (user.photoURL) {\n      return;\n    }\n\n    const errors = validate({ avatar }, constraints.addAvatar);\n\n    if (errors) {\n      this.setState((state) => ({\n        addAvatarDialog: {\n          ...state.addAvatarDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ photoURL: avatar }).then(() => {\n        this.closeAddAvatarDialog(() => {\n          this.openSnackbar('Avatar added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Changes the current avatar.\n   */\n  changeAvatar = () => {\n    const { user, isSignedIn, avatar } = this.state;\n\n    if (!user || !isSignedIn || !avatar) {\n      return;\n    }\n\n    const errors = validate({ avatar }, constraints.changeAvatar);\n\n    if (errors) {\n      this.setState((state) => ({\n        changeAvatarDialog: {\n          ...state.changeAvatarDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    if (user.photoURL === avatar) {\n      this.openSnackbar('Avatar already being used');\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ photoURL: avatar }).then(() => {\n        this.closeChangeAvatarDialog(() => {\n          this.openSnackbar('Avatar changed');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sets a display name.\n   */\n  addDisplayName = () => {\n    const { user, isSignedIn, displayName } = this.state;\n\n    if (!user || !isSignedIn || !displayName) {\n      return;\n    }\n\n    if (user.displayName) {\n      return;\n    }\n\n    const errors = validate({ displayName }, constraints.addDisplayName);\n\n    if (errors) {\n      this.setState((state) => ({\n        addDisplayNameDialog: {\n          ...state.addDisplayNameDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ displayName }).then(() => {\n        this.closeAddDisplayNameDialog(() => {\n          this.openSnackbar('Display name added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Changes the current display name.\n   */\n  changeDisplayName = () => {\n    const { user, isSignedIn, displayName } = this.state;\n\n    if (!user || !isSignedIn || !displayName) {\n      return;\n    }\n\n    const errors = validate({ displayName }, constraints.changeDisplayName);\n\n    if (errors) {\n      this.setState((state) => ({\n        changeDisplayNameDialog: {\n          ...state.changeDisplayNameDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    if (displayName === user.displayName) {\n      this.openSnackbar(`Display name is already ${displayName}`);\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ displayName }).then(() => {\n        this.closeChangeDisplayNameDialog(() => {\n          this.openSnackbar('Display name changed');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sets an e-mail address.\n   */\n  addEmailAddress = () => {\n    const { user, isSignedIn, emailAddress } = this.state;\n\n    if (!user || !isSignedIn || !emailAddress) {\n      return;\n    }\n\n    if (user.email) {\n      return;\n    }\n\n    const errors = validate({ emailAddress }, constraints.addEmailAddress);\n\n    if (errors) {\n      this.setState((state) => ({\n        addEmailAddressDialog: {\n          ...state.addEmailAddressDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateEmail(emailAddress).then(() => {\n        this.closeAddEmailAddressDialog(() => {\n          this.openSnackbar('E-mail address added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sends a verification email to a user.\n   */\n  verifyEmailAddress = (callback) => {\n    const { user, isSignedIn } = this.state;\n\n    if (!user || !user.email || !isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.sendEmailVerification().then(() => {\n        this.setState({\n          isVerifyingEmailAddress: true\n        }, () => {\n          const emailAddress = user.email;\n\n          this.openSnackbar(`Verification e-mail sent to ${emailAddress}`);\n\n          if (callback && typeof callback === 'function') {\n            callback();\n          }\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Signs out the current user.\n   */\n  signOut = () => {\n    if (!this.state.isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signOut().then(() => {\n        this.closeSignOutDialog(() => {\n          this.openSnackbar('Signed out');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Changes the current theme. Theme is applied in real-time.\n   * @param palette\n   * @param removeLocalStorage\n   * @param callback\n   */\n  updateTheme = (palette, removeLocalStorage, callback) => {\n    const { primaryColor, secondaryColor, type } = this.state;\n\n    if (!palette.primaryColor) {\n      palette.primaryColor = primaryColor;\n    }\n\n    if (!palette.secondaryColor) {\n      palette.secondaryColor = secondaryColor;\n    }\n\n    if (!palette.type) {\n      palette.type = type;\n    }\n\n    theme = createMuiTheme({\n      palette: {\n        primary: colors.find(color => color.id === palette.primaryColor).import,\n        secondary: colors.find(color => color.id === palette.secondaryColor).import,\n        type: palette.type\n      },\n\n      typography: {\n        useNextVariants: true\n      }\n    });\n\n    this.setState({\n      primaryColor: palette.primaryColor,\n      secondaryColor: palette.secondaryColor,\n      type: palette.type\n    }, () => {\n      if (removeLocalStorage) {\n        localStorage.removeItem('theme');\n      } else {\n        localStorage.setItem('theme', JSON.stringify({\n          primaryColor: palette.primaryColor,\n          secondaryColor: palette.secondaryColor,\n          type: palette.type\n        }));\n      }\n\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Resets the current theme to the default one.\n   */\n  resetTheme = () => {\n    this.updateTheme({\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: defaultTheme.type\n    }, true, () => {\n      this.openSnackbar('Settings reset');\n    });\n  };\n\n  changePrimaryColor = (event) => {\n    const primaryColor = event.target.value;\n\n    this.updateTheme({\n      primaryColor\n    });\n  };\n\n  changeSecondaryColor = (event) => {\n    const secondaryColor = event.target.value;\n\n    this.updateTheme({\n      secondaryColor\n    });\n  };\n\n  changeType = (event) => {\n    const type = event.target.value;\n\n    this.updateTheme({\n      type\n    });\n  };\n\n  openSignUpDialog = () => {\n    this.setState({\n      signUpDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignUpDialog = (callback) => {\n    this.setState({\n      signUpDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSignInDialog = () => {\n    this.setState({\n      signInDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignInDialog = (callback) => {\n    this.setState({\n      signInDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openResetPasswordDialog = () => {\n    this.setState({\n      resetPasswordDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeResetPasswordDialog = (callback) => {\n    this.setState({\n      resetPasswordDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openWelcomeDialog = () => {\n    this.setState({\n      welcomeDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeWelcomeDialog = (callback) => {\n    this.setState({\n      welcomeDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSettingsDialog = () => {\n    this.setState({\n      settingsDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSettingsDialog = (callback) => {\n    this.setState({\n      settingsDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddAvatarDialog = () => {\n    this.setState({\n      addAvatarDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddAvatarDialog = (callback) => {\n    this.setState({\n      addAvatarDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openChangeAvatarDialog = () => {\n    this.setState({\n      changeAvatarDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeChangeAvatarDialog = (callback) => {\n    this.setState({\n      changeAvatarDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddDisplayNameDialog = () => {\n    this.setState({\n      addDisplayNameDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddDisplayNameDialog = (callback) => {\n    this.setState({\n      addDisplayNameDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openChangeDisplayNameDialog = () => {\n    this.setState({\n      changeDisplayNameDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeChangeDisplayNameDialog = (callback) => {\n    this.setState({\n      changeDisplayNameDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddEmailAddressDialog = () => {\n    this.setState({\n      addEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddEmailAddressDialog = (callback) => {\n    this.setState({\n      addEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSignOutDialog = () => {\n    this.setState({\n      signOutDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignOutDialog = (callback) => {\n    this.setState({\n      signOutDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  handleAvatarChange = (event) => {\n    const avatar = event.target.value;\n\n    this.setState({ avatar });\n  };\n\n  handleDisplayNameChange = (event) => {\n    const displayName = event.target.value;\n\n    this.setState({ displayName });\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  /**\n   * Opens a snackbar. Snackbars provide brief messages about app processes through a message.\n   */\n  openSnackbar = (message) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * 2,\n        message,\n        open: true\n      }\n    });\n  };\n\n  /**\n   * Sets the `open` state of a snackbar to `false`. A direct response to the snackbar's `onClose` event.\n   * @param clearMessage Whether or not to clear the message of the snackbar.\n   */\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    // Properties\n    const {\n      primaryColor,\n      secondaryColor,\n      type,\n      isAuthReady,\n      isPerformingAuthAction,\n      isVerifyingEmailAddress,\n      isSignedIn,\n      user,\n      avatar,\n      displayName,\n      emailAddress\n    } = this.state;\n\n    // Dialogs\n    const {\n      signUpDialog,\n      signInDialog,\n      resetPasswordDialog,\n      welcomeDialog,\n      settingsDialog,\n      addAvatarDialog,\n      changeAvatarDialog,\n      addDisplayNameDialog,\n      changeDisplayNameDialog,\n      addEmailAddressDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    return (\n      <Router basename=\"/react-material-ui-firebase\">\n        <MuiThemeProvider theme={theme}>\n          <div style={{ minHeight: '100vh', backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa' }}>\n            {!isAuthReady &&\n              <LaunchScreen />\n            }\n\n            {isAuthReady &&\n              <React.Fragment>\n                <Bar\n                  name={settings.name}\n\n                  isSignedIn={isSignedIn}\n                  isPerformingAuthAction={isPerformingAuthAction}\n\n                  user={user}\n\n                  onSignUpClick={this.openSignUpDialog}\n                  onSignInClick={this.openSignInDialog}\n\n                  onSettingsClick={this.openSettingsDialog}\n                  onSignOutClick={this.openSignOutDialog}\n                />\n\n                <Switch>\n                  <Route path=\"/\" exact render={() => (<HomeContent isSignedIn={isSignedIn} title={settings.name} />)} />\n                  <Route component={NotFoundContent} />\n                </Switch>\n\n                {isSignedIn &&\n                  <React.Fragment>\n                    <Hidden only=\"xs\">\n                      <WelcomeDialog\n                        open={welcomeDialog.open}\n\n                        title={settings.name}\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        onClose={this.closeWelcomeDialog}\n\n                        onCancelClick={this.closeWelcomeDialog}\n                        onVerifyClick={() => {\n                          this.verifyEmailAddress(() => {\n                            this.closeWelcomeDialog()\n                          })\n                        }}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <WelcomeDialog\n                        fullScreen\n                        open={welcomeDialog.open}\n\n                        title={settings.name}\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        onClose={this.closeWelcomeDialog}\n\n                        onCancelClick={this.closeWelcomeDialog}\n                        onVerifyClick={() => {\n                          this.verifyEmailAddress(() => {\n                            this.closeWelcomeDialog()\n                          })\n                        }}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <SettingsDialog\n                        open={settingsDialog.open}\n\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        isVerifyingEmailAddress={isVerifyingEmailAddress}\n                        colors={colors}\n                        types={types}\n                        primaryColor={primaryColor}\n                        secondaryColor={secondaryColor}\n                        type={type}\n                        defaultTheme={defaultTheme}\n\n                        onClose={this.closeSettingsDialog}\n                        onAddAvatarClick={this.openAddAvatarDialog}\n                        onChangeAvatarClick={this.openChangeAvatarDialog}\n                        onAddDisplayNameClick={this.openAddDisplayNameDialog}\n                        onChangeDisplayNameClick={this.openChangeDisplayNameDialog}\n                        onAddEmailAddressClick={this.openAddEmailAddressDialog}\n                        onVerifyEmailAddressClick={this.verifyEmailAddress}\n                        onPrimaryColorChange={this.changePrimaryColor}\n                        onSecondaryColorChange={this.changeSecondaryColor}\n                        onTypeChange={this.changeType}\n                        onResetClick={this.resetTheme}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <SettingsDialog\n                        fullScreen\n                        open={settingsDialog.open}\n\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        isVerifyingEmailAddress={isVerifyingEmailAddress}\n                        colors={colors}\n                        types={types}\n                        primaryColor={primaryColor}\n                        secondaryColor={secondaryColor}\n                        type={type}\n                        defaultTheme={defaultTheme}\n\n                        onClose={this.closeSettingsDialog}\n                        onAddAvatarClick={this.openAddAvatarDialog}\n                        onChangeAvatarClick={this.openChangeAvatarDialog}\n                        onAddDisplayNameClick={this.openAddDisplayNameDialog}\n                        onChangeDisplayNameClick={this.openChangeDisplayNameDialog}\n                        onAddEmailAddressClick={this.openAddEmailAddressDialog}\n                        onVerifyEmailAddressClick={this.verifyEmailAddress}\n                        onPrimaryColorChange={this.changePrimaryColor}\n                        onSecondaryColorChange={this.changeSecondaryColor}\n                        onTypeChange={this.changeType}\n                        onResetClick={this.resetTheme}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <InputDialog\n                        open={addAvatarDialog.open}\n\n                        title=\"Add avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(addAvatarDialog.errors && addAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(addAvatarDialog.errors && addAvatarDialog.errors.avatar) ? addAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder=\"Avatar URL\"\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddAvatarDialog}\n                        onOkClick={this.addAvatar}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <InputDialog\n                        fullScreen\n                        open={addAvatarDialog.open}\n\n                        title=\"Add avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(addAvatarDialog.errors && addAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(addAvatarDialog.errors && addAvatarDialog.errors.avatar) ? addAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder=\"Avatar URL\"\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddAvatarDialog}\n                        onOkClick={this.addAvatar}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <InputDialog\n                        open={changeAvatarDialog.open}\n\n                        title=\"Change avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar) ? changeAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder={user.photoURL}\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeAvatarDialog}\n                        onOkClick={this.changeAvatar}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <InputDialog\n                        fullScreen\n                        open={changeAvatarDialog.open}\n\n                        title=\"Change avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar) ? changeAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder={user.photoURL}\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeAvatarDialog}\n                        onOkClick={this.changeAvatar}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <InputDialog\n                        open={addDisplayNameDialog.open}\n\n                        title=\"Add display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName) ? addDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder=\"Display name\"\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddDisplayNameDialog}\n                        onOkClick={this.addDisplayName}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <InputDialog\n                        fullScreen\n                        open={addDisplayNameDialog.open}\n\n                        title=\"Add display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName) ? addDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder=\"Display name\"\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddDisplayNameDialog}\n                        onOkClick={this.addDisplayName}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <InputDialog\n                        open={changeDisplayNameDialog.open}\n\n                        title=\"Change display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName) ? changeDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder={user.displayName}\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeDisplayNameDialog}\n                        onOkClick={this.changeDisplayName}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <InputDialog\n                        fullScreen\n                        open={changeDisplayNameDialog.open}\n\n                        title=\"Change display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName) ? changeDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder={user.displayName}\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeDisplayNameDialog}\n                        onOkClick={this.changeDisplayName}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <InputDialog\n                        open={addEmailAddressDialog.open}\n\n                        title=\"Add e-mail address\"\n                        contentText=\"Your e-mail address is used to identify you. It's not visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"email\"\n                            autoFocus\n                            error={!!(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress)}\n                            fullWidth\n                            helperText={(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress) ? addEmailAddressDialog.errors.emailAddress[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleEmailAddressChange}\n                            placeholder=\"E-mail address\"\n                            required\n                            type=\"email\"\n                            value={emailAddress}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!emailAddress || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddEmailAddressDialog}\n                        onExited={() => {\n                          this.setState({\n                            emailAddress: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddEmailAddressDialog}\n                        onOkClick={this.addEmailAddress}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <InputDialog\n                        fullScreen\n                        open={addEmailAddressDialog.open}\n\n                        title=\"Add e-mail address\"\n                        contentText=\"Your e-mail address is used to identify you. It's not visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"email\"\n                            autoFocus\n                            error={!!(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress)}\n                            fullWidth\n                            helperText={(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress) ? addEmailAddressDialog.errors.emailAddress[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleEmailAddressChange}\n                            placeholder=\"E-mail address\"\n                            required\n                            type=\"email\"\n                            value={emailAddress}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!emailAddress || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddEmailAddressDialog}\n                        onExited={() => {\n                          this.setState({\n                            emailAddress: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddEmailAddressDialog}\n                        onOkClick={this.addEmailAddress}\n                      />\n                    </Hidden>\n\n                    <ConfirmationDialog\n                      open={signOutDialog.open}\n\n                      title=\"Sign out?\"\n                      contentText=\"While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\"\n                      okText=\"Sign Out\"\n                      disableOkButton={isPerformingAuthAction}\n                      highlightOkButton\n\n                      onClose={this.closeSignOutDialog}\n                      onCancelClick={this.closeSignOutDialog}\n                      onOkClick={this.signOut}\n                    />\n                  </React.Fragment>\n                }\n\n                {!isSignedIn &&\n                  <React.Fragment>\n                    <Hidden only=\"xs\">\n                      <SignUpDialog\n                        open={signUpDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={constraints.signUp}\n\n                        signUp={this.signUp}\n\n                        onClose={this.closeSignUpDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <SignUpDialog\n                        fullScreen\n                        open={signUpDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={constraints.signUp}\n\n                        signUp={this.signUp}\n\n                        onClose={this.closeSignUpDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <SignInDialog\n                        open={signInDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={constraints.signIn}\n\n                        signIn={this.signIn}\n\n                        onClose={this.closeSignInDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                        onResetPasswordClick={this.openResetPasswordDialog}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <SignInDialog\n                        fullScreen\n                        open={signInDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={constraints.signIn}\n\n                        signIn={this.signIn}\n\n                        onClose={this.closeSignInDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                        onResetPasswordClick={this.openResetPasswordDialog}\n                      />\n                    </Hidden>\n\n                    <ResetPasswordDialog\n                      open={resetPasswordDialog.open}\n\n                      isPerformingAuthAction={isPerformingAuthAction}\n                      constraints={constraints.resetPassword}\n\n                      resetPassword={this.resetPassword}\n\n                      onClose={this.closeResetPasswordDialog}\n                    />\n                  </React.Fragment>\n                }\n\n                <Snackbar\n                  autoHideDuration={snackbar.autoHideDuration}\n                  message={snackbar.message}\n                  open={snackbar.open}\n                  onClose={this.closeSnackbar}\n                />\n              </React.Fragment>\n            }\n          </div>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    const theme = JSON.parse(localStorage.getItem('theme'));\n\n    if (theme) {\n      this.updateTheme(theme);\n    }\n\n    this.removeAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      if (this._isMounted) {\n        this.setState({\n          isAuthReady: true,\n          isSignedIn: !!user,\n          user\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n\n    this.removeAuthObserver();\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}