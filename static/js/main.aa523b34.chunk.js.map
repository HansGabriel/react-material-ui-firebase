{"version":3,"sources":["layout/Bar.js","layout/EmptyState.js","content/HomeContent.js","content/NotFoundContent.js","dialogs/SignUpDialog.js","dialogs/SignInDialog.js","dialogs/ResetPasswordDialog.js","dialogs/ConfirmationDialog.js","tabs/settings/AccountTab.js","tabs/settings/AppearanceTab.js","dialogs/SettingsDialog.js","dialogs/SignOutDialog.js","App.js","serviceWorker.js","index.js"],"names":["Bar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","_this$props","classes","title","isSignedIn","isSigningUp","isSigningIn","_this$props2","onSignUpClick","onSignInClick","react_default","a","createElement","AppBar_default","color","position","Toolbar_default","variant","Typography_default","style","flexGrow","Fragment","IconButton_default","onClick","Person_default","Menu_default","open","Boolean","onClose","MenuItem_default","Button_default","className","signUpButton","disabled","Component","withStyles","theme","marginRight","spacing","unit","EmptyState","icon","description","button","center","top","left","transform","textAlign","HomeContent","layout_EmptyState","Home_default","emptyStateIcon","fontSize","concat","NotFoundContent","FindInPage_default","Fab_default","href","buttonIcon","marginTop","initialState","emailAddress","password","passwordConfirmation","errors","SignUpDialog","signUp","_this$state","validate","email","presence","allowEmpty","length","minimum","equality","handleExited","handleKeyPress","key","altKey","ctrlKey","metaKey","shiftKey","handleEmailAddressChange","target","value","handlePasswordChange","handlePasswordConfirmationChange","handleSignUpClick","_this$state2","Dialog_default","onExited","onKeyPress","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","autoComplete","autoFocus","error","fullWidth","helperText","label","margin","onChange","required","type","DialogActions_default","SignInDialog","signIn","handleSignInClick","onResetPasswordClick","placeholder","ResetPasswordDialog","resetPassword","preventDefault","handleResetPasswordClick","isResettingPassword","ConfirmationDialog","onOkClick","contentText","cancelText","okText","highlightOkButton","onCancelClick","AccountTab","openVerifyEmailAddressDialog","verifyEmailAddressDialog","closeVerifyEmailAddressDialog","callback","verifyEmailAddress","onVerifyEmailAddressClick","user","isVerifyingEmailAddress","dialogContentText","List_default","ListItem_default","ListItemIcon_default","Tooltip_default","Email_default","ListItemText_default","primary","secondary","emailVerified","ListItemSecondaryAction_default","AccessTime_default","moment","metadata","lastSignInTime","format","creationTime","dialogs_ConfirmationDialog","AppearanceTab","colors","types","primaryColor","secondaryColor","onPrimaryColorChange","onSecondaryColorChange","onTypeChange","FormControl_default","InputLabel_default","Select_default","map","id","name","index","charAt","toUpperCase","slice","SettingsDialog","changeTab","selectedTab","onResetClick","DynamicTab","Tab","Tabs_default","settings_AccountTab","settings_AppearanceTab","setTimeout","SignOutDialog","signOut","isSigningOut","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","import","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","defaultTheme","createMuiTheme","palette","typography","useNextVariants","settings","App","updateTheme","removeLocalStorage","find","localStorage","removeItem","setItem","JSON","stringify","resetTheme","changePrimaryColor","changeSecondaryColor","changeType","showSignUpDialog","signUpDialog","closeSignUpDialog","showSignInDialog","signInDialog","closeSignInDialog","showResetPasswordDialog","resetPasswordDialog","closeResetPasswordDialog","showSettingsDialog","settingsDialog","closeSettingsDialog","showSignOutDialog","signOutDialog","closeSignOutDialog","openSnackbar","message","snackbar","autoHideDuration","readingTime","time","closeSnackbar","clearMessage","arguments","undefined","auth","createUserWithEmailAndPassword","then","userCredential","catch","signInWithEmailAndPassword","displayName","sendPasswordResetEmail","sendEmailVerification","isAuthReady","_this$state3","_this$state4","react_router_dom","styles","minHeight","backgroundColor","layout_Bar","react_router","path","exact","component","PersonOutline_default","dialogs_SignUpDialog","dialogs_SignInDialog","dialogs_ResetPasswordDialog","dialogs_SettingsDialog","dialogs_SignOutDialog","Snackbar_default","_this2","parse","getItem","removeAuthObserver","onAuthStateChanged","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa523b34.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst styles = (theme) => ({\n  signUpButton: {\n    marginRight: theme.spacing.unit\n  }\n});\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Properties\n    const { classes, title, isSignedIn, isSigningUp, isSigningIn } = this.props;\n\n    // Events\n    const { onSignUpClick, onSignInClick } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Typography style={{ flexGrow: 1 }} color=\"inherit\" variant=\"h6\">{title}</Typography>\n\n          {isSignedIn &&\n            <React.Fragment>\n              <IconButton color=\"inherit\" onClick={this.openMenu}>\n                <PersonIcon />\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </React.Fragment>\n          }\n\n          {!isSignedIn &&\n            <React.Fragment>\n              <Button className={classes.signUpButton} color=\"secondary\" disabled={isSigningUp} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              <Button color=\"secondary\" disabled={isSigningIn} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </React.Fragment>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  isSignedIn: PropTypes.bool.isRequired,\n  isSigningUp: PropTypes.bool.isRequired,\n  isSigningIn: PropTypes.bool.isRequired,\n\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Bar);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n};\n\nclass EmptyState extends Component {\n  render() {\n    const { classes, icon, title, description, button } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon}\n        {title && <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>}\n        {description && <Typography color=\"textSecondary\" variant=\"subtitle1\">{description}</Typography>}\n        {button}\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  classes: PropTypes.object.isRequired,\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  button: PropTypes.element\n};\n\nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  }\n});\n\nclass HomeContent extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<HomeIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Home\"\n      />\n    );\n  }\n}\n\nHomeContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(HomeContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport FindIcon from '@material-ui/icons/FindInPage';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  },\n\n  buttonIcon: {\n    marginRight: `${theme.spacing.unit}px`\n  }\n});\n\nclass NotFoundContent extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<FindIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Content Not Found\"\n        description=\"The requested URL was not found on this server.\"\n        button={\n          <Fab className={classes.button} color=\"primary\" href=\"/\" variant=\"extended\">\n            <HomeIcon className={classes.buttonIcon} /> Go Home\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nNotFoundContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NotFoundContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      },\n      \n      password: {\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      },\n\n      passwordConfirmation: {\n        equality: 'password',\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress, password, passwordConfirmation } = this.state;\n    \n    const errors = validate({ emailAddress, password, passwordConfirmation }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signUp(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({ passwordConfirmation });\n  };\n\n  handleSignUpClick = () => {\n    this.signUp();\n  };\n\n  render() {\n    // Properties\n    const { open, isSigningUp } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, password, passwordConfirmation, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Create an account to access features that are unavailable to users who haven't signed up.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              label=\"E-mail address\"\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"new-password\"\n              error={(errors && errors.password) ? true : false}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              label=\"Password\"\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              required\n              type=\"password\"\n              value={password}\n            />\n\n            <TextField\n              autoComplete=\"password\"\n              error={(errors && errors.passwordConfirmation) ? true : false}\n              fullWidth\n              helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n              label=\"Password confirmation\"\n              margin=\"normal\"\n              onChange={this.handlePasswordConfirmationChange}\n              required\n              type=\"password\"\n              value={passwordConfirmation}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password || !passwordConfirmation) || isSigningUp} variant=\"contained\" onClick={this.handleSignUpClick}>Sign Up</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isSigningUp: PropTypes.bool.isRequired,\n\n  signUp: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default SignUpDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signIn = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      },\n      \n      password: {\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress, password } = this.state;\n    \n    const errors = validate({ emailAddress, password }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signIn(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handleSignInClick = () => {\n    this.signIn();\n  };\n\n  render() {\n    // Properties\n    const { open, isSigningIn } = this.props;\n\n    // Events\n    const { onClose, onResetPasswordClick } = this.props;\n\n    const { emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Some features might be unavailable until you sign in.\n            While you're signed in you can manage your account.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"current-password\"\n              error={(errors && errors.password) ? true : false}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              value={password}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={onResetPasswordClick}>Reset Password</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password) || isSigningIn} variant=\"contained\" onClick={this.handleSignInClick}>Sign In</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isSigningIn: PropTypes.bool.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onResetPasswordClick: PropTypes.func.isRequired\n};\n\nexport default SignInDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n\n  errors: null\n};\n\nclass ResetPasswordDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress } = this.state;\n    \n    const errors = validate({ emailAddress }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.resetPassword(emailAddress);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.resetPassword();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handleResetPasswordClick = () => {\n    this.resetPassword();\n  };\n\n  render() {\n    // Properties\n    const { open, isResettingPassword } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Reset your password\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            An e-mail will be sent to your e-mail address containing instructions on how to reset your password.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={!emailAddress || isResettingPassword} variant=\"contained\" onClick={this.handleResetPasswordClick}>Reset Password</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nResetPasswordDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isResettingPassword: PropTypes.bool.isRequired,\n\n  resetPassword: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default ResetPasswordDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\n/**\n * Confirmation dialogs give users the ability to provide final confirmation of a choice\n * before committing to it, so they have a chance to change their minds if necessary.\n * If the user confirms a choice, it’s carried out. Otherwise, the user can dismiss the\n * dialog. For example, users can listen to multiple ringtones but only make a final\n * selection upon touching “OK.”\n */\nclass ConfirmationDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    /**\n     * Properties\n     */\n\n    // Dialog\n    const { open } = this.props;\n\n    // Custom\n    const { title, contentText, cancelText, okText, highlightOkButton } = this.props;\n\n    /**\n     * Events\n     */\n\n    // Dialog\n    const { onClose } = this.props;\n\n    // Custom\n    const { onCancelClick, onOkClick } = this.props;\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string.isRequired,\n  contentText: PropTypes.string.isRequired,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default ConfirmationDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\n\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport ConfirmationDialog from '../../dialogs/ConfirmationDialog';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    };\n  }\n\n  openVerifyEmailAddressDialog = () => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeVerifyEmailAddressDialog = (callback) => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.closeVerifyEmailAddressDialog(() => {\n      this.props.onVerifyEmailAddressClick();\n    });\n  };\n\n  render() {\n    const { classes, user, isVerifyingEmailAddress } = this.props;\n    const { verifyEmailAddressDialog } = this.state;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          This is a summary of your account.\n          You can manage your account throughout all the settings.\n        </DialogContentText>\n\n        <List>\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"E-mail address\">\n                <EmailIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary={user.email} secondary={user.emailVerified ? 'Verified' : 'Not verified'} />\n\n            {!user.emailVerified &&\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isVerifyingEmailAddress} variant=\"contained\" onClick={this.openVerifyEmailAddressDialog}>Verify</Button>\n              </ListItemSecondaryAction>\n            }\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"Signed in\">\n                <AccessTimeIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary=\"Signed in\" secondary={moment(user.metadata.lastSignInTime).format('LLLL')} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"Signed up\">\n                <AccessTimeIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary=\"Signed up\" secondary={moment(user.metadata.creationTime).format('LLLL')} />\n          </ListItem>\n        </List>\n\n        <ConfirmationDialog\n          open={verifyEmailAddressDialog.open}\n\n          title=\"Verify e-mail address?\"\n          contentText=\"An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\"\n          okText=\"Verify\"\n          highlightOkButton\n\n          onClose={this.closeVerifyEmailAddressDialog}\n\n          onCancelClick={this.closeVerifyEmailAddressDialog}\n          onOkClick={this.verifyEmailAddress}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nAccountTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n\n  onVerifyEmailAddressClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AppearanceTab extends Component {\n  render() {\n    // Properties\n    const { classes, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          Customize the look and feel to your own liking.\n          You can reset all changes you've made by clicking Reset.\n        </DialogContentText>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Primary color</InputLabel>\n\n          <Select onChange={onPrimaryColorChange} value={primaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Secondary color</InputLabel>\n\n          <Select onChange={onSecondaryColorChange} value={secondaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Type</InputLabel>\n\n          <Select onChange={onTypeChange} value={type}>\n            {types.map((type, index) => {\n              return (<MenuItem key={index} value={type}>{type.charAt(0).toUpperCase() + type.slice(1)}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nAppearanceTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AppearanceTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\n\nimport AccountTab from '../tabs/settings/AccountTab';\nimport AppearanceTab from '../tabs/settings/AppearanceTab';\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedTab: 0\n    };\n  }\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onClose();\n    }\n  };\n\n  changeTab = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  render() {\n    // Properties\n    const { open, user, isVerifyingEmailAddress, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onClose, onVerifyEmailAddressClick, onPrimaryColorChange, onSecondaryColorChange, onTypeChange, onResetClick } = this.props;\n\n    const { selectedTab } = this.state;\n\n    const DynamicTab = withStyles({\n      label: {\n        color: type === 'light' ? '#000000' : '#ffffff'\n      }\n    })(Tab);\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>Settings</DialogTitle>\n\n        <Tabs onChange={this.changeTab} value={selectedTab} variant=\"fullWidth\">\n          <DynamicTab label=\"Account\" />\n          <DynamicTab label=\"Appearance\" />\n        </Tabs>\n\n        <DialogContent>\n          {selectedTab === 0 &&\n            <AccountTab user={user} isVerifyingEmailAddress={isVerifyingEmailAddress} onVerifyEmailAddressClick={onVerifyEmailAddressClick} />\n          }\n\n          {selectedTab === 1 &&\n            <AppearanceTab\n              colors={colors}\n              types={types}\n              primaryColor={primaryColor}\n              secondaryColor={secondaryColor}\n              type={type}\n              onPrimaryColorChange={onPrimaryColorChange}\n              onSecondaryColorChange={onSecondaryColorChange}\n              onTypeChange={onTypeChange}\n            />\n          }\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={() => { setTimeout(onResetClick, 137.5) }}>Reset</Button>\n          <Button color=\"primary\" variant=\"contained\" onClick={onClose}>OK</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired,\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired,\n  onResetClick: PropTypes.func.isRequired\n};\n\nexport default SettingsDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass SignOutDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.signOut();\n    }\n  };\n\n  render() {\n    // Properties\n    const { open, isSigningOut } = this.props;\n\n    // Methods\n    const { signOut } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign out?\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={isSigningOut} variant=\"contained\" onClick={signOut}>Sign Out</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignOutDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isSigningOut: PropTypes.bool.isRequired,\n\n  signOut: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default SignOutDialog;","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport readingTime from 'reading-time';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nimport { createMuiTheme, withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\n\nimport Bar from './layout/Bar';\nimport EmptyState from './layout/EmptyState';\n\nimport HomeContent from './content/HomeContent';\nimport NotFoundContent from './content/NotFoundContent';\n\nimport SignUpDialog from './dialogs/SignUpDialog';\nimport SignInDialog from './dialogs/SignInDialog';\nimport ResetPasswordDialog from './dialogs/ResetPasswordDialog';\nimport SettingsDialog from './dialogs/SettingsDialog';\nimport SignOutDialog from './dialogs/SignOutDialog';\n\nconst config = {\n  apiKey: 'AIzaSyDYZOrZVpXkPQD6J31mb9t2eIIxmGEJK-Q',\n  authDomain: 'react-material-ui-firebase.firebaseapp.com',\n  databaseURL: 'https://react-material-ui-firebase.firebaseio.com',\n  projectId: 'react-material-ui-firebase',\n  storageBucket: 'react-material-ui-firebase.appspot.com',\n  messagingSenderId: '552659850812'\n};\n\nfirebase.initializeApp(config);\n\nconst colors = [\n  {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n  {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n  {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n  {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n  {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n  {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n  {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n  {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n  {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n  {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n  {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n  {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n  {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n  {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n  {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n  {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n  {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n  {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n  {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n];\n\nconst types = [\n  'light',\n  'dark'\n];\n\nconst defaultTheme = {\n  primaryColor: 'blue-gray',\n  secondaryColor: 'red'\n};\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: blueGray,\n    secondary: red,\n    type: 'light'\n  },\n\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst styles = theme => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  }\n});\n\nconst settings = {\n  title: 'React + Material-UI + Firebase'\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: 'light',\n\n      isAuthReady: false,\n\n      isSigningUp: false,\n      isSigningIn: false,\n      isResettingPassword: false,\n      isSignedIn: false,\n      isVerifyingEmailAddress: false,\n      isSigningOut: false,\n\n      user: null,\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      resetPasswordDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  updateTheme = (palette, removeLocalStorage) => {\n    const { primaryColor, secondaryColor, type } = this.state;\n\n    if (!palette.primaryColor) {\n      palette.primaryColor = primaryColor;\n    }\n\n    if (!palette.secondaryColor) {\n      palette.secondaryColor = secondaryColor;\n    }\n\n    if (!palette.type) {\n      palette.type = type;\n    }\n\n    theme = createMuiTheme({\n      palette: {\n        primary: colors.find(color => color.id === palette.primaryColor).import,\n        secondary: colors.find(color => color.id === palette.secondaryColor).import,\n        type: palette.type\n      },\n\n      typography: {\n        useNextVariants: true\n      }\n    });\n\n    this.setState({\n      primaryColor: palette.primaryColor,\n      secondaryColor: palette.secondaryColor,\n      type: palette.type\n    }, () => {\n      if (removeLocalStorage) {\n        localStorage.removeItem('theme');\n      } else {\n        localStorage.setItem('theme', JSON.stringify({\n          primaryColor: palette.primaryColor,\n          secondaryColor: palette.secondaryColor,\n          type: palette.type\n        }));\n      }\n    });\n  };\n\n  resetTheme = () => {\n    this.updateTheme({\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: 'light'\n    }, true);\n  };\n\n  changePrimaryColor = (event) => {\n    const primaryColor = event.target.value;\n\n    this.updateTheme({\n      primaryColor\n    });\n  };\n\n  changeSecondaryColor = (event) => {\n    const secondaryColor = event.target.value;\n\n    this.updateTheme({\n      secondaryColor\n    });\n  };\n\n  changeType = (event) => {\n    const type = event.target.value;\n\n    this.updateTheme({\n      type\n    });\n  };\n\n  showSignUpDialog = () => {\n    this.setState({\n      signUpDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignUpDialog = (callback) => {\n    this.setState({\n      signUpDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignInDialog = () => {\n    this.setState({\n      signInDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignInDialog = (callback) => {\n    this.setState({\n      signInDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showResetPasswordDialog = () => {\n    this.setState({\n      resetPasswordDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeResetPasswordDialog = (callback) => {\n    this.setState({\n      resetPasswordDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSettingsDialog = () => {\n    this.setState({\n      settingsDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSettingsDialog = (callback) => {\n    this.setState({\n      settingsDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignOutDialog = () => {\n    this.setState({\n      signOutDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignOutDialog = (callback) => {\n    this.setState({\n      signOutDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Opens a snackbar. Snackbars provide brief messages about app processes through a message.\n   */\n  openSnackbar = (message) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * 2,\n        message,\n        open: true\n      }\n    });\n  };\n\n  /**\n   * Sets the `open` state of a snackbar to `false`. A direct response to the snackbar's `onClose` event.\n   * @param clearMessage Whether or not to clear the message of the snackbar.\n   */\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  signUp = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t sign up');\n      \n      return;\n    }\n\n    this.setState({\n      isSigningUp: true\n    }, () => {\n      firebase.auth().createUserWithEmailAndPassword(emailAddress, password).then((userCredential) => {\n        this.setState({\n          isSigningUp: false\n        }, () => {\n          this.closeSignUpDialog(() => {\n            const user = userCredential.user;\n            const emailAddress = user.email;\n\n            this.openSnackbar('Signed up as ' + emailAddress);\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningUp: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  signIn = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t sign in again');\n      \n      return;\n    }\n\n    this.setState({\n      isSigningIn: true\n    }, () => {\n      firebase.auth().signInWithEmailAndPassword(emailAddress, password).then((userCredential) => {\n        this.setState({\n          isSigningIn: false\n        }, () => {\n          this.closeSignInDialog(() => {\n            const user = userCredential.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.openSnackbar('Signed in as ' + (displayName || emailAddress));\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningIn: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  resetPassword = (emailAddress) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t reset their password');\n\n      return;\n    }\n\n    this.setState({\n      isResettingPassword: true\n    }, () => {\n      firebase.auth().sendPasswordResetEmail(emailAddress).then(() => {\n        this.setState({\n          isResettingPassword: false\n        }, () => {\n          this.closeResetPasswordDialog(() => {\n            this.openSnackbar('Password reset email sent');\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isResettingPassword: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  verifyEmailAddress = () => {\n    const { isSignedIn, isVerifyingEmailAddress, user } = this.state;\n\n    if (!isSignedIn || isVerifyingEmailAddress || !user) {\n      return;\n    }\n\n    user.sendEmailVerification().then(() => {\n      this.setState({\n        isVerifyingEmailAddress: true\n      }, () => {\n        this.openSnackbar('Password reset e-mail sent');\n      });\n    }).catch((error) => {\n      this.openSnackbar(error.message);\n    });\n  };\n\n  signOut = () => {\n    if (!this.state.isSignedIn) {\n      this.openSnackbar('Not signed in');\n\n      return;\n    }\n\n    this.setState({\n      isSigningOut: true\n    }, () => {\n      firebase.auth().signOut().then(() => {\n        this.setState({\n          isSigningOut: false\n        }, () => {\n          this.closeSignOutDialog(() => {\n            this.openSnackbar('Signed out');\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningOut: false\n        }, () => {\n          this.closeSignOutDialog(() => {\n            this.openSnackbar(error.message);\n          });\n        });\n      });\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    // Properties\n    const { primaryColor, secondaryColor, type, isAuthReady, isSigningUp, isSigningIn, isResettingPassword, isSignedIn, isVerifyingEmailAddress, isSigningOut, user } = this.state;\n\n    // Dialogs\n    const { signUpDialog, signInDialog, resetPasswordDialog, settingsDialog, signOutDialog } = this.state;\n\n    const { snackbar } = this.state;\n\n    if (!isAuthReady) {\n      return null;\n    }\n\n    return (\n      <Router>\n        <MuiThemeProvider theme={theme}>\n          <div style={{ minHeight: '100vh', backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa' }}>\n            <Bar\n              title={settings.title}\n\n              isSignedIn={isSignedIn}\n              isSigningUp={isSigningUp}\n              isSigningIn={isSigningIn}\n\n              onSignUpClick={this.showSignUpDialog}\n              onSignInClick={this.showSignInDialog}\n\n              onSettingsClick={this.showSettingsDialog}\n              onSignOutClick={this.showSignOutDialog}\n            />\n\n            {isSignedIn &&\n              <Switch>\n                <Route path=\"/\" exact component={HomeContent} />\n                <Route component={NotFoundContent} />\n              </Switch>\n            }\n\n            {!isSignedIn &&\n              <EmptyState\n                icon={<PersonOutlineIcon className={classes.emptyStateIcon} color=\"action\" />}\n                title=\"You are not signed in.\"\n              />\n            }\n\n            {!isSignedIn &&\n              <SignUpDialog\n                open={signUpDialog.open}\n                isSigningUp={isSigningUp}\n                signUp={this.signUp}\n                onClose={this.closeSignUpDialog}\n              />\n            }\n\n            {!isSignedIn &&\n              <SignInDialog\n                open={signInDialog.open}\n                isSigningIn={isSigningIn}\n                signIn={this.signIn}\n                onClose={this.closeSignInDialog}\n                onResetPasswordClick={this.showResetPasswordDialog}\n              />\n            }\n\n            {!isSignedIn &&\n              <ResetPasswordDialog\n                open={resetPasswordDialog.open}\n                isResettingPassword={isResettingPassword}\n                resetPassword={this.resetPassword}\n                onClose={this.closeResetPasswordDialog}\n              />\n            }\n\n            {isSignedIn &&\n              <SettingsDialog\n                open={settingsDialog.open}\n                user={user}\n                isVerifyingEmailAddress={isVerifyingEmailAddress}\n                colors={colors}\n                types={types}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n\n                onClose={this.closeSettingsDialog}\n                onVerifyEmailAddressClick={this.verifyEmailAddress}\n                onPrimaryColorChange={this.changePrimaryColor}\n                onSecondaryColorChange={this.changeSecondaryColor}\n                onTypeChange={this.changeType}\n                onResetClick={this.resetTheme}\n              />\n            }\n\n            {isSignedIn &&\n              <SignOutDialog\n                open={signOutDialog.open}\n                isSigningOut={isSigningOut}\n                signOut={this.signOut}\n                onClose={this.closeSignOutDialog}\n              />\n            }\n\n            <Snackbar\n              autoHideDuration={snackbar.autoHideDuration}\n              message={snackbar.message}\n              open={snackbar.open}\n              onClose={this.closeSnackbar}\n            />\n          </div>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    const theme = JSON.parse(localStorage.getItem('theme'));\n\n    if (theme) {\n      this.updateTheme(theme);\n    }\n\n    this.removeAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      this.setState({\n        isAuthReady: true,\n        isSignedIn: !!user,\n        user\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeAuthObserver();\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}