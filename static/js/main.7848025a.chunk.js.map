{"version":3,"sources":["colors.js","settings.js","layout/LaunchScreen/LaunchScreen.js","layout/Bar/Bar.js","layout/EmptyState/EmptyState.js","content/HomeContent/HomeContent.js","content/NotFoundContent/NotFoundContent.js","layout/AuthProviderList/AuthProviderList.js","dialogs/SignUpDialog/SignUpDialog.js","dialogs/SignInDialog/SignInDialog.js","dialogs/ResetPasswordDialog/ResetPasswordDialog.js","dialogs/WelcomeDialog/WelcomeDialog.js","layout/Profile/Profile.js","dialogs/ConfirmationDialog/ConfirmationDialog.js","tabs/settings/AccountTab/AccountTab.js","tabs/settings/AppearanceTab/AppearanceTab.js","dialogs/SettingsDialog/SettingsDialog.js","dialogs/InputDialog/InputDialog.js","App/App.js","serviceWorker.js","index.js"],"names":["colors","id","name","import","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","settings","title","theme","primaryColor","secondaryColor","type","credentials","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LaunchScreen","classes","this","props","react_default","a","createElement","CircularProgress","className","circularProgress","Component","withStyles","position","top","left","Bar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","_this$props","isPerformingAuthAction","isSignedIn","user","_this$props2","onSignUpClick","onSignInClick","AppBar","color","Toolbar","variant","Typography","style","flexGrow","Fragment","IconButton","disabled","onClick","photoURL","Avatar","alt","src","Person_default","Menu","open","Boolean","onClose","MenuItem","Button","signUpButton","marginRight","spacing","EmptyState","icon","description","button","center","transform","textAlign","HomeContent","layout_EmptyState_EmptyState","Home_default","emptyStateIcon","Fab","component","Link","to","Code_default","href","rel","target","GithubCircle_default","buttonIcon","fontSize","marginTop","NotFoundContent","FindInPage_default","AuthProviderList","onAuthProviderClick","Hidden","only","DialogActions","dialogActions","facebook","auth","FacebookAuthProvider","FacebookBox_default","google","GoogleAuthProvider","Google_default","gitHub","GithubAuthProvider","twitter","TwitterAuthProvider","Twitter_default","dialogActionsMobile","disableSpacing","concat","buttonMobile","justifyContent","marginBottom","display","backgroundColor","initialState","emailAddress","password","passwordConfirmation","errors","SignUpDialog","signUp","_this$state","validate","constraints","handleExited","handleKeyPress","key","altKey","ctrlKey","metaKey","shiftKey","handleEmailAddressChange","value","handlePasswordChange","handlePasswordConfirmationChange","handleSignUpClick","fullScreen","_this$state2","Dialog","onExited","onKeyPress","DialogTitle","DialogContent","DialogContentText","layout_AuthProviderList_AuthProviderList","TextField","autoComplete","error","fullWidth","helperText","label","margin","onChange","required","SignInDialog","signIn","handleSignInClick","onResetPasswordClick","placeholder","ResetPasswordDialog","resetPassword","preventDefault","handleResetPasswordClick","autoFocus","WelcomeDialog","onOkClick","_this$props3","onCancelClick","onVerifyClick","Profile","onChangeAvatarClick","displayName","email","profile","changeAvatarContainer","avatar","Tooltip","changeAvatar","size","Edit_default","info","width","marginLeft","height","ConfirmationDialog","contentText","cancelText","okText","disableOkButton","highlightOkButton","AccountTab","openVerifyEmailAddressDialog","verifyEmailAddressDialog","closeVerifyEmailAddressDialog","callback","verifyEmailAddress","onVerifyEmailAddressClick","isVerifyingEmailAddress","onAddAvatarClick","onAddDisplayNameClick","onChangeDisplayNameClick","onAddEmailAddressClick","isUserComplete","layout_Profile_Profile","extraTopMargin","root","dialogContentTextUserComplete","List","ListItem","ListItemIcon","Portrait_default","ListItemText","primary","ListItemSecondaryAction","secondary","Email_default","emailVerified","metadata","lastSignInTime","AccessTime_default","moment","format","creationTime","dialogs_ConfirmationDialog_ConfirmationDialog","types","AppearanceTab","onPrimaryColorChange","onSecondaryColorChange","onTypeChange","FormControl","InputLabel","Select","map","index","charAt","toUpperCase","slice","SettingsDialog","changeTab","selectedTab","changeIndex","handleResetClick","defaultTheme","setTimeout","onResetClick","hasDeviatedFromDefaultSettings","Tabs","tabs","indicatorColor","textColor","Tab","settings_AccountTab_AccountTab","settings_AppearanceTab_AppearanceTab","lib_default","onChangeIndex","InputDialog","textField","_this$props4","initializeApp","performance","useDeviceLanguage","createMuiTheme","palette","App","_isMounted","createUserWithEmailAndPassword","then","closeSignUpDialog","openWelcomeDialog","catch","reason","code","message","openSnackbar","finally","signInWithEmailAndPassword","closeSignInDialog","signInWithProvider","provider","signInWithPopup","sendPasswordResetEmail","closeResetPasswordDialog","addAvatar","addAvatarDialog","objectSpread","updateProfile","closeAddAvatarDialog","changeAvatarDialog","closeChangeAvatarDialog","addDisplayName","_this$state3","username","addDisplayNameDialog","closeAddDisplayNameDialog","changeDisplayName","_this$state4","changeDisplayNameDialog","closeChangeDisplayNameDialog","addEmailAddress","_this$state5","addEmailAddressDialog","updateEmail","closeAddEmailAddressDialog","_this$state6","sendEmailVerification","signOut","closeSignOutDialog","updateTheme","removeLocalStorage","_this$state7","find","localStorage","removeItem","setItem","JSON","stringify","resetTheme","changePrimaryColor","changeSecondaryColor","changeType","openSignUpDialog","signUpDialog","openSignInDialog","signInDialog","openResetPasswordDialog","resetPasswordDialog","welcomeDialog","closeWelcomeDialog","openSettingsDialog","settingsDialog","closeSettingsDialog","openAddAvatarDialog","openChangeAvatarDialog","openAddDisplayNameDialog","openChangeDisplayNameDialog","openAddEmailAddressDialog","openSignOutDialog","signOutDialog","handleAvatarChange","handleDisplayNameChange","snackbar","autoHideDuration","readingTime","time","closeSnackbar","clearMessage","arguments","length","undefined","isAuthReady","_this2","_this$state8","_this$state9","react_router_dom","MuiThemeProvider","minHeight","layout_LaunchScreen_LaunchScreen","layout_Bar_Bar","react_router","path","exact","render","content_HomeContent_HomeContent","dialogs_WelcomeDialog_WelcomeDialog","dialogs_SettingsDialog_SettingsDialog","dialogs_InputDialog_InputDialog","dialogs_SignUpDialog_SignUpDialog","dialogs_SignInDialog_SignInDialog","dialogs_ResetPasswordDialog_ResetPasswordDialog","Snackbar","_this3","parse","getItem","removeAuthObserver","onAuthStateChanged","window","location","hostname","match","ReactDOM","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7848025a.chunk.js","sourcesContent":["import red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nconst colors = [\n  {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n  {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n  {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n  {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n  {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n  {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n  {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n  {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n  {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n  {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n  {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n  {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n  {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n  {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n  {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n  {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n  {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n  {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n  {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n];\n\nexport default colors;","/* eslint-disable no-unused-vars */\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\n/* eslint-enable no-unused-vars */\n\nconst settings = {\n  title: 'React + Material-UI + Firebase',\n\n  theme: {\n    primaryColor: {\n      name: 'blue',\n      import: blue\n    },\n    secondaryColor: {\n      name: 'red',\n      import: red\n    },\n    type: 'light'\n  },\n\n  credentials: {\n    firebase: {\n      apiKey: 'AIzaSyDYZOrZVpXkPQD6J31mb9t2eIIxmGEJK-Q',\n      authDomain: 'react-material-ui-firebase.firebaseapp.com',\n      databaseURL: 'https://react-material-ui-firebase.firebaseio.com',\n      projectId: 'react-material-ui-firebase',\n      storageBucket: 'react-material-ui-firebase.appspot.com',\n      messagingSenderId: '552659850812',\n      appId: '1:552659850812:web:d685f74f72161d96'\n    }\n  }\n};\n\nexport default settings;","import React, {Component} from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = (theme) => ({\n  circularProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%'\n  }\n});\n\nclass LaunchScreen extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <CircularProgress className={classes.circularProgress} />\n    );\n  }\n}\n\nLaunchScreen.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LaunchScreen);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst styles = (theme) => ({\n  signUpButton: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { title, isPerformingAuthAction, isSignedIn, user } = this.props;\n\n    // Events\n    const { onSignUpClick, onSignInClick } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Typography style={{ flexGrow: 1 }} color=\"inherit\" variant=\"h6\">{title}</Typography>\n\n          {isSignedIn &&\n            <React.Fragment>\n              <IconButton color=\"inherit\" disabled={isPerformingAuthAction} onClick={this.openMenu}>\n                {user.photoURL ? <Avatar alt=\"Avatar\" src={user.photoURL} /> : <PersonIcon />}\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem disabled={isPerformingAuthAction} onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem disabled={isPerformingAuthAction} onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </React.Fragment>\n          }\n\n          {!isSignedIn &&\n            <React.Fragment>\n              <Button className={classes.signUpButton} color=\"secondary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              <Button color=\"secondary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </React.Fragment>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  \n  title: PropTypes.string.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isSignedIn: PropTypes.bool.isRequired,\n\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Bar);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n};\n\nclass EmptyState extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { icon, title, description, button } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon}\n        {title && <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>}\n        {description && <Typography color=\"textSecondary\" variant=\"subtitle1\">{description}</Typography>}\n        {button}\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  button: PropTypes.element\n};\n\nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport CodeIcon from '@material-ui/icons/Code';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nimport EmptyState from '../../layout/EmptyState/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: theme.spacing(12)\n  },\n\n  button: {\n    marginTop: theme.spacing(1)\n  },\n\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass HomeContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { isSignedIn, title } = this.props;\n\n    if (isSignedIn) {\n      return (\n        <EmptyState\n          icon={<HomeIcon className={classes.emptyStateIcon} color=\"action\" />}\n          title=\"Home\"\n          description=\"Use React + Material-UI + Firebase as the starting-point for your project\"\n          button={\n            <Fab className={classes.button} color=\"secondary\" component={Link} to=\"/some-magic\" variant=\"extended\">\n              Click For Some Magic\n            </Fab>\n          }\n        />\n      );\n    }\n\n    return (\n      <EmptyState\n        icon={<CodeIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title={title}\n        description=\"The three musketeers, all in one pack in the form of a boilerplate app\"\n        button={\n          <Fab className={classes.button} color=\"secondary\" href=\"https://github.com/Phoqe/react-material-ui-firebase\" rel=\"noopener noreferrer\" target=\"_blank\" variant=\"extended\">\n            <GitHubCircleIcon className={classes.buttonIcon} />\n            GitHub\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nHomeContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  isSignedIn: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(HomeContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport FindIcon from '@material-ui/icons/FindInPage';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../../layout/EmptyState/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: theme.spacing(12)\n  },\n\n  button: {\n    marginTop: theme.spacing(1)\n  },\n\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass NotFoundContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<FindIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Content Not Found\"\n        description=\"The requested URL was not found on this server\"\n        button={\n          <Fab className={classes.button} color=\"secondary\" component={Link} to=\"/\" variant=\"extended\">\n            <HomeIcon className={classes.buttonIcon} /> Go Home\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nNotFoundContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NotFoundContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport firebase from 'firebase/app';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\n\nconst styles = (theme) => ({\n  dialogActions: {\n    justifyContent: 'center',\n\n    marginTop: theme.spacing(2.5),\n    marginBottom: theme.spacing(1)\n  },\n\n  dialogActionsMobile: {\n    display: 'grid',\n    justifyContent: 'stretch',\n\n    marginTop: theme.spacing(2.5),\n    marginBottom: -theme.spacing(0.5)\n  },\n\n  buttonMobile: {\n    marginBottom: theme.spacing(1.5)\n  },\n\n  facebook: {\n    backgroundColor: '#3c5a99',\n    color: '#ffffff'\n  },\n\n  google: {\n    backgroundColor: '#4285f4',\n    color: '#ffffff'\n  },\n\n  gitHub: {\n    backgroundColor: '#24292e',\n    color: '#ffffff'\n  },\n\n  twitter: {\n    backgroundColor: '#1da1f2',\n    color: '#ffffff'\n  },\n\n  icon: {\n    marginRight: theme.spacing(0.5)\n  }\n});\n\nclass AuthProviderList extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    return (\n      <React.Fragment>\n        <Hidden only=\"xs\">\n          <DialogActions className={classes.dialogActions}>\n            <Button className={classes.facebook} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={classes.google} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={classes.gitHub} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n\n            <Button className={classes.twitter} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n          </DialogActions>\n        </Hidden>\n\n        <Hidden only={['sm', 'md', 'lg', 'xl']}>\n          <DialogActions className={classes.dialogActionsMobile} disableSpacing>\n            <Button className={`${classes.facebook} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={`${classes.google} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={`${classes.gitHub} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n\n            <Button className={`${classes.twitter} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n          </DialogActions>\n        </Hidden>\n      </React.Fragment>\n    );\n  }\n}\n\nAuthProviderList.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool,\n\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AuthProviderList);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport constraints from '../../constraints';\n\nimport AuthProviderList from '../../layout/AuthProviderList/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const { emailAddress, password, passwordConfirmation } = this.state;\n    \n    const errors = validate({\n      emailAddress: emailAddress,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }, {\n      emailAddress: constraints.emailAddress,\n      password: constraints.password,\n      passwordConfirmation: constraints.passwordConfirmation\n    });\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signUp(emailAddress, password, passwordConfirmation);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({ passwordConfirmation });\n  };\n\n  handleSignUpClick = () => {\n    this.signUp();\n  };\n\n  render() {\n    // Properties\n    const { fullScreen, open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick } = this.props;\n\n    const { emailAddress, password, passwordConfirmation, errors } = this.state;\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Create an account to access features that are unavailable to users who haven't signed up.\n          </DialogContentText>\n\n          <AuthProviderList isPerformingAuthAction={isPerformingAuthAction} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              label=\"E-mail address\"\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"new-password\"\n              error={!!(errors && errors.password)}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              label=\"Password\"\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              required\n              type=\"password\"\n              value={password}\n            />\n\n            <TextField\n              autoComplete=\"password\"\n              error={!!(errors && errors.passwordConfirmation)}\n              fullWidth\n              helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n              label=\"Password confirmation\"\n              margin=\"normal\"\n              onChange={this.handlePasswordConfirmationChange}\n              required\n              type=\"password\"\n              value={passwordConfirmation}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password || !passwordConfirmation) || isPerformingAuthAction} variant=\"contained\" onClick={this.handleSignUpClick}>Sign Up</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  signUp: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default SignUpDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport constraints from '../../constraints';\n\nimport AuthProviderList from '../../layout/AuthProviderList/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signIn = () => {\n    const { emailAddress, password } = this.state;\n    \n    const errors = validate({\n      emailAddress: emailAddress,\n      password: password\n    }, {\n      emailAddress: constraints.emailAddress,\n      password: constraints.password\n    });\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signIn(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handleSignInClick = () => {\n    this.signIn();\n  };\n\n  render() {\n    // Properties\n    const { fullScreen, open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick, onResetPasswordClick } = this.props;\n\n    const { emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Some features might be unavailable until you sign in.\n            While you're signed in you can manage your account.\n          </DialogContentText>\n\n          <AuthProviderList isPerformingAuthAction={isPerformingAuthAction} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"current-password\"\n              error={!!(errors && errors.password)}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              value={password}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"outlined\" onClick={onResetPasswordClick}>Reset Password</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password) || isPerformingAuthAction} variant=\"contained\" onClick={this.handleSignInClick}>Sign In</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  signIn: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired,\n  onResetPasswordClick: PropTypes.func.isRequired\n};\n\nexport default SignInDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport constraints from '../../constraints';\n\nconst initialState = {\n  emailAddress: '',\n\n  errors: null\n};\n\nclass ResetPasswordDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n    \n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.resetPassword(emailAddress);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.resetPassword();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handleResetPasswordClick = () => {\n    this.resetPassword();\n  };\n\n  render() {\n    // Properties\n    const { open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Reset your password\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            An e-mail will be sent to your e-mail address containing instructions on how to reset your password.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={!emailAddress || isPerformingAuthAction} variant=\"contained\" onClick={this.handleResetPasswordClick}>Reset Password</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nResetPasswordDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  resetPassword: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default ResetPasswordDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass WelcomeDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Dialog Properties\n    const { fullScreen, open } = this.props;\n\n    // Custom Properties\n    const { title, isPerformingAuthAction } = this.props;\n\n    // Dialog Events\n    const { onClose } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onVerifyClick } = this.props;\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Welcome to {title}!\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Complete your account by verifying your e-mail address.\n            An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onCancelClick}>Cancel</Button>\n          <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onVerifyClick}>Verify</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nWelcomeDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n\n  onCancelClick: PropTypes.func.isRequired,\n  onVerifyClick: PropTypes.func.isRequired\n};\n\nexport default WelcomeDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fab from '@material-ui/core/Fab';\nimport Typography from '@material-ui/core/Typography';\n\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = (theme) => ({\n  profile: {\n    textAlign: 'center',\n\n    marginTop: theme.spacing(1)\n  },\n\n  changeAvatarContainer: {\n    position: 'relative',\n    width: '50%',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n\n  avatar: {\n    width: theme.spacing(12),\n    height: theme.spacing(12),\n    marginRight: 'auto',\n    marginLeft: 'auto'\n  },\n\n  changeAvatar: {\n    position: 'absolute',\n    top: '-7.5%',\n    left: '60%',\n  },\n\n  info: {\n    marginTop: theme.spacing(0.5)\n  },\n\n  emailAddress: {\n    marginTop: -theme.spacing(0.5)\n  },\n});\n\nclass Profile extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onChangeAvatarClick } = this.props;\n\n    if (!user.photoURL || !user.displayName || !user.email) {\n      return null;\n    }\n\n    return (\n      <div className={classes.profile}>\n        <div className={classes.changeAvatarContainer}>\n          <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n\n          {onChangeAvatarClick &&\n            <Tooltip title=\"Change avatar\">\n              <Fab className={classes.changeAvatar} color=\"primary\" disabled={isPerformingAuthAction} size=\"small\" onClick={onChangeAvatarClick}>\n                <EditIcon />\n              </Fab>\n            </Tooltip>\n          }\n        </div>\n\n        <div className={classes.info}>\n          <Typography variant=\"h6\">{user.displayName}</Typography>\n          <Typography className={classes.emailAddress} color=\"textSecondary\" variant=\"body1\">{user.email}</Typography>\n        </div>\n      </div>\n    );\n  }\n}\n\nProfile.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool,\n\n  onChangeAvatarClick: PropTypes.func\n};\n\nexport default withStyles(styles)(Profile);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass ConfirmationDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Dialog Properties\n    const { open } = this.props;\n\n    // Custom Properties\n    const {\n      title,\n      contentText,\n      cancelText,\n      okText,\n      disableOkButton,\n      highlightOkButton\n    } = this.props;\n\n    // Dialog Events\n    const { onClose } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onOkClick } = this.props;\n\n    if (!onClose) {\n      return null;\n    }\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" disabled={disableOkButton} variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default ConfirmationDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport PortraitIcon from '@material-ui/icons/Portrait';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport Profile from '../../../layout/Profile/Profile';\n\nimport ConfirmationDialog from '../../../dialogs/ConfirmationDialog/ConfirmationDialog';\n\nconst styles = (theme) => ({\n  root: {\n    marginBottom: theme.spacing(0)\n  },\n\n  dialogContentTextUserComplete: {\n    marginTop: theme.spacing(1)\n  }\n});\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    };\n  }\n\n  openVerifyEmailAddressDialog = () => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeVerifyEmailAddressDialog = (callback) => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.closeVerifyEmailAddressDialog(() => {\n      this.props.onVerifyEmailAddressClick();\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user, isPerformingAuthAction, isVerifyingEmailAddress } = this.props;\n\n    // Events\n    const { onAddAvatarClick, onChangeAvatarClick, onAddDisplayNameClick, onChangeDisplayNameClick, onAddEmailAddressClick } = this.props;\n\n    const { verifyEmailAddressDialog } = this.state;\n\n    const isUserComplete = (user.photoURL && user.displayName && user.email);\n\n    return (\n      <React.Fragment>\n        <Profile user={user} isPerformingAuthAction={isPerformingAuthAction} extraTopMargin onChangeAvatarClick={onChangeAvatarClick} />\n\n        <DialogContentText classes={{ root: classes.root }} className={isUserComplete && classes.dialogContentTextUserComplete}>\n          Here's some info about your account. You can manage your account through the tabs.\n        </DialogContentText>\n\n        <List>\n          {!user.photoURL &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Avatar\">\n                  <PortraitIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have an avatar. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddAvatarClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.displayName &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Display name\">\n                  <PersonIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Display name\" secondary={user.displayName} />\n\n              <ListItemSecondaryAction>\n                <Tooltip title=\"Change\">\n                  <IconButton disabled={isPerformingAuthAction} onClick={onChangeDisplayNameClick}>\n                    <EditIcon />\n                  </IconButton>\n                </Tooltip>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {!user.displayName &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Display name\">\n                  <PersonIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have a display name. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddDisplayNameClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.email &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"E-mail address\">\n                  <EmailIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText\n                primary={user.email}\n                secondary={\n                  <React.Fragment>\n                    {user.emailVerified && 'Verified'}\n                    {(!user.emailVerified && isVerifyingEmailAddress) && 'Awaiting e-mail address verification'}\n                    {(!user.emailVerified && !isVerifyingEmailAddress) && 'Not verified'}\n                  </React.Fragment>\n                }\n              />\n\n              {!user.emailVerified &&\n                <ListItemSecondaryAction>\n                  {isVerifyingEmailAddress && <CircularProgress />}\n                  {!isVerifyingEmailAddress && <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={this.openVerifyEmailAddressDialog}>Verify</Button>}\n                </ListItemSecondaryAction>\n              }\n            </ListItem>\n          }\n\n          {!user.email &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"E-mail address\">\n                  <EmailIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have an e-mail address. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddEmailAddressClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.metadata.lastSignInTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Last sign-in\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Last sign-in\" secondary={moment(user.metadata.lastSignInTime).format('LLLL')} />\n            </ListItem>\n          }\n\n          {user.metadata.creationTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Signed up\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Signed up\" secondary={moment(user.metadata.creationTime).format('LLLL')} />\n            </ListItem>\n          }\n        </List>\n\n        <ConfirmationDialog\n          open={verifyEmailAddressDialog.open}\n\n          title=\"Send verification e-mail?\"\n          contentText=\"An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\"\n          okText=\"Send\"\n          disableOkButton={isPerformingAuthAction}\n          highlightOkButton\n\n          onClose={this.closeVerifyEmailAddressDialog}\n\n          onCancelClick={this.closeVerifyEmailAddressDialog}\n          onOkClick={this.verifyEmailAddress}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nAccountTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n\n  onAddAvatarClick: PropTypes.func.isRequired,\n  onChangeAvatarClick: PropTypes.func.isRequired,\n  onAddDisplayNameClick: PropTypes.func.isRequired,\n  onChangeDisplayNameClick: PropTypes.func.isRequired,\n  onAddEmailAddressClick: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = (theme) => ({\n  root: {\n    marginBottom: theme.spacing(0)\n  }\n});\n\nconst types = [\n  'light',\n  'dark'\n];\n\nclass AppearanceTab extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { colors, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    return (\n      <React.Fragment>\n        <DialogContentText classes={{ root: classes.root }}>\n          The app's primary and secondary colors, and their variants, help create a color theme that is harmonious,\n          ensures accessible text, and distinguishes UI elements and surfaces from one another.\n        </DialogContentText>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Primary color</InputLabel>\n\n          <Select onChange={onPrimaryColorChange} value={primaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Secondary color</InputLabel>\n\n          <Select onChange={onSecondaryColorChange} value={secondaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Type</InputLabel>\n\n          <Select onChange={onTypeChange} value={type}>\n            {types.map((type, index) => {\n              return (<MenuItem key={index} value={type}>{type.charAt(0).toUpperCase() + type.slice(1)}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nAppearanceTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  colors: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AppearanceTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport AccountTab from '../../tabs/settings/AccountTab/AccountTab';\nimport AppearanceTab from '../../tabs/settings/AppearanceTab/AppearanceTab';\n\nconst styles = (theme) => ({\n  tabs: {\n    marginBottom: theme.spacing(1)\n  }\n});\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedTab: 0\n    };\n  }\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onClose();\n    }\n  };\n\n  changeTab = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  changeIndex = (index) => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  handleResetClick = () => {\n    const { primaryColor, secondaryColor, type, defaultTheme } = this.props;\n\n    if (primaryColor !== defaultTheme.primaryColor || secondaryColor !== defaultTheme.secondaryColor || type !== defaultTheme.type) {\n      setTimeout(this.props.onResetClick, 137.5);\n    }\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const {\n      fullScreen,\n      open,\n      user,\n      isPerformingAuthAction,\n      isVerifyingEmailAddress,\n      colors,\n      primaryColor,\n      secondaryColor,\n      type,\n      defaultTheme\n    } = this.props;\n\n    // Events\n    const {\n      onClose,\n      onAddAvatarClick,\n      onChangeAvatarClick,\n      onAddDisplayNameClick,\n      onChangeDisplayNameClick,\n      onAddEmailAddressClick,\n      onVerifyEmailAddressClick,\n      onPrimaryColorChange,\n      onSecondaryColorChange,\n      onTypeChange\n    } = this.props;\n\n    const { selectedTab } = this.state;\n\n    let hasDeviatedFromDefaultSettings = false;\n\n    if (defaultTheme) {\n      hasDeviatedFromDefaultSettings = (\n        primaryColor !== defaultTheme.primaryColor.name ||\n        secondaryColor !== defaultTheme.secondaryColor.name ||\n        type !== defaultTheme.type\n      );\n    }\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>Settings</DialogTitle>\n\n        <Tabs className={classes.tabs} indicatorColor=\"primary\" textColor=\"primary\" onChange={this.changeTab} value={selectedTab} variant=\"fullWidth\">\n          <Tab label=\"Account\" />\n          <Tab label=\"Appearance\" />\n        </Tabs>\n\n        <DialogContent>\n          <Hidden only=\"xs\">\n            {selectedTab === 0 &&\n              <AccountTab\n                user={user}\n                isPerformingAuthAction={isPerformingAuthAction}\n                isVerifyingEmailAddress={isVerifyingEmailAddress}\n                onAddAvatarClick={onAddAvatarClick}\n                onChangeAvatarClick={onChangeAvatarClick}\n                onAddDisplayNameClick={onAddDisplayNameClick}\n                onChangeDisplayNameClick={onChangeDisplayNameClick}\n                onAddEmailAddressClick={onAddEmailAddressClick}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n            }\n\n            {selectedTab === 1 &&\n              <AppearanceTab\n                colors={colors}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            }\n          </Hidden>\n\n          <Hidden only={['sm', 'md', 'lg', 'xl']}>\n            <SwipeableViews index={selectedTab} onChangeIndex={this.changeIndex}>\n              <AccountTab\n                user={user}\n                isPerformingAuthAction={isPerformingAuthAction}\n                isVerifyingEmailAddress={isVerifyingEmailAddress}\n                onAddAvatarClick={onAddAvatarClick}\n                onChangeAvatarClick={onChangeAvatarClick}\n                onAddDisplayNameClick={onAddDisplayNameClick}\n                onChangeDisplayNameClick={onChangeDisplayNameClick}\n                onAddEmailAddressClick={onAddEmailAddressClick}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n\n              <AppearanceTab\n                colors={colors}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            </SwipeableViews>\n          </Hidden>\n        </DialogContent>\n\n        {(selectedTab === 1 && hasDeviatedFromDefaultSettings) &&\n          <React.Fragment>\n            <Hidden only=\"xs\">\n              <DialogActions>\n                <Button color=\"primary\" variant=\"contained\" onClick={this.handleResetClick}>Reset</Button>\n              </DialogActions>\n            </Hidden>\n\n            <Hidden only={['sm', 'md', 'lg', 'xl']}>\n              <DialogActions>\n                <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n                <Button color=\"primary\" variant=\"outlined\" onClick={this.handleResetClick}>Reset</Button>\n                <Button color=\"primary\" variant=\"contained\" onClick={onClose}>OK</Button>\n              </DialogActions>\n            </Hidden>\n          </React.Fragment>\n        }\n\n        {(selectedTab !== 1 || !hasDeviatedFromDefaultSettings) &&\n          <Hidden only={['sm', 'md', 'lg', 'xl']}>\n            <DialogActions>\n              <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n              <Button color=\"primary\" variant=\"contained\" onClick={onClose}>OK</Button>\n            </DialogActions>\n          </Hidden>\n        }\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n  colors: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAddAvatarClick: PropTypes.func.isRequired,\n  onChangeAvatarClick: PropTypes.func.isRequired,\n  onAddDisplayNameClick: PropTypes.func.isRequired,\n  onChangeDisplayNameClick: PropTypes.func.isRequired,\n  onAddEmailAddressClick: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired,\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired,\n  onResetClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SettingsDialog);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass InputDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Dialog Properties\n    const { fullScreen, open } = this.props;\n\n    // Custom Properties\n    const { title, contentText, textField, cancelText, okText, disableOkButton, highlightOkButton } = this.props;\n\n    // Dialog Events\n    const { onClose, onExited } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onOkClick } = this.props;\n\n    if (!onClose) {\n      return null;\n    }\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={onExited} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n\n            {textField &&\n              <form>\n                {textField}\n              </form>\n            }\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" disabled={disableOkButton} variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nInputDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  textField: PropTypes.element,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default InputDialog;","// React\nimport React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// validate.js\nimport validate from 'validate.js';\n\n// Firebase\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/performance';\n\nimport readingTime from 'reading-time';\n\n// Material-UI\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n// Custom\nimport colors from '../colors';\nimport settings from '../settings';\nimport constraints from '../constraints';\n\nimport LaunchScreen from '../layout/LaunchScreen/LaunchScreen';\n\nimport Bar from '../layout/Bar/Bar';\n\nimport HomeContent from '../content/HomeContent/HomeContent';\nimport NotFoundContent from '../content/NotFoundContent/NotFoundContent';\n\nimport SignUpDialog from '../dialogs/SignUpDialog/SignUpDialog';\nimport SignInDialog from '../dialogs/SignInDialog/SignInDialog';\nimport ResetPasswordDialog from '../dialogs/ResetPasswordDialog/ResetPasswordDialog';\nimport WelcomeDialog from '../dialogs/WelcomeDialog/WelcomeDialog';\nimport SettingsDialog from '../dialogs/SettingsDialog/SettingsDialog';\nimport InputDialog from '../dialogs/InputDialog/InputDialog';\nimport ConfirmationDialog from '../dialogs/ConfirmationDialog/ConfirmationDialog';\n\nfirebase.initializeApp(settings.credentials.firebase);\n\nconst auth = firebase.auth();\n\n// eslint-disable-next-line no-unused-vars\nconst performance = firebase.performance();\n\nauth.useDeviceLanguage();\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: settings.theme.primaryColor.import,\n    secondary: settings.theme.secondaryColor.import,\n    type: settings.theme.type\n  }\n});\n\nclass App extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      primaryColor: settings.theme.primaryColor.name,\n      secondaryColor: settings.theme.secondaryColor.name,\n      type: settings.theme.type,\n\n      isAuthReady: false,\n      isPerformingAuthAction: false,\n      isVerifyingEmailAddress: false,\n      isSignedIn: false,\n\n      user: null,\n      avatar: '',\n      displayName: '',\n      emailAddress: '',\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      resetPasswordDialog: {\n        open: false\n      },\n\n      welcomeDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      addAvatarDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      changeAvatarDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      addDisplayNameDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      changeDisplayNameDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      addEmailAddressDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  signUp = (emailAddress, password, passwordConfirmation) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password || !passwordConfirmation) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress: emailAddress,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }, {\n      emailAddress: constraints.emailAddress,\n      password: constraints.password,\n      passwordConfirmation: constraints.passwordConfirmation\n    });\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.openWelcomeDialog();\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/email-already-in-use':\n          case 'auth/invalid-email':\n          case 'auth/operation-not-allowed':\n          case 'auth/weak-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  signIn = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress: emailAddress,\n      password: password,\n    }, {\n      emailAddress: constraints.emailAddress,\n      password: constraints.password\n    });\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignInDialog(() => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/user-disabled':\n          case 'auth/user-not-found':\n          case 'auth/wrong-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  signInWithProvider = (provider) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!provider) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithPopup(provider).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.closeSignInDialog(() => {\n            const user = value.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n          });\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  resetPassword = (emailAddress) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.sendPasswordResetEmail(emailAddress).then(() => {\n        this.closeResetPasswordDialog(() => {\n          this.openSnackbar(`Password reset e-mail sent to ${emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n          case 'auth/user-not-found':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  addAvatar = () => {\n    const { user, isSignedIn, avatar } = this.state;\n\n    if (!user || !isSignedIn || !avatar) {\n      return;\n    }\n\n    if (user.photoURL) {\n      return;\n    }\n\n    const errors = validate({\n      avatar: avatar\n    }, {\n      avatar: constraints.avatar\n    });\n\n    if (errors) {\n      this.setState((state) => ({\n        addAvatarDialog: {\n          ...state.addAvatarDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ photoURL: avatar }).then(() => {\n        this.closeAddAvatarDialog(() => {\n          this.openSnackbar('Avatar added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  changeAvatar = () => {\n    const { user, isSignedIn, avatar } = this.state;\n\n    if (!user || !isSignedIn || !avatar) {\n      return;\n    }\n\n    const errors = validate({\n      avatar: avatar\n    }, {\n      avatar: constraints.avatar\n    });\n\n    if (errors) {\n      this.setState((state) => ({\n        changeAvatarDialog: {\n          ...state.changeAvatarDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    if (user.photoURL === avatar) {\n      this.openSnackbar('Avatar already being used');\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ photoURL: avatar }).then(() => {\n        this.closeChangeAvatarDialog(() => {\n          this.openSnackbar('Avatar changed');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  addDisplayName = () => {\n    const { user, isSignedIn, displayName } = this.state;\n\n    if (!user || !isSignedIn || !displayName) {\n      return;\n    }\n\n    if (user.displayName) {\n      return;\n    }\n\n    const errors = validate({\n      displayName: displayName\n    }, {\n      displayName: constraints.username\n    });\n\n    if (errors) {\n      this.setState((state) => ({\n        addDisplayNameDialog: {\n          ...state.addDisplayNameDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ displayName }).then(() => {\n        this.closeAddDisplayNameDialog(() => {\n          this.openSnackbar('Display name added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  changeDisplayName = () => {\n    const { user, isSignedIn, displayName } = this.state;\n\n    if (!user || !isSignedIn || !displayName) {\n      return;\n    }\n\n    const errors = validate({\n      displayName: displayName\n    }, {\n      displayName: constraints.username\n    });\n\n    if (errors) {\n      this.setState((state) => ({\n        changeDisplayNameDialog: {\n          ...state.changeDisplayNameDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    if (displayName === user.displayName) {\n      this.openSnackbar(`Display name is already ${displayName}`);\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ displayName }).then(() => {\n        this.closeChangeDisplayNameDialog(() => {\n          this.openSnackbar('Display name changed');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  addEmailAddress = () => {\n    const { user, isSignedIn, emailAddress } = this.state;\n\n    if (!user || !isSignedIn || !emailAddress) {\n      return;\n    }\n\n    if (user.email) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState((state) => ({\n        addEmailAddressDialog: {\n          ...state.addEmailAddressDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateEmail(emailAddress).then(() => {\n        this.closeAddEmailAddressDialog(() => {\n          this.openSnackbar('E-mail address added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  verifyEmailAddress = (callback) => {\n    const { user, isSignedIn } = this.state;\n\n    if (!user || !user.email || !isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.sendEmailVerification().then(() => {\n        this.setState({\n          isVerifyingEmailAddress: true\n        }, () => {\n          const emailAddress = user.email;\n\n          this.openSnackbar(`Verification e-mail sent to ${emailAddress}`);\n\n          if (callback && typeof callback === 'function') {\n            callback();\n          }\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  signOut = () => {\n    if (!this.state.isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signOut().then(() => {\n        this.closeSignOutDialog(() => {\n          this.openSnackbar('Signed out');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  updateTheme = (palette, removeLocalStorage, callback) => {\n    const { primaryColor, secondaryColor, type } = this.state;\n\n    if (!palette.primaryColor) {\n      palette.primaryColor = primaryColor;\n    }\n\n    if (!palette.secondaryColor) {\n      palette.secondaryColor = secondaryColor;\n    }\n\n    if (!palette.type) {\n      palette.type = type;\n    }\n\n    theme = createMuiTheme({\n      palette: {\n        primary: colors.find(color => color.id === palette.primaryColor).import,\n        secondary: colors.find(color => color.id === palette.secondaryColor).import,\n        type: palette.type\n      }\n    });\n\n    this.setState({\n      primaryColor: palette.primaryColor,\n      secondaryColor: palette.secondaryColor,\n      type: palette.type\n    }, () => {\n      if (removeLocalStorage) {\n        localStorage.removeItem('theme');\n      } else {\n        localStorage.setItem('theme', JSON.stringify({\n          primaryColor: palette.primaryColor,\n          secondaryColor: palette.secondaryColor,\n          type: palette.type\n        }));\n      }\n\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  resetTheme = () => {\n    this.updateTheme({\n      primaryColor: settings.theme.primaryColor.name,\n      secondaryColor: settings.theme.secondaryColor.name,\n      type: settings.theme.type\n    }, true, () => {\n      this.openSnackbar('Settings reset');\n    });\n  };\n\n  changePrimaryColor = (event) => {\n    const primaryColor = event.target.value;\n\n    this.updateTheme({\n      primaryColor\n    });\n  };\n\n  changeSecondaryColor = (event) => {\n    const secondaryColor = event.target.value;\n\n    this.updateTheme({\n      secondaryColor\n    });\n  };\n\n  changeType = (event) => {\n    const type = event.target.value;\n\n    this.updateTheme({\n      type\n    });\n  };\n\n  openSignUpDialog = () => {\n    this.setState({\n      signUpDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignUpDialog = (callback) => {\n    this.setState({\n      signUpDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSignInDialog = () => {\n    this.setState({\n      signInDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignInDialog = (callback) => {\n    this.setState({\n      signInDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openResetPasswordDialog = () => {\n    this.setState({\n      resetPasswordDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeResetPasswordDialog = (callback) => {\n    this.setState({\n      resetPasswordDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openWelcomeDialog = () => {\n    this.setState({\n      welcomeDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeWelcomeDialog = (callback) => {\n    this.setState({\n      welcomeDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSettingsDialog = () => {\n    this.setState({\n      settingsDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSettingsDialog = (callback) => {\n    this.setState({\n      settingsDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddAvatarDialog = () => {\n    this.setState({\n      addAvatarDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddAvatarDialog = (callback) => {\n    this.setState({\n      addAvatarDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openChangeAvatarDialog = () => {\n    this.setState({\n      changeAvatarDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeChangeAvatarDialog = (callback) => {\n    this.setState({\n      changeAvatarDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddDisplayNameDialog = () => {\n    this.setState({\n      addDisplayNameDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddDisplayNameDialog = (callback) => {\n    this.setState({\n      addDisplayNameDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openChangeDisplayNameDialog = () => {\n    this.setState({\n      changeDisplayNameDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeChangeDisplayNameDialog = (callback) => {\n    this.setState({\n      changeDisplayNameDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddEmailAddressDialog = () => {\n    this.setState({\n      addEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddEmailAddressDialog = (callback) => {\n    this.setState({\n      addEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSignOutDialog = () => {\n    this.setState({\n      signOutDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignOutDialog = (callback) => {\n    this.setState({\n      signOutDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  handleAvatarChange = (event) => {\n    const avatar = event.target.value;\n\n    this.setState({ avatar });\n  };\n\n  handleDisplayNameChange = (event) => {\n    const displayName = event.target.value;\n\n    this.setState({ displayName });\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  openSnackbar = (message) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * 2,\n        message,\n        open: true\n      }\n    });\n  };\n\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    const {\n      primaryColor,\n      secondaryColor,\n      type,\n      isAuthReady,\n      isPerformingAuthAction,\n      isVerifyingEmailAddress,\n      isSignedIn,\n      user,\n      avatar,\n      displayName,\n      emailAddress\n    } = this.state;\n\n    const {\n      signUpDialog,\n      signInDialog,\n      resetPasswordDialog,\n      welcomeDialog,\n      settingsDialog,\n      addAvatarDialog,\n      changeAvatarDialog,\n      addDisplayNameDialog,\n      changeDisplayNameDialog,\n      addEmailAddressDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    return (\n      <Router>\n        <MuiThemeProvider theme={theme}>\n          <div style={{ minHeight: '100vh', backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa' }}>\n            {!isAuthReady &&\n              <LaunchScreen />\n            }\n\n            {isAuthReady &&\n              <React.Fragment>\n                <Bar\n                  title={settings.title}\n\n                  isSignedIn={isSignedIn}\n                  isPerformingAuthAction={isPerformingAuthAction}\n\n                  user={user}\n\n                  onSignUpClick={this.openSignUpDialog}\n                  onSignInClick={this.openSignInDialog}\n\n                  onSettingsClick={this.openSettingsDialog}\n                  onSignOutClick={this.openSignOutDialog}\n                />\n\n                <Switch>\n                  <Route path=\"/\" exact render={() => (<HomeContent isSignedIn={isSignedIn} title={settings.title} />)} />\n                  <Route component={NotFoundContent} />\n                </Switch>\n\n                {isSignedIn &&\n                  <React.Fragment>\n                    <Hidden only=\"xs\">\n                      <WelcomeDialog\n                        open={welcomeDialog.open}\n\n                        title={settings.title}\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        onClose={this.closeWelcomeDialog}\n\n                        onCancelClick={this.closeWelcomeDialog}\n                        onVerifyClick={() => {\n                          this.verifyEmailAddress(() => {\n                            this.closeWelcomeDialog()\n                          })\n                        }}\n                      />\n\n                      <SettingsDialog\n                        open={settingsDialog.open}\n\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        isVerifyingEmailAddress={isVerifyingEmailAddress}\n                        colors={colors}\n                        primaryColor={primaryColor}\n                        secondaryColor={secondaryColor}\n                        type={type}\n                        defaultTheme={settings.theme}\n\n                        onClose={this.closeSettingsDialog}\n                        onAddAvatarClick={this.openAddAvatarDialog}\n                        onChangeAvatarClick={this.openChangeAvatarDialog}\n                        onAddDisplayNameClick={this.openAddDisplayNameDialog}\n                        onChangeDisplayNameClick={this.openChangeDisplayNameDialog}\n                        onAddEmailAddressClick={this.openAddEmailAddressDialog}\n                        onVerifyEmailAddressClick={this.verifyEmailAddress}\n                        onPrimaryColorChange={this.changePrimaryColor}\n                        onSecondaryColorChange={this.changeSecondaryColor}\n                        onTypeChange={this.changeType}\n                        onResetClick={this.resetTheme}\n                      />\n\n                      <InputDialog\n                        open={addAvatarDialog.open}\n\n                        title=\"Add avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(addAvatarDialog.errors && addAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(addAvatarDialog.errors && addAvatarDialog.errors.avatar) ? addAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder=\"Avatar URL\"\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddAvatarDialog}\n                        onOkClick={this.addAvatar}\n                      />\n\n                      <InputDialog\n                        open={changeAvatarDialog.open}\n\n                        title=\"Change avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar) ? changeAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder={user.photoURL}\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeAvatarDialog}\n                        onOkClick={this.changeAvatar}\n                      />\n\n                      <InputDialog\n                        open={addDisplayNameDialog.open}\n\n                        title=\"Add display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName) ? addDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder=\"Display name\"\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddDisplayNameDialog}\n                        onOkClick={this.addDisplayName}\n                      />\n\n                      <InputDialog\n                        open={changeDisplayNameDialog.open}\n\n                        title=\"Change display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName) ? changeDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder={user.displayName}\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeDisplayNameDialog}\n                        onOkClick={this.changeDisplayName}\n                      />\n\n                      <InputDialog\n                        open={addEmailAddressDialog.open}\n\n                        title=\"Add e-mail address\"\n                        contentText=\"Your e-mail address is used to identify you. It's not visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"email\"\n                            autoFocus\n                            error={!!(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress)}\n                            fullWidth\n                            helperText={(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress) ? addEmailAddressDialog.errors.emailAddress[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleEmailAddressChange}\n                            placeholder=\"E-mail address\"\n                            required\n                            type=\"email\"\n                            value={emailAddress}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!emailAddress || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddEmailAddressDialog}\n                        onExited={() => {\n                          this.setState({\n                            emailAddress: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddEmailAddressDialog}\n                        onOkClick={this.addEmailAddress}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <WelcomeDialog\n                        fullScreen\n                        open={welcomeDialog.open}\n\n                        title={settings.title}\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        onClose={this.closeWelcomeDialog}\n\n                        onCancelClick={this.closeWelcomeDialog}\n                        onVerifyClick={() => {\n                          this.verifyEmailAddress(() => {\n                            this.closeWelcomeDialog()\n                          })\n                        }}\n                      />\n\n                      <SettingsDialog\n                        fullScreen\n                        open={settingsDialog.open}\n\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        isVerifyingEmailAddress={isVerifyingEmailAddress}\n                        colors={colors}\n                        primaryColor={primaryColor}\n                        secondaryColor={secondaryColor}\n                        type={type}\n                        defaultTheme={settings.theme}\n\n                        onClose={this.closeSettingsDialog}\n                        onAddAvatarClick={this.openAddAvatarDialog}\n                        onChangeAvatarClick={this.openChangeAvatarDialog}\n                        onAddDisplayNameClick={this.openAddDisplayNameDialog}\n                        onChangeDisplayNameClick={this.openChangeDisplayNameDialog}\n                        onAddEmailAddressClick={this.openAddEmailAddressDialog}\n                        onVerifyEmailAddressClick={this.verifyEmailAddress}\n                        onPrimaryColorChange={this.changePrimaryColor}\n                        onSecondaryColorChange={this.changeSecondaryColor}\n                        onTypeChange={this.changeType}\n                        onResetClick={this.resetTheme}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={addAvatarDialog.open}\n\n                        title=\"Add avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(addAvatarDialog.errors && addAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(addAvatarDialog.errors && addAvatarDialog.errors.avatar) ? addAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder=\"Avatar URL\"\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddAvatarDialog}\n                        onOkClick={this.addAvatar}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={changeAvatarDialog.open}\n\n                        title=\"Change avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar) ? changeAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder={user.photoURL}\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeAvatarDialog}\n                        onOkClick={this.changeAvatar}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={addDisplayNameDialog.open}\n\n                        title=\"Add display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName) ? addDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder=\"Display name\"\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddDisplayNameDialog}\n                        onOkClick={this.addDisplayName}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={changeDisplayNameDialog.open}\n\n                        title=\"Change display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName) ? changeDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder={user.displayName}\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeDisplayNameDialog}\n                        onOkClick={this.changeDisplayName}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={addEmailAddressDialog.open}\n\n                        title=\"Add e-mail address\"\n                        contentText=\"Your e-mail address is used to identify you. It's not visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"email\"\n                            autoFocus\n                            error={!!(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress)}\n                            fullWidth\n                            helperText={(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress) ? addEmailAddressDialog.errors.emailAddress[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleEmailAddressChange}\n                            placeholder=\"E-mail address\"\n                            required\n                            type=\"email\"\n                            value={emailAddress}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!emailAddress || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddEmailAddressDialog}\n                        onExited={() => {\n                          this.setState({\n                            emailAddress: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddEmailAddressDialog}\n                        onOkClick={this.addEmailAddress}\n                      />\n                    </Hidden>\n\n                    <ConfirmationDialog\n                      open={signOutDialog.open}\n\n                      title=\"Sign out?\"\n                      contentText=\"While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\"\n                      okText=\"Sign Out\"\n                      disableOkButton={isPerformingAuthAction}\n                      highlightOkButton\n\n                      onClose={this.closeSignOutDialog}\n                      onCancelClick={this.closeSignOutDialog}\n                      onOkClick={this.signOut}\n                    />\n                  </React.Fragment>\n                }\n\n                {!isSignedIn &&\n                  <React.Fragment>\n                    <Hidden only=\"xs\">\n                      <SignUpDialog\n                        open={signUpDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        signUp={this.signUp}\n\n                        onClose={this.closeSignUpDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                      />\n\n                      <SignInDialog\n                        open={signInDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        signIn={this.signIn}\n\n                        onClose={this.closeSignInDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                        onResetPasswordClick={this.openResetPasswordDialog}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <SignUpDialog\n                        fullScreen\n                        open={signUpDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        signUp={this.signUp}\n\n                        onClose={this.closeSignUpDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                      />\n\n                      <SignInDialog\n                        fullScreen\n                        open={signInDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        signIn={this.signIn}\n\n                        onClose={this.closeSignInDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                        onResetPasswordClick={this.openResetPasswordDialog}\n                      />\n                    </Hidden>\n\n                    <ResetPasswordDialog\n                      open={resetPasswordDialog.open}\n\n                      isPerformingAuthAction={isPerformingAuthAction}\n\n                      resetPassword={this.resetPassword}\n\n                      onClose={this.closeResetPasswordDialog}\n                    />\n                  </React.Fragment>\n                }\n\n                <Snackbar\n                  autoHideDuration={snackbar.autoHideDuration}\n                  message={snackbar.message}\n                  open={snackbar.open}\n                  onClose={this.closeSnackbar}\n                />\n              </React.Fragment>\n            }\n          </div>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    const theme = JSON.parse(localStorage.getItem('theme'));\n\n    if (theme) {\n      this.updateTheme(theme);\n    }\n\n    this.removeAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      if (this._isMounted) {\n        this.setState({\n          isAuthReady: true,\n          isSignedIn: !!user,\n          user\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n\n    this.removeAuthObserver();\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}