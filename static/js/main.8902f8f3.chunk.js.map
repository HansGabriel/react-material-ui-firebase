{"version":3,"sources":["layout/Bar.js","layout/EmptyState.js","dialogs/SignUpDialog.js","dialogs/SignInDialog.js","dialogs/ResetPasswordDialog.js","dialogs/ConfirmationDialog.js","tabs/settings/AccountTab.js","tabs/settings/AppearanceTab.js","dialogs/SettingsDialog.js","dialogs/SignOutDialog.js","App.js","serviceWorker.js","index.js"],"names":["Bar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","_this$props","classes","title","isSignedIn","isSigningUp","isSigningIn","_this$props2","onSignUpClick","onSignInClick","react_default","a","createElement","AppBar_default","color","position","Toolbar_default","variant","Typography_default","style","flexGrow","Fragment","IconButton_default","onClick","Person_default","Menu_default","open","Boolean","onClose","MenuItem_default","Button_default","className","signUpButton","disabled","Component","withStyles","theme","marginRight","spacing","unit","EmptyState","icon","text","center","top","left","transform","textAlign","initialState","emailAddress","password","passwordConfirmation","errors","SignUpDialog","signUp","_this$state","validate","email","presence","allowEmpty","length","minimum","equality","handleExited","handleKeyPress","key","altKey","ctrlKey","metaKey","shiftKey","handleEmailAddressChange","target","value","handlePasswordChange","handlePasswordConfirmationChange","handleSignUpClick","_this$state2","Dialog_default","onExited","onKeyPress","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","autoComplete","autoFocus","error","fullWidth","helperText","label","margin","onChange","required","type","DialogActions_default","SignInDialog","signIn","handleSignInClick","onResetPasswordClick","placeholder","ResetPasswordDialog","resetPassword","preventDefault","handleResetPasswordClick","isResettingPassword","ConfirmationDialog","onOkClick","contentText","cancelText","okText","highlightOkButton","onCancelClick","AccountTab","openVerifyEmailAddressDialog","verifyEmailAddressDialog","closeVerifyEmailAddressDialog","callback","verifyEmailAddress","onVerifyEmailAddressClick","user","isVerifyingEmailAddress","dialogContentText","List_default","ListItem_default","ListItemIcon_default","Tooltip_default","Email_default","ListItemText_default","primary","secondary","emailVerified","ListItemSecondaryAction_default","Check_default","AccessTime_default","metadata","lastSignInTime","creationTime","dialogs_ConfirmationDialog","marginTop","concat","AppearanceTab","colors","types","primaryColor","secondaryColor","onPrimaryColorChange","onSecondaryColorChange","onTypeChange","FormControl_default","InputLabel_default","Select_default","map","id","name","index","charAt","toUpperCase","slice","SettingsDialog","changeTab","selectedTab","onResetClick","DynamicTab","Tab","Tabs_default","settings_AccountTab","settings_AppearanceTab","setTimeout","SignOutDialog","signOut","isSigningOut","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","import","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","defaultTheme","createMuiTheme","palette","typography","useNextVariants","settings","App","updateTheme","removeLocalStorage","find","localStorage","removeItem","setItem","JSON","stringify","resetTheme","changePrimaryColor","changeSecondaryColor","changeType","showSignUpDialog","signUpDialog","closeSignUpDialog","showSignInDialog","signInDialog","closeSignInDialog","showResetPasswordDialog","resetPasswordDialog","closeResetPasswordDialog","showSettingsDialog","settingsDialog","closeSettingsDialog","showSignOutDialog","signOutDialog","closeSignOutDialog","openSnackbar","message","snackbar","autoHideDuration","readingTime","time","closeSnackbar","clearMessage","arguments","undefined","auth","createUserWithEmailAndPassword","then","userCredential","catch","signInWithEmailAndPassword","displayName","sendPasswordResetEmail","sendEmailVerification","isAuthReady","_this$state3","_this$state4","styles","minHeight","backgroundColor","layout_Bar","layout_EmptyState","emptyStateIcon","PersonOutline_default","dialogs_SignUpDialog","dialogs_SignInDialog","dialogs_ResetPasswordDialog","dialogs_SettingsDialog","dialogs_SignOutDialog","Snackbar_default","_this2","parse","getItem","removeAuthObserver","onAuthStateChanged","fontSize","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8902f8f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst styles = (theme) => ({\n  signUpButton: {\n    marginRight: theme.spacing.unit\n  }\n});\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Properties\n    const { classes, title, isSignedIn, isSigningUp, isSigningIn } = this.props;\n\n    // Events\n    const { onSignUpClick, onSignInClick } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Typography style={{ flexGrow: 1 }} color=\"inherit\" variant=\"h6\">{title}</Typography>\n\n          {isSignedIn &&\n            <React.Fragment>\n              <IconButton color=\"inherit\" onClick={this.openMenu}>\n                <PersonIcon />\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </React.Fragment>\n          }\n\n          {!isSignedIn &&\n            <React.Fragment>\n              <Button className={classes.signUpButton} color=\"secondary\" disabled={isSigningUp} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              <Button color=\"secondary\" disabled={isSigningIn} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </React.Fragment>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(styles)(Bar);","import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n});\n\nclass EmptyState extends Component {\n  render() {\n    const { classes, icon, text } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon}\n        <Typography color=\"textSecondary\" variant=\"h4\">{text}</Typography>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      },\n      \n      password: {\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      },\n\n      passwordConfirmation: {\n        equality: 'password',\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress, password, passwordConfirmation } = this.state;\n    \n    const errors = validate({ emailAddress, password, passwordConfirmation }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signUp(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({ passwordConfirmation });\n  };\n\n  handleSignUpClick = () => {\n    this.signUp();\n  };\n\n  render() {\n    // Properties\n    const { open, isSigningUp } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, password, passwordConfirmation, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Create an account to access features that are unavailable to users who haven't signed up.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              label=\"E-mail address\"\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"new-password\"\n              error={(errors && errors.password) ? true : false}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              label=\"Password\"\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              required\n              type=\"password\"\n              value={password}\n            />\n\n            <TextField\n              autoComplete=\"password\"\n              error={(errors && errors.passwordConfirmation) ? true : false}\n              fullWidth\n              helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n              label=\"Password confirmation\"\n              margin=\"normal\"\n              onChange={this.handlePasswordConfirmationChange}\n              required\n              type=\"password\"\n              value={passwordConfirmation}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password || !passwordConfirmation) || isSigningUp} variant=\"contained\" onClick={this.handleSignUpClick}>Sign Up</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default SignUpDialog;","import React, { Component } from 'react';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signIn = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      },\n      \n      password: {\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress, password } = this.state;\n    \n    const errors = validate({ emailAddress, password }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signIn(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handleSignInClick = () => {\n    this.signIn();\n  };\n\n  render() {\n    // Properties\n    const { open, isSigningIn } = this.props;\n\n    // Events\n    const { onClose, onResetPasswordClick } = this.props;\n\n    const { emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Some features might be unavailable until you sign in.\n            While you're signed in you can manage your account.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"current-password\"\n              error={(errors && errors.password) ? true : false}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              value={password}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={onResetPasswordClick}>Reset Password</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password) || isSigningIn} variant=\"contained\" onClick={this.handleSignInClick}>Sign In</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default SignInDialog;","import React, { Component } from 'react';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n\n  errors: null\n};\n\nclass ResetPasswordDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress } = this.state;\n    \n    const errors = validate({ emailAddress }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.resetPassword(emailAddress);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.resetPassword();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handleResetPasswordClick = () => {\n    this.resetPassword();\n  };\n\n  render() {\n    // Properties\n    const { open, isResettingPassword } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Reset your password\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            An e-mail will be sent to your e-mail address containing instructions on how to reset your password.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={!emailAddress || isResettingPassword} variant=\"contained\" onClick={this.handleResetPasswordClick}>Reset Password</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default ResetPasswordDialog;","import React, { Component } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\n/**\n * Confirmation dialogs give users the ability to provide final confirmation of a choice\n * before committing to it, so they have a chance to change their minds if necessary.\n * If the user confirms a choice, it’s carried out. Otherwise, the user can dismiss the\n * dialog. For example, users can listen to multiple ringtones but only make a final\n * selection upon touching “OK.”\n */\nclass ConfirmationDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    /**\n     * Properties\n     */\n\n    // Dialog\n    const { open } = this.props;\n\n    // Custom\n    const { title, contentText, cancelText, okText, highlightOkButton } = this.props;\n\n    /**\n     * Events\n     */\n\n    // Dialog\n    const { onClose } = this.props;\n\n    // Custom\n    const { onCancelClick, onOkClick } = this.props;\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nexport default ConfirmationDialog;","import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport EmailIcon from '@material-ui/icons/Email';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport ConfirmationDialog from '../../dialogs/ConfirmationDialog';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    };\n  }\n\n  openVerifyEmailAddressDialog = () => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeVerifyEmailAddressDialog = (callback) => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.closeVerifyEmailAddressDialog(() => {\n      this.props.onVerifyEmailAddressClick();\n    });\n  };\n\n  render() {\n    const { classes, user, isVerifyingEmailAddress } = this.props;\n    const { verifyEmailAddressDialog } = this.state;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          This is a summary of your account.\n          You can manage your account throughout all the settings.\n        </DialogContentText>\n\n        <List>\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"E-mail address\">\n                <EmailIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary={user.email} secondary={user.emailVerified ? 'Verified' : 'Not verified'} />\n\n            {(!user.emailVerified && !isVerifyingEmailAddress) &&\n              <ListItemSecondaryAction>\n                <Tooltip title=\"Verify e-mail address\">\n                  <IconButton onClick={this.openVerifyEmailAddressDialog}>\n                    <CheckIcon />\n                  </IconButton>\n                </Tooltip>\n              </ListItemSecondaryAction>\n            }\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"Last sign-in time\">\n                <AccessTimeIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary={user.metadata.lastSignInTime} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"Creation time\">\n                <AccessTimeIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary={user.metadata.creationTime} />\n          </ListItem>\n        </List>\n\n        <ConfirmationDialog\n          open={verifyEmailAddressDialog.open}\n\n          title=\"Verify e-mail address?\"\n          contentText=\"An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\"\n          okText=\"Verify\"\n          highlightOkButton\n\n          onClose={this.closeVerifyEmailAddressDialog}\n\n          onCancelClick={this.closeVerifyEmailAddressDialog}\n          onOkClick={this.verifyEmailAddress}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(AccountTab);","import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AppearanceTab extends Component {\n  render() {\n    // Properties\n    const { classes, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          Customize the look and feel to your own liking.\n          You can reset all changes you've made by clicking Reset.\n        </DialogContentText>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Primary color</InputLabel>\n\n          <Select onChange={onPrimaryColorChange} value={primaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Secondary color</InputLabel>\n\n          <Select onChange={onSecondaryColorChange} value={secondaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Type</InputLabel>\n\n          <Select onChange={onTypeChange} value={type}>\n            {types.map((type, index) => {\n              return (<MenuItem key={index} value={type}>{type.charAt(0).toUpperCase() + type.slice(1)}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(AppearanceTab);","import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\n\nimport AccountTab from '../tabs/settings/AccountTab';\nimport AppearanceTab from '../tabs/settings/AppearanceTab';\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedTab: 0\n    };\n  }\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onClose();\n    }\n  };\n\n  changeTab = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  render() {\n    // Properties\n    const { open, user, isVerifyingEmailAddress, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onClose, onVerifyEmailAddressClick, onPrimaryColorChange, onSecondaryColorChange, onTypeChange, onResetClick } = this.props;\n\n    const { selectedTab } = this.state;\n\n    const DynamicTab = withStyles({\n      label: {\n        color: type === 'light' ? '#000000' : '#ffffff'\n      }\n    })(Tab);\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>Settings</DialogTitle>\n\n        <Tabs onChange={this.changeTab} value={selectedTab} variant=\"fullWidth\">\n          <DynamicTab label=\"Account\" />\n          <DynamicTab label=\"Appearance\" />\n        </Tabs>\n\n        <DialogContent>\n          {selectedTab === 0 &&\n            <AccountTab user={user} isVerifyingEmailAddress={isVerifyingEmailAddress} onVerifyEmailAddressClick={onVerifyEmailAddressClick} />\n          }\n\n          {selectedTab === 1 &&\n            <AppearanceTab\n              colors={colors}\n              types={types}\n              primaryColor={primaryColor}\n              secondaryColor={secondaryColor}\n              type={type}\n              onPrimaryColorChange={onPrimaryColorChange}\n              onSecondaryColorChange={onSecondaryColorChange}\n              onTypeChange={onTypeChange}\n            />\n          }\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={() => { setTimeout(onResetClick, 137.5) }}>Reset</Button>\n          <Button color=\"primary\" variant=\"contained\" onClick={onClose}>OK</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default SettingsDialog;","import React, { Component } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass SignOutDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.signOut();\n    }\n  };\n\n  render() {\n    // Properties\n    const { open, isSigningOut } = this.props;\n\n    // Methods\n    const { signOut } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign out?\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={isSigningOut} variant=\"contained\" onClick={signOut}>Sign Out</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default SignOutDialog;","import React, { Component } from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport readingTime from 'reading-time';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nimport { createMuiTheme, withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport Bar from './layout/Bar';\nimport EmptyState from './layout/EmptyState';\n\nimport SignUpDialog from './dialogs/SignUpDialog';\nimport SignInDialog from './dialogs/SignInDialog';\nimport ResetPasswordDialog from './dialogs/ResetPasswordDialog';\nimport SettingsDialog from './dialogs/SettingsDialog';\nimport SignOutDialog from './dialogs/SignOutDialog';\n\nconst config = {\n  apiKey: 'AIzaSyDYZOrZVpXkPQD6J31mb9t2eIIxmGEJK-Q',\n  authDomain: 'react-material-ui-firebase.firebaseapp.com',\n  databaseURL: 'https://react-material-ui-firebase.firebaseio.com',\n  projectId: 'react-material-ui-firebase',\n  storageBucket: 'react-material-ui-firebase.appspot.com',\n  messagingSenderId: '552659850812'\n};\n\nfirebase.initializeApp(config);\n\nconst colors = [\n  {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n  {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n  {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n  {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n  {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n  {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n  {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n  {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n  {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n  {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n  {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n  {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n  {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n  {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n  {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n  {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n  {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n  {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n  {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n];\n\nconst types = [\n  'light',\n  'dark'\n];\n\nconst defaultTheme = {\n  primaryColor: 'blue-gray',\n  secondaryColor: 'red'\n};\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: blueGray,\n    secondary: red,\n    type: 'light'\n  },\n\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst styles = theme => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  }\n});\n\nconst settings = {\n  title: 'React + Material-UI + Firebase'\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: 'light',\n\n      isAuthReady: false,\n\n      isSigningUp: false,\n      isSigningIn: false,\n      isResettingPassword: false,\n      isSignedIn: false,\n      isVerifyingEmailAddress: false,\n      isSigningOut: false,\n\n      user: null,\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      resetPasswordDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  updateTheme = (palette, removeLocalStorage) => {\n    const { primaryColor, secondaryColor, type } = this.state;\n\n    if (!palette.primaryColor) {\n      palette.primaryColor = primaryColor;\n    }\n\n    if (!palette.secondaryColor) {\n      palette.secondaryColor = secondaryColor;\n    }\n\n    if (!palette.type) {\n      palette.type = type;\n    }\n\n    theme = createMuiTheme({\n      palette: {\n        primary: colors.find(color => color.id === palette.primaryColor).import,\n        secondary: colors.find(color => color.id === palette.secondaryColor).import,\n        type: palette.type\n      },\n\n      typography: {\n        useNextVariants: true\n      }\n    });\n\n    this.setState({\n      primaryColor: palette.primaryColor,\n      secondaryColor: palette.secondaryColor,\n      type: palette.type\n    }, () => {\n      if (removeLocalStorage) {\n        localStorage.removeItem('theme');\n      } else {\n        localStorage.setItem('theme', JSON.stringify({\n          primaryColor: palette.primaryColor,\n          secondaryColor: palette.secondaryColor,\n          type: palette.type\n        }));\n      }\n    });\n  };\n\n  resetTheme = () => {\n    this.updateTheme({\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: 'light'\n    }, true);\n  };\n\n  changePrimaryColor = (event) => {\n    const primaryColor = event.target.value;\n\n    this.updateTheme({\n      primaryColor\n    });\n  };\n\n  changeSecondaryColor = (event) => {\n    const secondaryColor = event.target.value;\n\n    this.updateTheme({\n      secondaryColor\n    });\n  };\n\n  changeType = (event) => {\n    const type = event.target.value;\n\n    this.updateTheme({\n      type\n    });\n  };\n\n  showSignUpDialog = () => {\n    this.setState({\n      signUpDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignUpDialog = (callback) => {\n    this.setState({\n      signUpDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignInDialog = () => {\n    this.setState({\n      signInDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignInDialog = (callback) => {\n    this.setState({\n      signInDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showResetPasswordDialog = () => {\n    this.setState({\n      resetPasswordDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeResetPasswordDialog = (callback) => {\n    this.setState({\n      resetPasswordDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSettingsDialog = () => {\n    this.setState({\n      settingsDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSettingsDialog = (callback) => {\n    this.setState({\n      settingsDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignOutDialog = () => {\n    this.setState({\n      signOutDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignOutDialog = (callback) => {\n    this.setState({\n      signOutDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Opens a snackbar. Snackbars provide brief messages about app processes through a message.\n   */\n  openSnackbar = (message) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * 2,\n        message,\n        open: true\n      }\n    });\n  };\n\n  /**\n   * Sets the `open` state of a snackbar to `false`. A direct response to the snackbar's `onClose` event.\n   * @param clearMessage Whether or not to clear the message of the snackbar.\n   */\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  signUp = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t sign up');\n      \n      return;\n    }\n\n    this.setState({\n      isSigningUp: true\n    }, () => {\n      firebase.auth().createUserWithEmailAndPassword(emailAddress, password).then((userCredential) => {\n        this.setState({\n          isSigningUp: false\n        }, () => {\n          this.closeSignUpDialog(() => {\n          const user = userCredential.user;\n          const emailAddress = user.email;\n    \n          this.openSnackbar('Signed up as ' + emailAddress);\n        });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningUp: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  signIn = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t sign in again');\n      \n      return;\n    }\n\n    this.setState({\n      isSigningIn: true\n    }, () => {\n      firebase.auth().signInWithEmailAndPassword(emailAddress, password).then((userCredential) => {\n        this.setState({\n          isSigningIn: false\n        }, () => {\n          this.closeSignInDialog(() => {\n            const user = userCredential.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.openSnackbar('Signed in as ' + (displayName || emailAddress));\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningIn: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  resetPassword = (emailAddress) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t reset their password');\n\n      return;\n    }\n\n    this.setState({\n      isResettingPassword: true\n    }, () => {\n      firebase.auth().sendPasswordResetEmail(emailAddress).then(() => {\n        this.setState({\n          isResettingPassword: false\n        }, () => {\n          this.closeResetPasswordDialog(() => {\n            this.openSnackbar('Password reset email sent');\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isResettingPassword: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  verifyEmailAddress = () => {\n    const { isSignedIn, isVerifyingEmailAddress, user } = this.state;\n\n    if (!isSignedIn || isVerifyingEmailAddress || !user) {\n      return;\n    }\n\n    user.sendEmailVerification().then(() => {\n      this.setState({\n        isVerifyingEmailAddress: true\n      }, () => {\n        this.openSnackbar('Password reset e-mail sent');\n      });\n    }).catch((error) => {\n      this.openSnackbar(error.message);\n    });\n  };\n\n  signOut = () => {\n    if (!this.state.isSignedIn) {\n      this.openSnackbar('Not signed in');\n\n      return;\n    }\n\n    this.setState({\n      isSigningOut: true\n    }, () => {\n      firebase.auth().signOut().then(() => {\n        this.setState({\n          isSigningOut: false\n        }, () => {\n          this.closeSignOutDialog(() => {\n            this.openSnackbar('Signed out');\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningOut: false\n        }, () => {\n          this.closeSignOutDialog(() => {\n            this.openSnackbar(error.message);\n          });\n        });\n      });\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    // Properties\n    const { primaryColor, secondaryColor, type, isAuthReady, isSigningUp, isSigningIn, isResettingPassword, isSignedIn, isVerifyingEmailAddress, isSigningOut, user } = this.state;\n\n    // Dialogs\n    const { signUpDialog, signInDialog, resetPasswordDialog, settingsDialog, signOutDialog } = this.state;\n\n    const { snackbar } = this.state;\n\n    if (!isAuthReady) {\n      return null;\n    }\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div style={{ minHeight: '100vh', backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa' }}>\n          <Bar\n            title={settings.title}\n\n            isSignedIn={isSignedIn}\n            isSigningUp={isSigningUp}\n            isSigningIn={isSigningIn}\n\n            onSignUpClick={this.showSignUpDialog}\n            onSignInClick={this.showSignInDialog}\n\n            onSettingsClick={this.showSettingsDialog}\n            onSignOutClick={this.showSignOutDialog}\n          />\n\n          {isSignedIn &&\n            <EmptyState\n              icon={<PersonIcon className={classes.emptyStateIcon} color=\"action\" />}\n              text=\"You are signed in.\"\n            />\n          }\n\n          {!isSignedIn &&\n            <EmptyState\n              icon={<PersonOutlineIcon className={classes.emptyStateIcon} color=\"action\" />}\n              text=\"You are not signed in.\"\n            />\n          }\n\n          {!isSignedIn &&\n            <SignUpDialog\n              open={signUpDialog.open}\n              isSigningUp={isSigningUp}\n              signUp={this.signUp}\n              onClose={this.closeSignUpDialog}\n            />\n          }\n\n          {!isSignedIn &&\n            <SignInDialog\n              open={signInDialog.open}\n              isSigningIn={isSigningIn}\n              signIn={this.signIn}\n              onClose={this.closeSignInDialog}\n              onResetPasswordClick={this.showResetPasswordDialog}\n            />\n          }\n\n          {!isSignedIn &&\n            <ResetPasswordDialog\n              open={resetPasswordDialog.open}\n              isResettingPassword={isResettingPassword}\n              resetPassword={this.resetPassword}\n              onClose={this.closeResetPasswordDialog}\n            />\n          }\n\n          {isSignedIn &&\n            <SettingsDialog\n              open={settingsDialog.open}\n              user={user}\n              isVerifyingEmailAddress={isVerifyingEmailAddress}\n              colors={colors}\n              types={types}\n              primaryColor={primaryColor}\n              secondaryColor={secondaryColor}\n              type={type}\n\n              onClose={this.closeSettingsDialog}\n              onVerifyEmailAddressClick={this.verifyEmailAddress}\n              onPrimaryColorChange={this.changePrimaryColor}\n              onSecondaryColorChange={this.changeSecondaryColor}\n              onTypeChange={this.changeType}\n              onResetClick={this.resetTheme}\n            />\n          }\n\n          {isSignedIn &&\n            <SignOutDialog\n              open={signOutDialog.open}\n              isSigningOut={isSigningOut}\n              signOut={this.signOut}\n              onClose={this.closeSignOutDialog}\n            />\n          }\n\n          <Snackbar\n            autoHideDuration={snackbar.autoHideDuration}\n            message={snackbar.message}\n            open={snackbar.open}\n            onClose={this.closeSnackbar}\n          />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n\n  componentDidMount() {\n    const theme = JSON.parse(localStorage.getItem('theme'));\n\n    if (theme) {\n      this.updateTheme(theme);\n    }\n\n    this.removeAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      this.setState({\n        isAuthReady: true,\n        isSignedIn: !!user,\n        user\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeAuthObserver();\n  }\n}\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}