{"version":3,"sources":["layout/Bar.js","layout/EmptyState.js","content/HomeContent.js","content/NotFoundContent.js","layout/AuthProviderList.js","dialogs/SignUpDialog.js","dialogs/SignInDialog.js","dialogs/ResetPasswordDialog.js","dialogs/ConfirmationDialog.js","tabs/settings/AccountTab.js","tabs/settings/AppearanceTab.js","dialogs/SettingsDialog.js","App.js","serviceWorker.js","index.js"],"names":["Bar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","_this$props","classes","name","isPerformingAuthAction","isSignedIn","user","_this$props2","onSignUpClick","onSignInClick","react_default","a","createElement","AppBar_default","color","position","Toolbar_default","variant","Typography_default","style","flexGrow","Fragment","IconButton_default","onClick","photoURL","Avatar_default","alt","src","Person_default","Menu_default","open","Boolean","onClose","MenuItem_default","Button_default","className","signUpButton","disabled","Component","withStyles","theme","marginRight","spacing","unit","EmptyState","icon","title","description","button","center","top","left","transform","textAlign","HomeContent","layout_EmptyState","Home_default","emptyStateIcon","Fab_default","component","Link","to","fontSize","concat","marginTop","NotFoundContent","FindInPage_default","buttonIcon","AuthProviderList","onAuthProviderClick","Hidden_default","only","DialogActions_default","dialogActions","google","firebase","auth","GoogleAuthProvider","Google_default","facebook","FacebookAuthProvider","FacebookBox_default","twitter","TwitterAuthProvider","Twitter_default","gitHub","GithubAuthProvider","GithubCircle_default","dialogActionsMobile","buttonMobile","justifyContent","marginBottom","display","backgroundColor","initialState","emailAddress","password","passwordConfirmation","errors","SignUpDialog","signUp","_this$state","validate","constraints","handleExited","handleKeyPress","key","altKey","ctrlKey","metaKey","shiftKey","handleEmailAddressChange","target","value","handlePasswordChange","handlePasswordConfirmationChange","handleSignUpClick","fullScreen","_this$state2","Dialog_default","onExited","onKeyPress","DialogTitle_default","DialogContent_default","DialogContentText_default","layout_AuthProviderList","TextField_default","autoComplete","error","fullWidth","helperText","label","margin","onChange","required","type","SignInDialog","signIn","handleSignInClick","onResetPasswordClick","placeholder","ResetPasswordDialog","resetPassword","preventDefault","handleResetPasswordClick","autoFocus","ConfirmationDialog","onOkClick","contentText","cancelText","okText","disableOkButton","highlightOkButton","onCancelClick","AccountTab","openVerifyEmailAddressDialog","verifyEmailAddressDialog","closeVerifyEmailAddressDialog","callback","verifyEmailAddress","onVerifyEmailAddressClick","dialogContentText","List_default","email","ListItem_default","ListItemIcon_default","Tooltip_default","Email_default","ListItemText_default","primary","secondary","emailVerified","ListItemSecondaryAction_default","metadata","lastSignInTime","AccessTime_default","moment","format","creationTime","dialogs_ConfirmationDialog","AppearanceTab","colors","types","primaryColor","secondaryColor","onPrimaryColorChange","onSecondaryColorChange","onTypeChange","FormControl_default","InputLabel_default","Select_default","map","id","index","charAt","toUpperCase","slice","SettingsDialog","changeTab","selectedTab","changeIndex","handleResetClick","defaultTheme","setTimeout","onResetClick","_this$props3","Tabs_default","indicatorColor","textColor","Tab_default","settings_AccountTab","settings_AppearanceTab","lib_default","onChangeIndex","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","import","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","createMuiTheme","palette","typography","useNextVariants","settings","presence","allowEmpty","length","minimum","equality","App","createUserWithEmailAndPassword","then","closeSignUpDialog","openSnackbar","catch","reason","code","message","finally","signInWithEmailAndPassword","closeSignInDialog","displayName","signInWithProvider","provider","signInWithPopup","sendPasswordResetEmail","closeResetPasswordDialog","sendEmailVerification","signOut","closeSignOutDialog","updateTheme","removeLocalStorage","find","localStorage","removeItem","setItem","JSON","stringify","resetTheme","changePrimaryColor","changeSecondaryColor","changeType","showSignUpDialog","signUpDialog","showSignInDialog","signInDialog","showResetPasswordDialog","resetPasswordDialog","showSettingsDialog","settingsDialog","closeSettingsDialog","showSignOutDialog","signOutDialog","snackbar","autoHideDuration","readingTime","time","closeSnackbar","clearMessage","arguments","undefined","isAuthReady","_this$state3","_this$state4","react_router_dom","basename","styles","minHeight","layout_Bar","react_router","path","exact","dialogs_SettingsDialog","Code_default","href","rel","dialogs_SignUpDialog","dialogs_SignInDialog","dialogs_ResetPasswordDialog","Snackbar_default","_this2","parse","getItem","removeAuthObserver","onAuthStateChanged","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30407e29.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst styles = (theme) => ({\n  signUpButton: {\n    marginRight: theme.spacing.unit\n  }\n});\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Properties\n    const { classes, name, isPerformingAuthAction, isSignedIn, user } = this.props;\n\n    // Events\n    const { onSignUpClick, onSignInClick } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Typography style={{ flexGrow: 1 }} color=\"inherit\" variant=\"h6\">{name}</Typography>\n\n          {isSignedIn &&\n            <React.Fragment>\n              <IconButton color=\"inherit\" onClick={this.openMenu}>\n                {user.photoURL ? <Avatar alt=\"Avatar\" src={user.photoURL} /> : <PersonIcon />}\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </React.Fragment>\n          }\n\n          {!isSignedIn &&\n            <React.Fragment>\n              <Button className={classes.signUpButton} color=\"secondary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              <Button color=\"secondary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </React.Fragment>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isSignedIn: PropTypes.bool.isRequired,\n\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Bar);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n};\n\nclass EmptyState extends Component {\n  render() {\n    const { classes, icon, title, description, button } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon}\n        {title && <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>}\n        {description && <Typography color=\"textSecondary\" variant=\"subtitle1\">{description}</Typography>}\n        {button}\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  classes: PropTypes.object.isRequired,\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  button: PropTypes.element\n};\n\nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  }\n});\n\nclass HomeContent extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<HomeIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Home\"\n        description=\"Use React + Material-UI + Firebase as the starting-point for your project.\"\n        button={\n          <Fab className={classes.button} color=\"primary\" component={Link} to=\"/something-crazy\" variant=\"extended\">\n            Do Something Crazy\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nHomeContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(HomeContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport FindIcon from '@material-ui/icons/FindInPage';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  },\n\n  buttonIcon: {\n    marginRight: `${theme.spacing.unit}px`\n  }\n});\n\nclass NotFoundContent extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<FindIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Content Not Found\"\n        description=\"The requested URL was not found on this server.\"\n        button={\n          <Fab className={classes.button} color=\"primary\" component={Link} to=\"/\" variant=\"extended\">\n            <HomeIcon className={classes.buttonIcon} /> Go Home\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nNotFoundContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NotFoundContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport firebase from 'firebase/app';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nconst styles = (theme) => ({\n  dialogActions: {\n    justifyContent: 'center',\n\n    marginTop: `${theme.spacing.unit * 2.5}px`,\n    marginBottom: `${theme.spacing.unit}px`\n  },\n\n  dialogActionsMobile: {\n    display: 'grid',\n    justifyContent: 'stretch',\n\n    marginTop: `${theme.spacing.unit * 2.5}px`,\n    marginBottom: `${theme.spacing.unit / 3}px`\n  },\n\n  buttonMobile: {\n    marginBottom: `${theme.spacing.unit * 1.5}px`\n  },\n\n  google: {\n    backgroundColor: '#4285f4',\n    color: '#ffffff'\n  },\n\n  facebook: {\n    backgroundColor: '#3c5a99',\n    color: '#ffffff'\n  },\n\n  twitter: {\n    backgroundColor: '#1da1f2',\n    color: '#ffffff'\n  },\n\n  gitHub: {\n    backgroundColor: '#24292e',\n    color: '#ffffff'\n  },\n\n  icon: {\n    marginRight: `${theme.spacing.unit / 2}px`\n  }\n});\n\nclass AuthProviderList extends Component {\n  render() {\n    // Properties\n    const { classes, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    return (\n      <React.Fragment>\n        <Hidden only=\"xs\">\n          <DialogActions className={classes.dialogActions}>\n            <Button className={classes.google} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={classes.facebook} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={classes.twitter} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n\n            <Button className={classes.gitHub} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n          </DialogActions>\n        </Hidden>\n\n        <Hidden only={['sm', 'md', 'lg', 'xl']}>\n          <DialogActions className={classes.dialogActionsMobile}>\n            <Button className={`${classes.google} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={`${classes.facebook} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={`${classes.twitter} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n\n            <Button className={`${classes.gitHub} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n          </DialogActions>\n        </Hidden>\n      </React.Fragment>\n    );\n  }\n}\n\nAuthProviderList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool,\n\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AuthProviderList);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AuthProviderList from '../layout/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const { emailAddress, password, passwordConfirmation } = this.state;\n    \n    const errors = validate({ emailAddress, password, passwordConfirmation }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signUp(emailAddress, password, passwordConfirmation);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({ passwordConfirmation });\n  };\n\n  handleSignUpClick = () => {\n    this.signUp();\n  };\n\n  render() {\n    // Properties\n    const { open, fullScreen, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick } = this.props;\n\n    const { emailAddress, password, passwordConfirmation, errors } = this.state;\n\n    return (\n      <Dialog open={open} fullScreen={fullScreen} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Create an account to access features that are unavailable to users who haven't signed up.\n          </DialogContentText>\n\n          <AuthProviderList isPerformingAuthAction={isPerformingAuthAction} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              label=\"E-mail address\"\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"new-password\"\n              error={!!(errors && errors.password)}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              label=\"Password\"\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              required\n              type=\"password\"\n              value={password}\n            />\n\n            <TextField\n              autoComplete=\"password\"\n              error={!!(errors && errors.passwordConfirmation)}\n              fullWidth\n              helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n              label=\"Password confirmation\"\n              margin=\"normal\"\n              onChange={this.handlePasswordConfirmationChange}\n              required\n              type=\"password\"\n              value={passwordConfirmation}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password || !passwordConfirmation) || isPerformingAuthAction} variant=\"contained\" onClick={this.handleSignUpClick}>Sign Up</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  fullScreen: PropTypes.bool,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  constraints: PropTypes.object.isRequired,\n\n  signUp: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default SignUpDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AuthProviderList from '../layout/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signIn = () => {\n    const { emailAddress, password } = this.state;\n    \n    const errors = validate({ emailAddress, password }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signIn(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handleSignInClick = () => {\n    this.signIn();\n  };\n\n  render() {\n    // Properties\n    const { open, fullScreen, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick, onResetPasswordClick } = this.props;\n\n    const { emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog open={open} fullScreen={fullScreen} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Some features might be unavailable until you sign in.\n            While you're signed in you can manage your account.\n          </DialogContentText>\n\n          <AuthProviderList isPerformingAuthAction={isPerformingAuthAction} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"current-password\"\n              error={!!(errors && errors.password)}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              value={password}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={onResetPasswordClick}>Reset Password</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password) || isPerformingAuthAction} variant=\"contained\" onClick={this.handleSignInClick}>Sign In</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  fullScreen: PropTypes.bool,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  constraints: PropTypes.object.isRequired,\n\n  signIn: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired,\n  onResetPasswordClick: PropTypes.func.isRequired\n};\n\nexport default SignInDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n\n  errors: null\n};\n\nclass ResetPasswordDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n    \n    const errors = validate({ emailAddress }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.resetPassword(emailAddress);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.resetPassword();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handleResetPasswordClick = () => {\n    this.resetPassword();\n  };\n\n  render() {\n    // Properties\n    const { open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Reset your password\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            An e-mail will be sent to your e-mail address containing instructions on how to reset your password.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={!emailAddress || isPerformingAuthAction} variant=\"contained\" onClick={this.handleResetPasswordClick}>Reset Password</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nResetPasswordDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  constraints: PropTypes.object.isRequired,\n\n  resetPassword: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default ResetPasswordDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\n/**\n * Confirmation dialogs give users the ability to provide final confirmation of a choice\n * before committing to it, so they have a chance to change their minds if necessary.\n * If the user confirms a choice, it’s carried out. Otherwise, the user can dismiss the\n * dialog. For example, users can listen to multiple ringtones but only make a final\n * selection upon touching “OK.”\n */\nclass ConfirmationDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    /**\n     * Properties\n     */\n\n    // Dialog\n    const { open } = this.props;\n\n    // Custom\n    const { title, contentText, cancelText, okText, disableOkButton, highlightOkButton } = this.props;\n\n    /**\n     * Events\n     */\n\n    // Dialog\n    const { onClose } = this.props;\n\n    // Custom\n    const { onCancelClick, onOkClick } = this.props;\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" disabled={disableOkButton} variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string.isRequired,\n  contentText: PropTypes.string.isRequired,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default ConfirmationDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\n\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport ConfirmationDialog from '../../dialogs/ConfirmationDialog';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    };\n  }\n\n  openVerifyEmailAddressDialog = () => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeVerifyEmailAddressDialog = (callback) => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.closeVerifyEmailAddressDialog(() => {\n      this.props.onVerifyEmailAddressClick();\n    });\n  };\n\n  render() {\n    const { classes, user, isPerformingAuthAction } = this.props;\n    const { verifyEmailAddressDialog } = this.state;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          This is a summary of your account.\n          You can manage your account throughout all the settings.\n        </DialogContentText>\n\n        <List>\n          {user.email &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"E-mail address\">\n                  <EmailIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary={user.email} secondary={user.emailVerified ? 'Verified' : 'Not verified'} />\n\n              {!user.emailVerified &&\n                <ListItemSecondaryAction>\n                  <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={this.openVerifyEmailAddressDialog}>Verify</Button>\n                </ListItemSecondaryAction>\n              }\n            </ListItem>\n          }\n\n          {user.metadata.lastSignInTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Last sign-in\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Last sign-in\" secondary={moment(user.metadata.lastSignInTime).format('LLLL')} />\n            </ListItem>\n          }\n\n          {user.metadata.creationTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Signed up\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Signed up\" secondary={moment(user.metadata.creationTime).format('LLLL')} />\n            </ListItem>\n          }\n        </List>\n\n        <ConfirmationDialog\n          open={verifyEmailAddressDialog.open}\n\n          title=\"Send verification e-mail?\"\n          contentText=\"An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\"\n          okText=\"Send\"\n          highlightOkButton\n\n          onClose={this.closeVerifyEmailAddressDialog}\n\n          onCancelClick={this.closeVerifyEmailAddressDialog}\n          onOkClick={this.verifyEmailAddress}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nAccountTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  onVerifyEmailAddressClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AppearanceTab extends Component {\n  render() {\n    // Properties\n    const { classes, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          Customize the look and feel to your own liking.\n          You can reset all changes you've made by clicking Reset.\n        </DialogContentText>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Primary color</InputLabel>\n\n          <Select onChange={onPrimaryColorChange} value={primaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Secondary color</InputLabel>\n\n          <Select onChange={onSecondaryColorChange} value={secondaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Type</InputLabel>\n\n          <Select onChange={onTypeChange} value={type}>\n            {types.map((type, index) => {\n              return (<MenuItem key={index} value={type}>{type.charAt(0).toUpperCase() + type.slice(1)}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nAppearanceTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AppearanceTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport AccountTab from '../tabs/settings/AccountTab';\nimport AppearanceTab from '../tabs/settings/AppearanceTab';\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedTab: 0\n    };\n  }\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onClose();\n    }\n  };\n\n  changeTab = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  changeIndex = (index) => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  handleResetClick = () => {\n    const { primaryColor, secondaryColor, type, defaultTheme } = this.props;\n\n    if (primaryColor !== defaultTheme.primaryColor || secondaryColor !== defaultTheme.secondaryColor || type !== defaultTheme.type) {\n      setTimeout(this.props.onResetClick, 137.5);\n    }\n  };\n\n  render() {\n    // Properties\n    const { open, fullScreen, user, isPerformingAuthAction, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onClose, onVerifyEmailAddressClick, onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    const { selectedTab } = this.state;\n\n    return (\n      <Dialog open={open} fullScreen={fullScreen} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>Settings</DialogTitle>\n\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" onChange={this.changeTab} value={selectedTab} variant=\"fullWidth\">\n          <Tab label=\"Account\" />\n          <Tab label=\"Appearance\" />\n        </Tabs>\n\n        <DialogContent>\n          <Hidden only=\"xs\">\n            {selectedTab === 0 &&\n              <AccountTab\n                user={user}\n                isPerformingAuthAction={isPerformingAuthAction}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n            }\n\n            {selectedTab === 1 &&\n              <AppearanceTab\n                colors={colors}\n                types={types}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            }\n          </Hidden>\n\n          <Hidden only={['sm', 'md', 'lg', 'xl']}>\n            <SwipeableViews index={selectedTab} onChangeIndex={this.changeIndex}>\n              <AccountTab\n                user={user}\n                isPerformingAuthAction={isPerformingAuthAction}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n\n              <AppearanceTab\n                colors={colors}\n                types={types}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            </SwipeableViews>\n          </Hidden>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={this.handleResetClick}>Reset</Button>\n          <Button color=\"primary\" variant=\"contained\" onClick={onClose}>OK</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  fullScreen: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired,\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired,\n  onResetClick: PropTypes.func.isRequired\n};\n\nexport default SettingsDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport validate from 'validate.js';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport readingTime from 'reading-time';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nimport { createMuiTheme, withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport CodeIcon from '@material-ui/icons/Code';\n\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nimport Bar from './layout/Bar';\nimport EmptyState from './layout/EmptyState';\n\nimport HomeContent from './content/HomeContent';\nimport NotFoundContent from './content/NotFoundContent';\n\nimport SignUpDialog from './dialogs/SignUpDialog';\nimport SignInDialog from './dialogs/SignInDialog';\nimport ResetPasswordDialog from './dialogs/ResetPasswordDialog';\nimport SettingsDialog from './dialogs/SettingsDialog';\nimport ConfirmationDialog from './dialogs/ConfirmationDialog';\n\n/**\n * Firebase\n */\n\nconst config = {\n  apiKey: 'AIzaSyDYZOrZVpXkPQD6J31mb9t2eIIxmGEJK-Q',\n  authDomain: 'react-material-ui-firebase.firebaseapp.com',\n  databaseURL: 'https://react-material-ui-firebase.firebaseio.com',\n  projectId: 'react-material-ui-firebase',\n  storageBucket: 'react-material-ui-firebase.appspot.com',\n  messagingSenderId: '552659850812'\n};\n\nfirebase.initializeApp(config);\n\nconst auth = firebase.auth();\n\n/**\n * Theming\n */\n\nconst colors = [\n  {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n  {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n  {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n  {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n  {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n  {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n  {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n  {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n  {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n  {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n  {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n  {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n  {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n  {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n  {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n  {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n  {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n  {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n  {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n];\n\nconst types = [\n  'light',\n  'dark'\n];\n\nconst defaultTheme = {\n  primaryColor: 'blue',\n  secondaryColor: 'red',\n  type: 'light'\n};\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: red,\n    type: 'light'\n  },\n\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst styles = theme => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  },\n\n  buttonIcon: {\n    marginRight: `${theme.spacing.unit}px`\n  }\n});\n\n/**\n * Settings\n */\n\nconst settings = {\n  name: 'React + Material-UI + Firebase'\n};\n\nconst constraints = {\n  signUp: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    },\n\n    password: {\n      length: {\n        minimum: 6\n      },\n      presence: {\n        allowEmpty: false\n      }\n    },\n\n    passwordConfirmation: {\n      equality: 'password',\n      length: {\n        minimum: 6\n      },\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  signIn: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    },\n\n    password: {\n      length: {\n        minimum: 6\n      },\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  resetPassword: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: defaultTheme.type,\n\n      isAuthReady: false,\n      isPerformingAuthAction: false,\n      isSignedIn: false,\n\n      user: null,\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      resetPasswordDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  /**\n   * Creates a new user account associated with the specified email address and password.\n   * @param emailAddress\n   * @param password\n   * @param passwordConfirmation\n   */\n  signUp = (emailAddress, password, passwordConfirmation) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password || !passwordConfirmation) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress,\n      password,\n      passwordConfirmation\n    }, constraints.signUp);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.openSnackbar(`Welcome to ${settings.name}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/email-already-in-use':\n          case 'auth/invalid-email':\n          case 'auth/operation-not-allowed':\n          case 'auth/weak-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Asynchronously signs in using an email and password.\n   * @param emailAddress\n   * @param password\n   */\n  signIn = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress,\n      password,\n    }, constraints.signIn);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignInDialog(() => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/user-disabled':\n          case 'auth/user-not-found':\n          case 'auth/wrong-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Authenticates a Firebase client using a popup-based OAuth authentication flow.\n   * @param provider\n   */\n  signInWithProvider = (provider) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!provider) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithPopup(provider).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.closeSignInDialog(() => {\n            const user = value.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n          });\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sends a password reset email to the given email address.\n   * @param emailAddress\n   */\n  resetPassword = (emailAddress) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress\n    }, constraints.resetPassword);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.sendPasswordResetEmail(emailAddress).then(() => {\n        this.closeResetPasswordDialog(() => {\n          this.openSnackbar(`Password reset e-mail sent to ${emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n          case 'auth/user-not-found':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sends a verification email to a user.\n   */\n  verifyEmailAddress = () => {\n    const { user, isSignedIn } = this.state;\n\n    if (!user || !user.email || !isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.sendEmailVerification().then(() => {\n        const emailAddress = user.email;\n\n        this.openSnackbar(`Verification e-mail sent to ${emailAddress}`);\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Signs out the current user.\n   */\n  signOut = () => {\n    if (!this.state.isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signOut().then(() => {\n        this.closeSignOutDialog(() => {\n          this.openSnackbar('Signed out');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Changes the current theme. Theme is applied in real-time.\n   * @param palette\n   * @param removeLocalStorage\n   * @param callback\n   */\n  updateTheme = (palette, removeLocalStorage, callback) => {\n    const { primaryColor, secondaryColor, type } = this.state;\n\n    if (!palette.primaryColor) {\n      palette.primaryColor = primaryColor;\n    }\n\n    if (!palette.secondaryColor) {\n      palette.secondaryColor = secondaryColor;\n    }\n\n    if (!palette.type) {\n      palette.type = type;\n    }\n\n    theme = createMuiTheme({\n      palette: {\n        primary: colors.find(color => color.id === palette.primaryColor).import,\n        secondary: colors.find(color => color.id === palette.secondaryColor).import,\n        type: palette.type\n      },\n\n      typography: {\n        useNextVariants: true\n      }\n    });\n\n    this.setState({\n      primaryColor: palette.primaryColor,\n      secondaryColor: palette.secondaryColor,\n      type: palette.type\n    }, () => {\n      if (removeLocalStorage) {\n        localStorage.removeItem('theme');\n      } else {\n        localStorage.setItem('theme', JSON.stringify({\n          primaryColor: palette.primaryColor,\n          secondaryColor: palette.secondaryColor,\n          type: palette.type\n        }));\n      }\n\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Resets the current theme to the default one.\n   */\n  resetTheme = () => {\n    this.updateTheme({\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: defaultTheme.type\n    }, true, () => {\n      this.openSnackbar('Settings reset');\n    });\n  };\n\n  changePrimaryColor = (event) => {\n    const primaryColor = event.target.value;\n\n    this.updateTheme({\n      primaryColor\n    });\n  };\n\n  changeSecondaryColor = (event) => {\n    const secondaryColor = event.target.value;\n\n    this.updateTheme({\n      secondaryColor\n    });\n  };\n\n  changeType = (event) => {\n    const type = event.target.value;\n\n    this.updateTheme({\n      type\n    });\n  };\n\n  showSignUpDialog = () => {\n    this.setState({\n      signUpDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignUpDialog = (callback) => {\n    this.setState({\n      signUpDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignInDialog = () => {\n    this.setState({\n      signInDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignInDialog = (callback) => {\n    this.setState({\n      signInDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showResetPasswordDialog = () => {\n    this.setState({\n      resetPasswordDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeResetPasswordDialog = (callback) => {\n    this.setState({\n      resetPasswordDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSettingsDialog = () => {\n    this.setState({\n      settingsDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSettingsDialog = (callback) => {\n    this.setState({\n      settingsDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignOutDialog = () => {\n    this.setState({\n      signOutDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignOutDialog = (callback) => {\n    this.setState({\n      signOutDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Opens a snackbar. Snackbars provide brief messages about app processes through a message.\n   */\n  openSnackbar = (message) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * 2,\n        message,\n        open: true\n      }\n    });\n  };\n\n  /**\n   * Sets the `open` state of a snackbar to `false`. A direct response to the snackbar's `onClose` event.\n   * @param clearMessage Whether or not to clear the message of the snackbar.\n   */\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    // Properties\n    const {\n      primaryColor,\n      secondaryColor,\n      type,\n      isAuthReady,\n      isPerformingAuthAction,\n      isSignedIn,\n      user\n    } = this.state;\n\n    // Dialogs\n    const {\n      signUpDialog,\n      signInDialog,\n      resetPasswordDialog,\n      settingsDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    if (!isAuthReady) {\n      return null;\n    }\n\n    return (\n      <Router basename=\"/react-material-ui-firebase\">\n        <MuiThemeProvider theme={theme}>\n          <div style={{ minHeight: '100vh', backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa' }}>\n            <Bar\n              name={settings.name}\n\n              isSignedIn={isSignedIn}\n              isPerformingAuthAction={isPerformingAuthAction}\n\n              user={user}\n\n              onSignUpClick={this.showSignUpDialog}\n              onSignInClick={this.showSignInDialog}\n\n              onSettingsClick={this.showSettingsDialog}\n              onSignOutClick={this.showSignOutDialog}\n            />\n\n            {isSignedIn &&\n              <React.Fragment>\n                <Switch>\n                  <Route path=\"/\" exact component={HomeContent} />\n                  <Route component={NotFoundContent} />\n                </Switch>\n\n                <Hidden only=\"xs\">\n                  <SettingsDialog\n                    open={settingsDialog.open}\n                    user={user}\n                    isPerformingAuthAction={isPerformingAuthAction}\n                    colors={colors}\n                    types={types}\n                    primaryColor={primaryColor}\n                    secondaryColor={secondaryColor}\n                    type={type}\n                    defaultTheme={defaultTheme}\n\n                    onClose={this.closeSettingsDialog}\n                    onVerifyEmailAddressClick={this.verifyEmailAddress}\n                    onPrimaryColorChange={this.changePrimaryColor}\n                    onSecondaryColorChange={this.changeSecondaryColor}\n                    onTypeChange={this.changeType}\n                    onResetClick={this.resetTheme}\n                  />\n                </Hidden>\n\n                <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                  <SettingsDialog\n                    open={settingsDialog.open}\n                    fullScreen\n                    user={user}\n                    isPerformingAuthAction={isPerformingAuthAction}\n                    colors={colors}\n                    types={types}\n                    primaryColor={primaryColor}\n                    secondaryColor={secondaryColor}\n                    type={type}\n                    defaultTheme={defaultTheme}\n\n                    onClose={this.closeSettingsDialog}\n                    onVerifyEmailAddressClick={this.verifyEmailAddress}\n                    onPrimaryColorChange={this.changePrimaryColor}\n                    onSecondaryColorChange={this.changeSecondaryColor}\n                    onTypeChange={this.changeType}\n                    onResetClick={this.resetTheme}\n                  />\n                </Hidden>\n\n                <ConfirmationDialog\n                  open={signOutDialog.open}\n\n                  title=\"Sign out?\"\n                  contentText=\"While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\"\n                  okText=\"Sign Out\"\n                  disableOkButton={isPerformingAuthAction}\n                  highlightOkButton\n\n                  onClose={this.closeSignOutDialog}\n                  onCancelClick={this.closeSignOutDialog}\n                  onOkClick={this.signOut}\n                />\n              </React.Fragment>\n            }\n\n            {!isSignedIn &&\n              <React.Fragment>\n                <EmptyState\n                  icon={<CodeIcon className={classes.emptyStateIcon} color=\"action\" />}\n                  title={settings.name}\n                  description=\"The three musketeers, all in one pack in the form of a boilerplate app.\"\n                  button={\n                    <Fab className={classes.button} color=\"primary\" href=\"https://github.com/Phoqe/react-material-ui-firebase\" rel=\"noopener noreferrer\" target=\"_blank\" variant=\"extended\">\n                      <GitHubCircleIcon className={classes.buttonIcon} />\n                      GitHub\n                    </Fab>\n                  }\n                />\n\n                <Hidden only=\"xs\">\n                  <SignUpDialog\n                    open={signUpDialog.open}\n                    isPerformingAuthAction={isPerformingAuthAction}\n                    constraints={constraints.signUp}\n\n                    signUp={this.signUp}\n\n                    onClose={this.closeSignUpDialog}\n                    onAuthProviderClick={this.signInWithProvider}\n                  />\n                </Hidden>\n\n                <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                  <SignUpDialog\n                    open={signUpDialog.open}\n                    fullScreen\n                    isPerformingAuthAction={isPerformingAuthAction}\n                    constraints={constraints.signUp}\n\n                    signUp={this.signUp}\n\n                    onClose={this.closeSignUpDialog}\n                    onAuthProviderClick={this.signInWithProvider}\n                  />\n                </Hidden>\n\n                <Hidden only=\"xs\">\n                  <SignInDialog\n                    open={signInDialog.open}\n                    isPerformingAuthAction={isPerformingAuthAction}\n                    constraints={constraints.signIn}\n\n                    signIn={this.signIn}\n\n                    onClose={this.closeSignInDialog}\n                    onAuthProviderClick={this.signInWithProvider}\n                    onResetPasswordClick={this.showResetPasswordDialog}\n                  />\n                </Hidden>\n\n                <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                  <SignInDialog\n                    open={signInDialog.open}\n                    fullScreen\n                    isPerformingAuthAction={isPerformingAuthAction}\n                    constraints={constraints.signIn}\n\n                    signIn={this.signIn}\n\n                    onClose={this.closeSignInDialog}\n                    onAuthProviderClick={this.signInWithProvider}\n                    onResetPasswordClick={this.showResetPasswordDialog}\n                  />\n                </Hidden>\n\n                <ResetPasswordDialog\n                  open={resetPasswordDialog.open}\n                  isPerformingAuthAction={isPerformingAuthAction}\n                  constraints={constraints.resetPassword}\n\n                  resetPassword={this.resetPassword}\n\n                  onClose={this.closeResetPasswordDialog}\n                />\n              </React.Fragment>\n            }\n\n            <Snackbar\n              autoHideDuration={snackbar.autoHideDuration}\n              message={snackbar.message}\n              open={snackbar.open}\n              onClose={this.closeSnackbar}\n            />\n          </div>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    const theme = JSON.parse(localStorage.getItem('theme'));\n\n    if (theme) {\n      this.updateTheme(theme);\n    }\n\n    this.removeAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      this.setState({\n        isAuthReady: true,\n        isSignedIn: !!user,\n        user\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeAuthObserver();\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}