{"version":3,"sources":["layout/LaunchScreen.js","layout/Bar.js","layout/EmptyState.js","content/HomeContent.js","content/NotFoundContent.js","layout/AuthProviderList.js","dialogs/SignUpDialog.js","dialogs/SignInDialog.js","dialogs/ResetPasswordDialog.js","dialogs/ConfirmationDialog.js","tabs/settings/AccountTab.js","tabs/settings/AppearanceTab.js","dialogs/SettingsDialog.js","App.js","serviceWorker.js","index.js"],"names":["LaunchScreen","classes","this","props","react_default","a","createElement","CircularProgress_default","className","circularProgress","Component","withStyles","theme","position","top","left","Bar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","_this$props","name","isPerformingAuthAction","isSignedIn","user","_this$props2","onSignUpClick","onSignInClick","AppBar_default","color","Toolbar_default","variant","Typography_default","style","flexGrow","Fragment","IconButton_default","onClick","photoURL","Avatar_default","alt","src","Person_default","Menu_default","open","Boolean","onClose","MenuItem_default","Button_default","signUpButton","disabled","marginRight","spacing","unit","EmptyState","icon","title","description","button","center","transform","textAlign","HomeContent","layout_EmptyState","Home_default","emptyStateIcon","Fab_default","component","Link","to","fontSize","concat","marginTop","NotFoundContent","FindInPage_default","buttonIcon","AuthProviderList","onAuthProviderClick","Hidden_default","only","DialogActions_default","dialogActions","google","firebase","auth","GoogleAuthProvider","Google_default","facebook","FacebookAuthProvider","FacebookBox_default","twitter","TwitterAuthProvider","Twitter_default","gitHub","GithubAuthProvider","GithubCircle_default","dialogActionsMobile","buttonMobile","justifyContent","marginBottom","display","backgroundColor","initialState","emailAddress","password","passwordConfirmation","errors","SignUpDialog","signUp","_this$state","validate","constraints","handleExited","handleKeyPress","key","altKey","ctrlKey","metaKey","shiftKey","handleEmailAddressChange","target","value","handlePasswordChange","handlePasswordConfirmationChange","handleSignUpClick","fullScreen","_this$state2","Dialog_default","onExited","onKeyPress","DialogTitle_default","DialogContent_default","DialogContentText_default","layout_AuthProviderList","TextField_default","autoComplete","error","fullWidth","helperText","label","margin","onChange","required","type","SignInDialog","signIn","handleSignInClick","onResetPasswordClick","placeholder","ResetPasswordDialog","resetPassword","preventDefault","handleResetPasswordClick","autoFocus","ConfirmationDialog","onOkClick","contentText","cancelText","okText","disableOkButton","highlightOkButton","onCancelClick","AccountTab","openVerifyEmailAddressDialog","verifyEmailAddressDialog","closeVerifyEmailAddressDialog","callback","verifyEmailAddress","onVerifyEmailAddressClick","dialogContentText","List_default","email","ListItem_default","ListItemIcon_default","Tooltip_default","Email_default","ListItemText_default","primary","secondary","emailVerified","ListItemSecondaryAction_default","metadata","lastSignInTime","AccessTime_default","moment","format","creationTime","dialogs_ConfirmationDialog","AppearanceTab","colors","types","primaryColor","secondaryColor","onPrimaryColorChange","onSecondaryColorChange","onTypeChange","FormControl_default","InputLabel_default","Select_default","map","id","index","charAt","toUpperCase","slice","SettingsDialog","changeTab","selectedTab","changeIndex","handleResetClick","defaultTheme","setTimeout","onResetClick","_this$props3","Tabs_default","indicatorColor","textColor","Tab_default","settings_AccountTab","settings_AppearanceTab","lib_default","onChangeIndex","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","import","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","createMuiTheme","palette","typography","useNextVariants","settings","presence","allowEmpty","length","minimum","equality","App","createUserWithEmailAndPassword","then","closeSignUpDialog","openSnackbar","catch","reason","code","message","finally","signInWithEmailAndPassword","closeSignInDialog","displayName","signInWithProvider","provider","signInWithPopup","sendPasswordResetEmail","closeResetPasswordDialog","sendEmailVerification","signOut","closeSignOutDialog","updateTheme","removeLocalStorage","find","localStorage","removeItem","setItem","JSON","stringify","resetTheme","changePrimaryColor","changeSecondaryColor","changeType","showSignUpDialog","signUpDialog","showSignInDialog","signInDialog","showResetPasswordDialog","resetPasswordDialog","showSettingsDialog","settingsDialog","closeSettingsDialog","showSignOutDialog","signOutDialog","snackbar","autoHideDuration","readingTime","time","closeSnackbar","clearMessage","arguments","undefined","isAuthReady","_this$state3","_this$state4","react_router_dom","basename","styles","minHeight","layout_LaunchScreen","layout_Bar","react_router","path","exact","dialogs_SettingsDialog","Code_default","href","rel","dialogs_SignUpDialog","dialogs_SignInDialog","dialogs_ResetPasswordDialog","Snackbar_default","_this2","parse","getItem","removeAuthObserver","onAuthStateChanged","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c29ac27.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = (theme) => ({\n  circularProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%'\n  }\n});\n\nclass LaunchScreen extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <CircularProgress className={classes.circularProgress} />\n    );\n  }\n}\n\nLaunchScreen.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LaunchScreen);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst styles = (theme) => ({\n  signUpButton: {\n    marginRight: theme.spacing.unit\n  }\n});\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Properties\n    const { classes, name, isPerformingAuthAction, isSignedIn, user } = this.props;\n\n    // Events\n    const { onSignUpClick, onSignInClick } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Typography style={{ flexGrow: 1 }} color=\"inherit\" variant=\"h6\">{name}</Typography>\n\n          {isSignedIn &&\n            <React.Fragment>\n              <IconButton color=\"inherit\" onClick={this.openMenu}>\n                {user.photoURL ? <Avatar alt=\"Avatar\" src={user.photoURL} /> : <PersonIcon />}\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </React.Fragment>\n          }\n\n          {!isSignedIn &&\n            <React.Fragment>\n              <Button className={classes.signUpButton} color=\"secondary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              <Button color=\"secondary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </React.Fragment>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isSignedIn: PropTypes.bool.isRequired,\n\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Bar);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n};\n\nclass EmptyState extends Component {\n  render() {\n    const { classes, icon, title, description, button } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon}\n        {title && <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>}\n        {description && <Typography color=\"textSecondary\" variant=\"subtitle1\">{description}</Typography>}\n        {button}\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  classes: PropTypes.object.isRequired,\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  button: PropTypes.element\n};\n\nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  }\n});\n\nclass HomeContent extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<HomeIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Home\"\n        description=\"Use React + Material-UI + Firebase as the starting-point for your project\"\n        button={\n          <Fab className={classes.button} color=\"primary\" component={Link} to=\"/some-magic\" variant=\"extended\">\n            Click For Some Magic\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nHomeContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(HomeContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport FindIcon from '@material-ui/icons/FindInPage';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  },\n\n  buttonIcon: {\n    marginRight: `${theme.spacing.unit}px`\n  }\n});\n\nclass NotFoundContent extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<FindIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Content Not Found\"\n        description=\"The requested URL was not found on this server\"\n        button={\n          <Fab className={classes.button} color=\"primary\" component={Link} to=\"/\" variant=\"extended\">\n            <HomeIcon className={classes.buttonIcon} /> Go Home\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nNotFoundContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NotFoundContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport firebase from 'firebase/app';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nconst styles = (theme) => ({\n  dialogActions: {\n    justifyContent: 'center',\n\n    marginTop: `${theme.spacing.unit * 2.5}px`,\n    marginBottom: `${theme.spacing.unit}px`\n  },\n\n  dialogActionsMobile: {\n    display: 'grid',\n    justifyContent: 'stretch',\n\n    marginTop: `${theme.spacing.unit * 2.5}px`,\n    marginBottom: `${theme.spacing.unit / 3}px`\n  },\n\n  buttonMobile: {\n    marginBottom: `${theme.spacing.unit * 1.5}px`\n  },\n\n  google: {\n    backgroundColor: '#4285f4',\n    color: '#ffffff'\n  },\n\n  facebook: {\n    backgroundColor: '#3c5a99',\n    color: '#ffffff'\n  },\n\n  twitter: {\n    backgroundColor: '#1da1f2',\n    color: '#ffffff'\n  },\n\n  gitHub: {\n    backgroundColor: '#24292e',\n    color: '#ffffff'\n  },\n\n  icon: {\n    marginRight: `${theme.spacing.unit / 2}px`\n  }\n});\n\nclass AuthProviderList extends Component {\n  render() {\n    // Properties\n    const { classes, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    return (\n      <React.Fragment>\n        <Hidden only=\"xs\">\n          <DialogActions className={classes.dialogActions}>\n            <Button className={classes.google} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={classes.facebook} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={classes.twitter} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n\n            <Button className={classes.gitHub} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n          </DialogActions>\n        </Hidden>\n\n        <Hidden only={['sm', 'md', 'lg', 'xl']}>\n          <DialogActions className={classes.dialogActionsMobile}>\n            <Button className={`${classes.google} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={`${classes.facebook} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={`${classes.twitter} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n\n            <Button className={`${classes.gitHub} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n          </DialogActions>\n        </Hidden>\n      </React.Fragment>\n    );\n  }\n}\n\nAuthProviderList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool,\n\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AuthProviderList);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AuthProviderList from '../layout/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const { emailAddress, password, passwordConfirmation } = this.state;\n    \n    const errors = validate({ emailAddress, password, passwordConfirmation }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signUp(emailAddress, password, passwordConfirmation);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({ passwordConfirmation });\n  };\n\n  handleSignUpClick = () => {\n    this.signUp();\n  };\n\n  render() {\n    // Properties\n    const { open, fullScreen, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick } = this.props;\n\n    const { emailAddress, password, passwordConfirmation, errors } = this.state;\n\n    return (\n      <Dialog open={open} fullScreen={fullScreen} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Create an account to access features that are unavailable to users who haven't signed up.\n          </DialogContentText>\n\n          <AuthProviderList isPerformingAuthAction={isPerformingAuthAction} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              label=\"E-mail address\"\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"new-password\"\n              error={!!(errors && errors.password)}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              label=\"Password\"\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              required\n              type=\"password\"\n              value={password}\n            />\n\n            <TextField\n              autoComplete=\"password\"\n              error={!!(errors && errors.passwordConfirmation)}\n              fullWidth\n              helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n              label=\"Password confirmation\"\n              margin=\"normal\"\n              onChange={this.handlePasswordConfirmationChange}\n              required\n              type=\"password\"\n              value={passwordConfirmation}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password || !passwordConfirmation) || isPerformingAuthAction} variant=\"contained\" onClick={this.handleSignUpClick}>Sign Up</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  fullScreen: PropTypes.bool,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  constraints: PropTypes.object.isRequired,\n\n  signUp: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default SignUpDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AuthProviderList from '../layout/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signIn = () => {\n    const { emailAddress, password } = this.state;\n    \n    const errors = validate({ emailAddress, password }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signIn(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handleSignInClick = () => {\n    this.signIn();\n  };\n\n  render() {\n    // Properties\n    const { open, fullScreen, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick, onResetPasswordClick } = this.props;\n\n    const { emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog open={open} fullScreen={fullScreen} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Some features might be unavailable until you sign in.\n            While you're signed in you can manage your account.\n          </DialogContentText>\n\n          <AuthProviderList isPerformingAuthAction={isPerformingAuthAction} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"current-password\"\n              error={!!(errors && errors.password)}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              value={password}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={onResetPasswordClick}>Reset Password</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password) || isPerformingAuthAction} variant=\"contained\" onClick={this.handleSignInClick}>Sign In</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  fullScreen: PropTypes.bool,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  constraints: PropTypes.object.isRequired,\n\n  signIn: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired,\n  onResetPasswordClick: PropTypes.func.isRequired\n};\n\nexport default SignInDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n\n  errors: null\n};\n\nclass ResetPasswordDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n    \n    const errors = validate({ emailAddress }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.resetPassword(emailAddress);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.resetPassword();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handleResetPasswordClick = () => {\n    this.resetPassword();\n  };\n\n  render() {\n    // Properties\n    const { open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Reset your password\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            An e-mail will be sent to your e-mail address containing instructions on how to reset your password.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={!emailAddress || isPerformingAuthAction} variant=\"contained\" onClick={this.handleResetPasswordClick}>Reset Password</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nResetPasswordDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  constraints: PropTypes.object.isRequired,\n\n  resetPassword: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default ResetPasswordDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\n/**\n * Confirmation dialogs give users the ability to provide final confirmation of a choice\n * before committing to it, so they have a chance to change their minds if necessary.\n * If the user confirms a choice, it’s carried out. Otherwise, the user can dismiss the\n * dialog. For example, users can listen to multiple ringtones but only make a final\n * selection upon touching “OK.”\n */\nclass ConfirmationDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    /**\n     * Properties\n     */\n\n    // Dialog\n    const { open } = this.props;\n\n    // Custom\n    const { title, contentText, cancelText, okText, disableOkButton, highlightOkButton } = this.props;\n\n    /**\n     * Events\n     */\n\n    // Dialog\n    const { onClose } = this.props;\n\n    // Custom\n    const { onCancelClick, onOkClick } = this.props;\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" disabled={disableOkButton} variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string.isRequired,\n  contentText: PropTypes.string.isRequired,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default ConfirmationDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\n\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport ConfirmationDialog from '../../dialogs/ConfirmationDialog';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    };\n  }\n\n  openVerifyEmailAddressDialog = () => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeVerifyEmailAddressDialog = (callback) => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.closeVerifyEmailAddressDialog(() => {\n      this.props.onVerifyEmailAddressClick();\n    });\n  };\n\n  render() {\n    const { classes, user, isPerformingAuthAction } = this.props;\n    const { verifyEmailAddressDialog } = this.state;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          This is a summary of your account.\n          You can manage your account throughout all the settings.\n        </DialogContentText>\n\n        <List>\n          {user.email &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"E-mail address\">\n                  <EmailIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary={user.email} secondary={user.emailVerified ? 'Verified' : 'Not verified'} />\n\n              {!user.emailVerified &&\n                <ListItemSecondaryAction>\n                  <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={this.openVerifyEmailAddressDialog}>Verify</Button>\n                </ListItemSecondaryAction>\n              }\n            </ListItem>\n          }\n\n          {user.metadata.lastSignInTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Last sign-in\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Last sign-in\" secondary={moment(user.metadata.lastSignInTime).format('LLLL')} />\n            </ListItem>\n          }\n\n          {user.metadata.creationTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Signed up\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Signed up\" secondary={moment(user.metadata.creationTime).format('LLLL')} />\n            </ListItem>\n          }\n        </List>\n\n        <ConfirmationDialog\n          open={verifyEmailAddressDialog.open}\n\n          title=\"Send verification e-mail?\"\n          contentText=\"An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\"\n          okText=\"Send\"\n          highlightOkButton\n\n          onClose={this.closeVerifyEmailAddressDialog}\n\n          onCancelClick={this.closeVerifyEmailAddressDialog}\n          onOkClick={this.verifyEmailAddress}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nAccountTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  onVerifyEmailAddressClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AppearanceTab extends Component {\n  render() {\n    // Properties\n    const { classes, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          Customize the look and feel to your own liking.\n          You can reset all changes you've made by clicking Reset.\n        </DialogContentText>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Primary color</InputLabel>\n\n          <Select onChange={onPrimaryColorChange} value={primaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Secondary color</InputLabel>\n\n          <Select onChange={onSecondaryColorChange} value={secondaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Type</InputLabel>\n\n          <Select onChange={onTypeChange} value={type}>\n            {types.map((type, index) => {\n              return (<MenuItem key={index} value={type}>{type.charAt(0).toUpperCase() + type.slice(1)}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nAppearanceTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AppearanceTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport AccountTab from '../tabs/settings/AccountTab';\nimport AppearanceTab from '../tabs/settings/AppearanceTab';\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedTab: 0\n    };\n  }\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onClose();\n    }\n  };\n\n  changeTab = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  changeIndex = (index) => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  handleResetClick = () => {\n    const { primaryColor, secondaryColor, type, defaultTheme } = this.props;\n\n    if (primaryColor !== defaultTheme.primaryColor || secondaryColor !== defaultTheme.secondaryColor || type !== defaultTheme.type) {\n      setTimeout(this.props.onResetClick, 137.5);\n    }\n  };\n\n  render() {\n    // Properties\n    const { open, fullScreen, user, isPerformingAuthAction, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onClose, onVerifyEmailAddressClick, onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    const { selectedTab } = this.state;\n\n    return (\n      <Dialog open={open} fullScreen={fullScreen} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>Settings</DialogTitle>\n\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" onChange={this.changeTab} value={selectedTab} variant=\"fullWidth\">\n          <Tab label=\"Account\" />\n          <Tab label=\"Appearance\" />\n        </Tabs>\n\n        <DialogContent>\n          <Hidden only=\"xs\">\n            {selectedTab === 0 &&\n              <AccountTab\n                user={user}\n                isPerformingAuthAction={isPerformingAuthAction}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n            }\n\n            {selectedTab === 1 &&\n              <AppearanceTab\n                colors={colors}\n                types={types}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            }\n          </Hidden>\n\n          <Hidden only={['sm', 'md', 'lg', 'xl']}>\n            <SwipeableViews index={selectedTab} onChangeIndex={this.changeIndex}>\n              <AccountTab\n                user={user}\n                isPerformingAuthAction={isPerformingAuthAction}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n\n              <AppearanceTab\n                colors={colors}\n                types={types}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            </SwipeableViews>\n          </Hidden>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={this.handleResetClick}>Reset</Button>\n          <Button color=\"primary\" variant=\"contained\" onClick={onClose}>OK</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  fullScreen: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired,\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired,\n  onResetClick: PropTypes.func.isRequired\n};\n\nexport default SettingsDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport validate from 'validate.js';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport readingTime from 'reading-time';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nimport { createMuiTheme, withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport CodeIcon from '@material-ui/icons/Code';\n\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nimport LaunchScreen from './layout/LaunchScreen';\n\nimport Bar from './layout/Bar';\nimport EmptyState from './layout/EmptyState';\n\nimport HomeContent from './content/HomeContent';\nimport NotFoundContent from './content/NotFoundContent';\n\nimport SignUpDialog from './dialogs/SignUpDialog';\nimport SignInDialog from './dialogs/SignInDialog';\nimport ResetPasswordDialog from './dialogs/ResetPasswordDialog';\nimport SettingsDialog from './dialogs/SettingsDialog';\nimport ConfirmationDialog from './dialogs/ConfirmationDialog';\n\n/**\n * Firebase\n */\n\nconst config = {\n  apiKey: 'AIzaSyDYZOrZVpXkPQD6J31mb9t2eIIxmGEJK-Q',\n  authDomain: 'react-material-ui-firebase.firebaseapp.com',\n  databaseURL: 'https://react-material-ui-firebase.firebaseio.com',\n  projectId: 'react-material-ui-firebase',\n  storageBucket: 'react-material-ui-firebase.appspot.com',\n  messagingSenderId: '552659850812'\n};\n\nfirebase.initializeApp(config);\n\nconst auth = firebase.auth();\n\n/**\n * Theming\n */\n\nconst colors = [\n  {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n  {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n  {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n  {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n  {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n  {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n  {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n  {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n  {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n  {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n  {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n  {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n  {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n  {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n  {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n  {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n  {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n  {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n  {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n];\n\nconst types = [\n  'light',\n  'dark'\n];\n\nconst defaultTheme = {\n  primaryColor: 'blue',\n  secondaryColor: 'red',\n  type: 'light'\n};\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: red,\n    type: 'light'\n  },\n\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst styles = theme => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  },\n\n  buttonIcon: {\n    marginRight: `${theme.spacing.unit}px`\n  }\n});\n\n/**\n * Settings\n */\n\nconst settings = {\n  name: 'React + Material-UI + Firebase'\n};\n\nconst constraints = {\n  signUp: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    },\n\n    password: {\n      length: {\n        minimum: 6\n      },\n      presence: {\n        allowEmpty: false\n      }\n    },\n\n    passwordConfirmation: {\n      equality: 'password',\n      length: {\n        minimum: 6\n      },\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  signIn: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    },\n\n    password: {\n      length: {\n        minimum: 6\n      },\n      presence: {\n        allowEmpty: false\n      }\n    }\n  },\n\n  resetPassword: {\n    emailAddress: {\n      email: true,\n      presence: {\n        allowEmpty: false\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: defaultTheme.type,\n\n      isAuthReady: false,\n      isPerformingAuthAction: false,\n      isSignedIn: false,\n\n      user: null,\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      resetPasswordDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  /**\n   * Creates a new user account associated with the specified email address and password.\n   * @param emailAddress\n   * @param password\n   * @param passwordConfirmation\n   */\n  signUp = (emailAddress, password, passwordConfirmation) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password || !passwordConfirmation) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress,\n      password,\n      passwordConfirmation\n    }, constraints.signUp);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.openSnackbar(`Welcome to ${settings.name}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/email-already-in-use':\n          case 'auth/invalid-email':\n          case 'auth/operation-not-allowed':\n          case 'auth/weak-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Asynchronously signs in using an email and password.\n   * @param emailAddress\n   * @param password\n   */\n  signIn = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress,\n      password,\n    }, constraints.signIn);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignInDialog(() => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/user-disabled':\n          case 'auth/user-not-found':\n          case 'auth/wrong-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Authenticates a Firebase client using a popup-based OAuth authentication flow.\n   * @param provider\n   */\n  signInWithProvider = (provider) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!provider) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithPopup(provider).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.closeSignInDialog(() => {\n            const user = value.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n          });\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sends a password reset email to the given email address.\n   * @param emailAddress\n   */\n  resetPassword = (emailAddress) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress\n    }, constraints.resetPassword);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.sendPasswordResetEmail(emailAddress).then(() => {\n        this.closeResetPasswordDialog(() => {\n          this.openSnackbar(`Password reset e-mail sent to ${emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n          case 'auth/user-not-found':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Sends a verification email to a user.\n   */\n  verifyEmailAddress = () => {\n    const { user, isSignedIn } = this.state;\n\n    if (!user || !user.email || !isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.sendEmailVerification().then(() => {\n        const emailAddress = user.email;\n\n        this.openSnackbar(`Verification e-mail sent to ${emailAddress}`);\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Signs out the current user.\n   */\n  signOut = () => {\n    if (!this.state.isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signOut().then(() => {\n        this.closeSignOutDialog(() => {\n          this.openSnackbar('Signed out');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  /**\n   * Changes the current theme. Theme is applied in real-time.\n   * @param palette\n   * @param removeLocalStorage\n   * @param callback\n   */\n  updateTheme = (palette, removeLocalStorage, callback) => {\n    const { primaryColor, secondaryColor, type } = this.state;\n\n    if (!palette.primaryColor) {\n      palette.primaryColor = primaryColor;\n    }\n\n    if (!palette.secondaryColor) {\n      palette.secondaryColor = secondaryColor;\n    }\n\n    if (!palette.type) {\n      palette.type = type;\n    }\n\n    theme = createMuiTheme({\n      palette: {\n        primary: colors.find(color => color.id === palette.primaryColor).import,\n        secondary: colors.find(color => color.id === palette.secondaryColor).import,\n        type: palette.type\n      },\n\n      typography: {\n        useNextVariants: true\n      }\n    });\n\n    this.setState({\n      primaryColor: palette.primaryColor,\n      secondaryColor: palette.secondaryColor,\n      type: palette.type\n    }, () => {\n      if (removeLocalStorage) {\n        localStorage.removeItem('theme');\n      } else {\n        localStorage.setItem('theme', JSON.stringify({\n          primaryColor: palette.primaryColor,\n          secondaryColor: palette.secondaryColor,\n          type: palette.type\n        }));\n      }\n\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Resets the current theme to the default one.\n   */\n  resetTheme = () => {\n    this.updateTheme({\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: defaultTheme.type\n    }, true, () => {\n      this.openSnackbar('Settings reset');\n    });\n  };\n\n  changePrimaryColor = (event) => {\n    const primaryColor = event.target.value;\n\n    this.updateTheme({\n      primaryColor\n    });\n  };\n\n  changeSecondaryColor = (event) => {\n    const secondaryColor = event.target.value;\n\n    this.updateTheme({\n      secondaryColor\n    });\n  };\n\n  changeType = (event) => {\n    const type = event.target.value;\n\n    this.updateTheme({\n      type\n    });\n  };\n\n  showSignUpDialog = () => {\n    this.setState({\n      signUpDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignUpDialog = (callback) => {\n    this.setState({\n      signUpDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignInDialog = () => {\n    this.setState({\n      signInDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignInDialog = (callback) => {\n    this.setState({\n      signInDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showResetPasswordDialog = () => {\n    this.setState({\n      resetPasswordDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeResetPasswordDialog = (callback) => {\n    this.setState({\n      resetPasswordDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSettingsDialog = () => {\n    this.setState({\n      settingsDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSettingsDialog = (callback) => {\n    this.setState({\n      settingsDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignOutDialog = () => {\n    this.setState({\n      signOutDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignOutDialog = (callback) => {\n    this.setState({\n      signOutDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Opens a snackbar. Snackbars provide brief messages about app processes through a message.\n   */\n  openSnackbar = (message) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * 2,\n        message,\n        open: true\n      }\n    });\n  };\n\n  /**\n   * Sets the `open` state of a snackbar to `false`. A direct response to the snackbar's `onClose` event.\n   * @param clearMessage Whether or not to clear the message of the snackbar.\n   */\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    // Properties\n    const {\n      primaryColor,\n      secondaryColor,\n      type,\n      isAuthReady,\n      isPerformingAuthAction,\n      isSignedIn,\n      user\n    } = this.state;\n\n    // Dialogs\n    const {\n      signUpDialog,\n      signInDialog,\n      resetPasswordDialog,\n      settingsDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    return (\n      <Router basename=\"/react-material-ui-firebase\">\n        <MuiThemeProvider theme={theme}>\n          <div style={{ minHeight: '100vh', backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa' }}>\n            {!isAuthReady &&\n              <LaunchScreen />\n            }\n\n            {isAuthReady &&\n              <React.Fragment>\n                <Bar\n                  name={settings.name}\n\n                  isSignedIn={isSignedIn}\n                  isPerformingAuthAction={isPerformingAuthAction}\n\n                  user={user}\n\n                  onSignUpClick={this.showSignUpDialog}\n                  onSignInClick={this.showSignInDialog}\n\n                  onSettingsClick={this.showSettingsDialog}\n                  onSignOutClick={this.showSignOutDialog}\n                />\n\n                {isSignedIn &&\n                  <React.Fragment>\n                    <Switch>\n                      <Route path=\"/\" exact component={HomeContent} />\n                      <Route component={NotFoundContent} />\n                    </Switch>\n\n                    <Hidden only=\"xs\">\n                      <SettingsDialog\n                        open={settingsDialog.open}\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        colors={colors}\n                        types={types}\n                        primaryColor={primaryColor}\n                        secondaryColor={secondaryColor}\n                        type={type}\n                        defaultTheme={defaultTheme}\n\n                        onClose={this.closeSettingsDialog}\n                        onVerifyEmailAddressClick={this.verifyEmailAddress}\n                        onPrimaryColorChange={this.changePrimaryColor}\n                        onSecondaryColorChange={this.changeSecondaryColor}\n                        onTypeChange={this.changeType}\n                        onResetClick={this.resetTheme}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <SettingsDialog\n                        open={settingsDialog.open}\n                        fullScreen\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        colors={colors}\n                        types={types}\n                        primaryColor={primaryColor}\n                        secondaryColor={secondaryColor}\n                        type={type}\n                        defaultTheme={defaultTheme}\n\n                        onClose={this.closeSettingsDialog}\n                        onVerifyEmailAddressClick={this.verifyEmailAddress}\n                        onPrimaryColorChange={this.changePrimaryColor}\n                        onSecondaryColorChange={this.changeSecondaryColor}\n                        onTypeChange={this.changeType}\n                        onResetClick={this.resetTheme}\n                      />\n                    </Hidden>\n\n                    <ConfirmationDialog\n                      open={signOutDialog.open}\n\n                      title=\"Sign out?\"\n                      contentText=\"While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\"\n                      okText=\"Sign Out\"\n                      disableOkButton={isPerformingAuthAction}\n                      highlightOkButton\n\n                      onClose={this.closeSignOutDialog}\n                      onCancelClick={this.closeSignOutDialog}\n                      onOkClick={this.signOut}\n                    />\n                  </React.Fragment>\n                }\n\n                {!isSignedIn &&\n                  <React.Fragment>\n                    <EmptyState\n                      icon={<CodeIcon className={classes.emptyStateIcon} color=\"action\" />}\n                      title={settings.name}\n                      description=\"The three musketeers, all in one pack in the form of a boilerplate app.\"\n                      button={\n                        <Fab className={classes.button} color=\"primary\" href=\"https://github.com/Phoqe/react-material-ui-firebase\" rel=\"noopener noreferrer\" target=\"_blank\" variant=\"extended\">\n                          <GitHubCircleIcon className={classes.buttonIcon} />\n                          GitHub\n                        </Fab>\n                      }\n                    />\n\n                    <Hidden only=\"xs\">\n                      <SignUpDialog\n                        open={signUpDialog.open}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={constraints.signUp}\n\n                        signUp={this.signUp}\n\n                        onClose={this.closeSignUpDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <SignUpDialog\n                        open={signUpDialog.open}\n                        fullScreen\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={constraints.signUp}\n\n                        signUp={this.signUp}\n\n                        onClose={this.closeSignUpDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                      />\n                    </Hidden>\n\n                    <Hidden only=\"xs\">\n                      <SignInDialog\n                        open={signInDialog.open}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={constraints.signIn}\n\n                        signIn={this.signIn}\n\n                        onClose={this.closeSignInDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                        onResetPasswordClick={this.showResetPasswordDialog}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <SignInDialog\n                        open={signInDialog.open}\n                        fullScreen\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={constraints.signIn}\n\n                        signIn={this.signIn}\n\n                        onClose={this.closeSignInDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                        onResetPasswordClick={this.showResetPasswordDialog}\n                      />\n                    </Hidden>\n\n                    <ResetPasswordDialog\n                      open={resetPasswordDialog.open}\n                      isPerformingAuthAction={isPerformingAuthAction}\n                      constraints={constraints.resetPassword}\n\n                      resetPassword={this.resetPassword}\n\n                      onClose={this.closeResetPasswordDialog}\n                    />\n                  </React.Fragment>\n                }\n\n                <Snackbar\n                  autoHideDuration={snackbar.autoHideDuration}\n                  message={snackbar.message}\n                  open={snackbar.open}\n                  onClose={this.closeSnackbar}\n                />\n              </React.Fragment>\n            }\n          </div>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    const theme = JSON.parse(localStorage.getItem('theme'));\n\n    if (theme) {\n      this.updateTheme(theme);\n    }\n\n    this.removeAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      this.setState({\n        isAuthReady: true,\n        isSignedIn: !!user,\n        user\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeAuthObserver();\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}