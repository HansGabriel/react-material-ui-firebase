{"version":3,"sources":["firebase.js","services/authentication.js","services/theming.js","components/LaunchScreen/LaunchScreen.js","components/Bar/Bar.js","components/EmptyState/EmptyState.js","components/HomeContent/HomeContent.js","components/NotFoundContent/NotFoundContent.js","components/Router/Router.js","components/AuthProviderList/AuthProviderList.js","constraints.js","components/SignUpDialog/SignUpDialog.js","components/SignInDialog/SignInDialog.js","components/AccountTab/AccountTab.js","components/AppearanceTab/AppearanceTab.js","components/LinksTab/LinksTab.js","components/SecurityTab/SecurityTab.js","components/SettingsDialog/SettingsDialog.js","components/DeleteAccountDialog/DeleteAccountDialog.js","components/AlertDialog/AlertDialog.js","components/DialogHost/DialogHost.js","components/App/App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","firestore","storage","avatarFileTypes","authentication","fields","Promise","resolve","reject","firstName","lastName","username","emailAddress","password","currentUser","createUserWithEmailAndPassword","then","value","user","uid","reference","collection","doc","set","logEvent","method","catch","reason","signInWithEmailAndPassword","providerId","provider","OAuthProvider","signInWithPopup","linkWithPopup","unlink","providerData","find","authProvider","signOut","sendPasswordResetEmail","avatar","includes","type","size","ref","child","put","uploadTaskSnapshot","getDownloadURL","updateProfile","photoURL","delete","update","updateEmail","updatePassword","lastPasswordChange","FieldValue","serverTimestamp","sendEmailVerification","getName","displayName","getFullName","getNameInitials","charAt","getProfileCompletion","email","emailVerified","profileCompletion","forEach","field","length","Math","floor","getSecurityRating","userData","metadata","creationTime","moment","securityRating","toDate","diff","colors","red","id","name","import","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","types","light","dark","getColor","colorId","_","camelCase","getType","typeId","defaultPrimaryColor","defaultSecondaryColor","defaultType","defaultTheme","createMuiTheme","palette","primary","secondary","primaryColor","secondaryColor","theming","isDefaultTheme","theme","createTheme","changeTheme","changePrimaryColor","changeSecondaryColor","changeType","resetTheme","LaunchScreen","Box","position","top","left","CircularProgress","Component","Bar","props","getAvatar","photoUrl","Avatar","alt","src","nameInitials","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","this","performingAction","onSignUpClick","onSignInClick","AppBar","color","Toolbar","variant","flexGrow","Typography","IconButton","disabled","onClick","Menu","open","Boolean","onClose","MenuItem","mr","Button","defaultProps","EmptyState","classes","icon","title","description","button","className","center","gutterBottom","withStyles","transform","textAlign","HomeContent","emptyStateIcon","Fab","href","rel","target","buttonIcon","fontSize","spacing","marginTop","marginRight","NotFoundContent","component","Link","to","Router","basename","path","exact","AuthProviderList","onAuthProviderClick","authProviders","main","contrastText","Grid","grid","container","direction","map","key","item","fullWidth","startIcon","marginBottom","constraints","presence","allowEmpty","minimum","maximum","message","emailAddressConfirmation","equality","attribute","passwordConfirmation","initialState","errors","SignUpDialog","signUp","validate","signUpWithEmailAddressAndPassword","dialogProps","code","openSnackbar","finally","signInWithAuthProvider","handleKeyPress","altKey","ctrlKey","metaKey","shiftKey","handleExited","handleEmailAddressChange","handleEmailAddressConfirmationChange","handlePasswordChange","handlePasswordConfirmationChange","Dialog","maxWidth","onKeyPress","onExited","DialogTitle","Hidden","smDown","DialogContent","dialogContent","xs","Divider","divider","orientation","TextField","autoComplete","error","helperText","label","placeholder","required","onChange","mdUp","DialogActions","overflowY","margin","SignInDialog","resetPassword","signIn","xsDown","smUp","showingField","avatarUrl","loadingAvatar","sentVerificationEmail","AccountTab","getNameInitialsOrIcon","personIcon","uploadAvatar","changeAvatar","removeAvatar","URL","revokeObjectURL","showField","fieldId","hideFields","callback","changeFirstName","changeLastName","changeUsername","changeEmailAddress","verifyEmailAddress","deleteAccount","changeField","handleKeyDown","handleAvatarChange","files","createObjectURL","handleFirstNameChange","handleLastNameChange","handleUsernameChange","onDeleteAccountClick","hasFirstName","hasLastName","hasUsername","root","mb","alignItems","Badge","badge","badgeContent","Tooltip","sizeSmall","small","loadingBadge","Fade","style","transitionDelay","in","unmountOnExit","thickness","hidden","accept","htmlFor","List","disablePadding","ListItem","ListItemIcon","autoFocus","onBlur","onKeyDown","ListItemText","ListItemSecondaryAction","clone","lastSignInTime","format","mt","paddingTop","right","marginLeft","width","height","cursor","minHeight","AppearanceTab","handlePrimaryColorChange","handleSecondaryColorChange","handleTypeChange","handleResetClick","FormControl","InputLabel","Select","native","Object","keys","LinksTab","linkAuthProvider","unlinkAuthProvider","authProviderData","identifier","phoneNumber","SecurityTab","changePassword","hasChangedPassword","tabs","selectedTab","SettingsDialog","handleTabChange","handleIndexChange","index","disableTypography","closeButton","Tabs","overflow","indicatorColor","textColor","tab","Tab","scrollButtons","onChangeIndex","display","DeleteAccountDialog","DialogContentText","AlertDialog","contentText","dismissiveAction","confirmingAction","acknowledgementAction","console","noTitlePadding","DialogHost","dialogs","signUpDialog","signInDialog","settingsDialog","deleteAccountDialog","signOutDialog","fullScreen","App","openDialog","dialogId","dialog","undefined","closeDialog","autoHideDuration","snackbar","readingTime","time","closeSnackbar","clearMessage","ready","CssBaseline","Snackbar","mounted","removeAuthStateChangedObserver","onAuthStateChanged","removeReferenceListener","onSnapshot","snapshot","exists","data","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c9af5087.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\n\nimport 'firebase/analytics';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/performance';\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n});\n\nexport default firebase;\nexport const analytics = firebase.analytics();\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\nexport const performance = firebase.performance();\n","import firebase, { analytics, auth, firestore, storage } from '../firebase';\n\nimport moment from 'moment';\n\nconst avatarFileTypes = [\n  'image/gif',\n  'image/jpeg',\n  'image/png',\n  'image/webp',\n  'image/svg+xml'\n];\n\nconst authentication = {};\n\nauthentication.signUp = (fields) => {\n  return new Promise((resolve, reject) => {\n    if (!fields) {\n      reject();\n\n      return;\n    }\n\n    const firstName = fields.firstName;\n    const lastName = fields.lastName;\n    const username = fields.username;\n    const emailAddress = fields.emailAddress;\n    const password = fields.password;\n\n    if (!firstName || !lastName || !username || !emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n      const user = value.user;\n\n      if (!user) {\n        reject();\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        reject();\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.set({\n        firstName: firstName,\n        lastName: lastName,\n        username: username\n      }).then((value) => {\n        analytics.logEvent('sign_up', {\n          method: 'password'\n        });\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signUpWithEmailAddressAndPassword = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n      analytics.logEvent('sign_up', {\n        method: 'password'\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signIn = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signInWithEmailAndPassword(emailAddress, password).then((value) => {\n      analytics.logEvent('login', {\n        method: 'password'\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signInWithAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signInWithPopup(provider).then((value) => {\n      analytics.logEvent('login', {\n        method: providerId\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.linkAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.linkWithPopup(provider).then((value) => {\n      analytics.logEvent('link_auth_provider', {\n        value: providerId\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.unlinkAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.unlink(providerId).then((value) => {\n      analytics.logEvent('unlink_auth_provider', {\n        value: providerId\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.authProviderData = (providerId) => {\n  if (!providerId) {\n    return;\n  }\n\n  const currentUser = auth.currentUser;\n\n  if (!currentUser) {\n    return;\n  }\n\n  const providerData = currentUser.providerData;\n\n  if (!providerData) {\n    return;\n  }\n\n  return providerData.find(authProvider => authProvider.providerId === providerId);\n};\n\nauthentication.signOut = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signOut().then((value) => {\n      analytics.logEvent('sign_out');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.resetPassword = (emailAddress) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.sendPasswordResetEmail(emailAddress).then((value) => {\n      analytics.logEvent('reset_password');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeAvatar = (avatar) => {\n  return new Promise((resolve, reject) => {\n    if (!avatar) {\n      reject();\n\n      return;\n    }\n\n    if (!avatarFileTypes.includes(avatar.type)) {\n      reject();\n\n      return;\n    }\n\n    if (avatar.size > (20 * 1024 * 1024)) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = storage.ref().child('images').child('avatars').child(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.put(avatar).then((uploadTaskSnapshot) => {\n      reference.getDownloadURL().then((value) => {\n        currentUser.updateProfile({\n          photoURL: value\n        }).then((value) => {\n          analytics.logEvent('change_avatar');\n\n          resolve(value);\n        }).catch((reason) => {\n          reject(reason);\n        });\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.removeAvatar = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updateProfile({\n      photoURL: null\n    }).then((value) => {\n      const reference = storage.ref().child('images').child('avatars').child(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.delete().then((value) => {\n        analytics.logEvent('remove_avatar');\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeFirstName = (firstName) => {\n  return new Promise((resolve, reject) => {\n    if (!firstName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      firstName: firstName\n    }).then((value) => {\n      analytics.logEvent('change_first_name');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeLastName = (lastName) => {\n  return new Promise((resolve, reject) => {\n    if (!lastName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      lastName: lastName\n    }).then((value) => {\n      analytics.logEvent('change_last_name');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeUsername = (username) => {\n  return new Promise((resolve, reject) => {\n    if (!username) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      username: username\n    }).then((value) => {\n      analytics.logEvent('change_username');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeEmailAddress = (emailAddress) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updateEmail(emailAddress).then((value) => {\n      analytics.logEvent('change_email_address');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changePassword = (password) => {\n  return new Promise((resolve, reject) => {\n    if (!password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updatePassword(password).then((value) => {\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.update({\n        lastPasswordChange: firebase.firestore.FieldValue.serverTimestamp()\n      }).then((value) => {\n        analytics.logEvent('change_password');\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.verifyEmailAddress = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.sendEmailVerification().then((value) => {\n      analytics.logEvent('verify_email_address');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.deleteAccount = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.delete().then((value) => {\n      analytics.logEvent('delete_account');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.user = {};\n\nauthentication.user.getName = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n  const lastName = fields.lastName;\n\n  if (firstName) {\n    return firstName;\n  }\n\n  if (username) {\n    return username;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  if (lastName) {\n    return lastName;\n  }\n\n  return null;\n};\n\nauthentication.user.getFullName = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return `${firstName} ${lastName}`;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  return null;\n};\n\nauthentication.user.getNameInitials = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return firstName.charAt(0) + lastName.charAt(0);\n  }\n\n  if (firstName) {\n    return firstName.charAt(0);\n  }\n\n  if (username) {\n    return username.charAt(0);\n  }\n\n  if (lastName) {\n    return lastName.charAt(0);\n  }\n\n  if (displayName) {\n    return displayName.charAt(0);\n  }\n\n  return null;\n};\n\nauthentication.user.getProfileCompletion = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  fields = [\n    fields.photoURL,\n    fields.firstName,\n    fields.lastName,\n    fields.username,\n    fields.email,\n    fields.email && fields.emailVerified\n  ];\n\n  if (!fields) {\n    return null;\n  }\n\n  let profileCompletion = 0;\n\n  fields.forEach((field) => {\n    if (field) {\n      profileCompletion += 100 / fields.length;\n    }\n  });\n\n  return Math.floor(profileCompletion);\n};\n\nauthentication.user.getSecurityRating = (user, userData) => {\n  if (!user || !user.metadata) {\n    return null;\n  }\n\n  let creationTime = user.metadata.creationTime;\n\n  if (!creationTime) {\n    return null;\n  }\n\n  creationTime = moment(creationTime);\n\n  let securityRating = 0;\n\n  if (userData) {\n    let lastPasswordChange = userData.lastPasswordChange;\n\n    if (lastPasswordChange) {\n      lastPasswordChange = moment(lastPasswordChange.toDate());\n\n      if (creationTime.diff(lastPasswordChange, 'days') >= 365.242199) {\n        securityRating = 50;\n      } else {\n        securityRating = 100;\n      }\n    }\n  } else {\n    if (moment().diff(creationTime, 'days') >= 365.242199) {\n      securityRating = 50;\n    } else {\n      securityRating = 100;\n    }\n  }\n\n  return securityRating;\n};\n\nexport default authentication;\n","import _ from 'lodash';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nimport firebase, { analytics, auth, firestore } from '../firebase';\n\nconst colors = {\n  red: {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n\n  pink: {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n\n  purple: {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n\n  deepPurple: {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n\n  indigo: {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n\n  blue: {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n\n  lightBlue: {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n\n  cyan: {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n\n  teal: {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n\n  green: {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n\n  lightGreen: {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n\n  lime: {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n\n  yellow: {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n\n  amber: {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n\n  orange: {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n\n  deepOrange: {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n\n  brown: {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n\n  gray: {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n\n  blueGray: {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n};\n\nconst types = {\n  light: {\n    id: 'light',\n    name: 'Light'\n  },\n\n  dark: {\n    id: 'dark',\n    name: 'Dark'\n  }\n};\n\nconst getColor = (colorId) => {\n  if (!colorId) {\n    return null;\n  }\n\n  colorId = _.camelCase(colorId);\n\n  return colors[colorId];\n};\n\nconst getType = (typeId) => {\n  if (!typeId) {\n    return null;\n  }\n\n  return types[typeId];\n};\n\nconst defaultPrimaryColor = getColor(process.env.REACT_APP_THEME_PRIMARY_COLOR);\nconst defaultSecondaryColor = getColor(process.env.REACT_APP_THEME_SECONDARY_COLOR);\nconst defaultType = getType(process.env.REACT_APP_THEME_TYPE);\n\nconst defaultTheme = createMuiTheme({\n  palette: {\n    primary: defaultPrimaryColor.import,\n    secondary: defaultSecondaryColor.import,\n    type: defaultType.id\n  },\n\n  primaryColor: defaultPrimaryColor,\n  secondaryColor: defaultSecondaryColor,\n  type: defaultType\n});\n\nconst theming = {};\n\ntheming.colors = colors;\ntheming.types = types;\n\ntheming.defaultPrimaryColor = defaultPrimaryColor;\ntheming.defaultSecondaryColor = defaultSecondaryColor;\ntheming.defaultType = defaultType;\n\ntheming.defaultTheme = defaultTheme;\n\n/**\n * Returns whether a theme is the default theme.\n * @param theme\n * @returns {boolean}\n */\ntheming.isDefaultTheme = (theme) => {\n  if (!theme) {\n    return false;\n  }\n\n  if (theme.primaryColor.id === defaultPrimaryColor.id &&\n      theme.secondaryColor.id === defaultSecondaryColor.id &&\n      theme.type.id === defaultType.id) {\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Creates a Material-UI theme from a JSON theme object.\n * @param theme\n * @returns {null|Theme}\n */\ntheming.createTheme = (theme) => {\n  if (!theme) {\n    return null;\n  }\n\n  let primaryColor = theme.primaryColor;\n  let secondaryColor = theme.secondaryColor;\n  let type = theme.type;\n\n  if (!primaryColor || !secondaryColor || !type) {\n    return null;\n  }\n\n  primaryColor = getColor(primaryColor);\n  secondaryColor = getColor(secondaryColor);\n  type = getType(type);\n\n  if (!primaryColor || !secondaryColor || !type) {\n    return null;\n  }\n\n  theme = createMuiTheme({\n    palette: {\n      primary: primaryColor.import,\n      secondary: secondaryColor.import,\n      type: type.id\n    },\n\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor,\n    type: type\n  });\n\n  return theme;\n};\n\n/**\n * Changes the theme for the current user.\n * @param theme\n * @returns {Promise<unknown>}\n */\ntheming.changeTheme = (theme) => {\n  return new Promise((resolve, reject) => {\n    if (!theme) {\n      reject();\n\n      return;\n    }\n\n    let primaryColor = theme.primaryColor;\n    let secondaryColor = theme.secondaryColor;\n    let type = theme.type;\n\n    if (!primaryColor || !secondaryColor || !type) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n    secondaryColor = getColor(secondaryColor);\n    type = getType(type);\n\n    if (!primaryColor || !secondaryColor || !type) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      theme: {\n        primaryColor: primaryColor.id,\n        secondaryColor: secondaryColor.id,\n        type: type.id\n      }\n    }).then((value) => {\n      analytics.logEvent('change_theme', {\n        value: {\n          primaryColor: primaryColor.id,\n          secondaryColor: secondaryColor.id,\n          type: type.id\n        }\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Changes the primary color for the current user.\n * @param primaryColor\n * @returns {Promise<unknown>}\n */\ntheming.changePrimaryColor = (primaryColor) => {\n  return new Promise((resolve, reject) => {\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      'theme.primaryColor': primaryColor.id\n    }).then((value) => {\n      analytics.logEvent('change_primary_color', {\n        value: primaryColor.id\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Changes the secondary color for the current user.\n * @param secondaryColor\n * @returns {Promise<unknown>}\n */\ntheming.changeSecondaryColor = (secondaryColor) => {\n  return new Promise((resolve, reject) => {\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    secondaryColor = getColor(secondaryColor);\n\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      'theme.secondaryColor': secondaryColor.id\n    }).then((value) => {\n      analytics.logEvent('change_secondary_color', {\n        value: secondaryColor.id\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Changes the type for the current user.\n * @param type\n * @returns {Promise<unknown>}\n */\ntheming.changeType = (type) => {\n  return new Promise((resolve, reject) => {\n    if (!type) {\n      reject();\n\n      return;\n    }\n\n    type = getType(type);\n\n    if (!type) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      'theme.type': type.id\n    }).then((value) => {\n      analytics.logEvent('change_type', {\n        value: type.id\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Resets the theme for the current user.\n * @returns {Promise<unknown>}\n */\ntheming.resetTheme = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      theme: firebase.firestore.FieldValue.delete()\n    }).then((value) => {\n      analytics.logEvent('reset_theme');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nexport default theming;\n","import React, {Component} from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass LaunchScreen extends Component {\n  render() {\n    return (\n      <Box position=\"absolute\" top=\"50%\" left=\"50%\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n}\n\nLaunchScreen.propTypes = {};\n\nexport default LaunchScreen;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport authentication from '../../services/authentication';\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  getAvatar = () => {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    const photoUrl = user.photoURL;\n\n    if (photoUrl) {\n      return (<Avatar alt=\"Avatar\" src={photoUrl} />);\n    }\n\n    const { userData } = this.props;\n\n    if (!userData) {\n      return <PersonIcon />;\n    }\n\n    const nameInitials = authentication.user.getNameInitials({\n      ...user,\n      ...userData\n    });\n\n    if (nameInitials) {\n      return <Avatar alt=\"Avatar\">{nameInitials}</Avatar>;\n    }\n\n    return <PersonIcon />;\n  };\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Properties\n    const { performingAction, user } = this.props;\n\n    // Events\n    const { onSignUpClick, onSignInClick } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Box flexGrow={1}>\n            <Typography color=\"inherit\" variant=\"h6\">{process.env.REACT_APP_NAME}</Typography>\n          </Box>\n\n          {user &&\n            <>\n              <IconButton color=\"inherit\" disabled={performingAction} onClick={this.openMenu}>\n                {this.getAvatar()}\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem disabled={performingAction} onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem disabled={performingAction} onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </>\n          }\n\n          {!user &&\n            <>\n              <Box mr={1}>\n                <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              </Box>\n\n              <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.defaultProps = {\n  performingAction: false\n};\n\nBar.propTypes = {\n  // Properties\n  performingAction: PropTypes.bool.isRequired,\n  user: PropTypes.object,\n  userData: PropTypes.object,\n\n  // Events\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default Bar;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n};\n\nclass EmptyState extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { icon, title, description, button } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon}\n        {title && <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>}\n        {description && <Typography color=\"textSecondary\" variant=\"subtitle1\" gutterBottom>{description}</Typography>}\n        {button}\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  button: PropTypes.element\n};\n\nexport default withStyles(styles)(EmptyState);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nimport EmptyState from '../EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: theme.spacing(12)\n  },\n\n  button: {\n    marginTop: theme.spacing(1)\n  },\n\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass HomeContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user } = this.props;\n\n    if (user) {\n      return (\n        <EmptyState\n          icon={<HomeIcon className={classes.emptyStateIcon} color=\"action\" />}\n          title=\"Home\"\n        />\n      );\n    }\n\n    return (\n      <EmptyState\n        title={process.env.REACT_APP_NAME}\n        description=\"The three musketeers, all in one pack in the form of a boilerplate app\"\n        button={\n          <Fab className={classes.button} color=\"secondary\" href=\"https://github.com/Phoqe/react-material-ui-firebase\" rel=\"noopener noreferrer\" target=\"_blank\" variant=\"extended\">\n            <GitHubCircleIcon className={classes.buttonIcon} />\n            GitHub\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nHomeContent.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  user: PropTypes.object\n};\n\nexport default withStyles(styles)(HomeContent);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport FindIcon from '@material-ui/icons/FindInPage';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: theme.spacing(12)\n  },\n\n  button: {\n    marginTop: theme.spacing(1)\n  },\n\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass NotFoundContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<FindIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Content Not Found\"\n        description=\"The requested URL was not found on this server\"\n        button={\n          <Fab className={classes.button} color=\"secondary\" component={Link} to=\"/\" variant=\"extended\">\n            <HomeIcon className={classes.buttonIcon} /> Go Home\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nNotFoundContent.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NotFoundContent);\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types';\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport HomeContent from '../HomeContent';\nimport NotFoundContent from '../NotFoundContent';\n\nclass Router extends Component {\n  render() {\n    // Properties\n    const { user } = this.props;\n\n    return (\n      <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomeContent user={user} />\n          </Route>\n\n          <Route>\n            <NotFoundContent />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nRouter.propTypes = {\n  // Properties\n  user: PropTypes.object\n};\n\nexport default Router;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { createMuiTheme, withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport MicrosoftIcon from 'mdi-material-ui/Microsoft';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport YahooIcon from 'mdi-material-ui/Yahoo';\n\nconst styles = (theme) => ({\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nclass AuthProviderList extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { gutterBottom, performingAction } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    const authProviders = [\n      {\n        providerId: 'facebook.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#3c5a99',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <FacebookBoxIcon />,\n        name: 'Facebook'\n      },\n      {\n        providerId: 'github.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#24292e',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <GitHubCircleIcon />,\n        name: 'GitHub'\n      },\n      {\n        providerId: 'google.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#4285f4',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <GoogleIcon />,\n        name: 'Google'\n      },\n      {\n        providerId: 'microsoft.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#f65314',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <MicrosoftIcon />,\n        name: 'Microsoft'\n      },\n      {\n        providerId: 'twitter.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#1da1f2',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <TwitterIcon />,\n        name: 'Twitter'\n      },\n      {\n        providerId: 'yahoo.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#410093',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <YahooIcon />,\n        name: 'Yahoo'\n      }\n    ];\n\n    if (gutterBottom) {\n      return (\n        <Grid className={classes.grid} container direction=\"column\" spacing={1}>\n          {authProviders.map((authProvider) => {\n            return (\n              <Grid key={authProvider.providerId} item>\n                <MuiThemeProvider theme={authProvider.theme}>\n                  <Button\n                    color=\"primary\"\n                    disabled={performingAction}\n                    fullWidth\n                    startIcon={authProvider.icon}\n                    variant=\"contained\"\n                    onClick={() => onAuthProviderClick(authProvider.providerId)}>\n                    {authProvider.name}\n                  </Button>\n                </MuiThemeProvider>\n              </Grid>\n            );\n          })}\n        </Grid>\n      );\n    }\n\n    return (\n      <Grid container direction=\"column\" spacing={1}>\n        {authProviders.map((authProvider) => {\n          return (\n            <Grid key={authProvider.providerId} item>\n              <MuiThemeProvider theme={authProvider.theme}>\n                <Button\n                  color=\"primary\"\n                  disabled={performingAction}\n                  fullWidth\n                  startIcon={authProvider.icon}\n                  variant=\"contained\"\n                  onClick={() => onAuthProviderClick(authProvider.providerId)}>\n                  {authProvider.name}\n                </Button>\n              </MuiThemeProvider>\n            </Grid>\n          );\n        })}\n      </Grid>\n    );\n  }\n}\n\nAuthProviderList.defaultProps = {\n  gutterBottom: false,\n  performingAction: false\n};\n\nAuthProviderList.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  gutterBottom: PropTypes.bool,\n  performingAction: PropTypes.bool,\n\n  // Events\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AuthProviderList);\n","const constraints = {\n  firstName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  lastName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  username: {\n    length: {\n      minimum: 2,\n      maximum: 20\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  emailAddress: {\n    email: {\n      message: '^E-mail address is invalid'\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  emailAddressConfirmation: {\n    email: {\n      message: '^E-mail address confirmation is invalid'\n    },\n\n    equality: {\n      attribute: 'emailAddress',\n      message: '^E-mail address confirmation is not equal to e-mail address'\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  password: {\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  passwordConfirmation: {\n    equality: 'password',\n\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n};\n\nexport default constraints;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthProviderList from '../AuthProviderList';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = (theme) => ({\n  dialogContent: {\n    overflowY: 'hidden'\n  },\n\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: 'auto'\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n\n  emailAddress: '',\n  emailAddressConfirmation: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const {\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress,\n      emailAddressConfirmation: emailAddressConfirmation,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }, {\n      emailAddress: constraints.emailAddress,\n      emailAddressConfirmation: constraints.emailAddressConfirmation,\n      password: constraints.password,\n      passwordConfirmation: constraints.passwordConfirmation\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState({\n        performingAction: true,\n\n        errors: null\n      }, () => {\n        authentication.signUpWithEmailAddressAndPassword(emailAddress, password).then((value) => {\n          this.props.dialogProps.onClose();\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            case 'auth/email-already-in-use':\n            case 'auth/invalid-email':\n            case 'auth/operation-not-allowed':\n            case 'auth/weak-password':\n              this.props.openSnackbar(message);\n              return;\n\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    }\n  };\n\n  signInWithAuthProvider = (providerId) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.signInWithAuthProvider(providerId).then((value) => {\n        this.props.dialogProps.onClose(() => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.props.openSnackbar(message);\n            return;\n\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleKeyPress = (event) => {\n    const {\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    if (!emailAddress ||\n      !emailAddressConfirmation ||\n      !password ||\n      !passwordConfirmation) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handleEmailAddressConfirmationChange = (event) => {\n    const emailAddressConfirmation = event.target.value;\n\n    this.setState({\n      emailAddressConfirmation: emailAddressConfirmation\n    });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const {\n      performingAction,\n\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation,\n\n      errors\n    } = this.state;\n\n    return (\n      <Dialog fullWidth maxWidth=\"sm\" {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <Hidden smDown>\n          <DialogContent className={classes.dialogContent}>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <AuthProviderList\n                  performingAction={performingAction}\n\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={7}>\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddressConfirmation)}\n                      fullWidth\n                      helperText={(errors && errors.emailAddressConfirmation) ? errors.emailAddressConfirmation[0] : ''}\n                      label=\"E-mail address confirmation\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddressConfirmation}\n                      variant=\"outlined\"\n\n                      onChange={this.handleEmailAddressConfirmationChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"new-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={(errors && errors.password) ? errors.password[0] : ''}\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.passwordConfirmation)}\n                      fullWidth\n                      helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n                      label=\"Password confirmation\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={passwordConfirmation}\n                      variant=\"outlined\"\n\n                      onChange={this.handlePasswordConfirmationChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <Hidden mdUp>\n          <DialogContent>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddressConfirmation)}\n                  fullWidth\n                  helperText={(errors && errors.emailAddressConfirmation) ? errors.emailAddressConfirmation[0] : ''}\n                  label=\"E-mail address confirmation\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddressConfirmation}\n                  variant=\"outlined\"\n\n                  onChange={this.handleEmailAddressConfirmationChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"new-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={(errors && errors.password) ? errors.password[0] : ''}\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.passwordConfirmation)}\n                  fullWidth\n                  helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n                  label=\"Password confirmation\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={passwordConfirmation}\n                  variant=\"outlined\"\n\n                  onChange={this.handlePasswordConfirmationChange}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={dialogProps.onClose}>Cancel</Button>\n\n          <Button\n            color=\"primary\"\n            disabled={\n              !emailAddress ||\n              !emailAddressConfirmation ||\n              !password ||\n              !passwordConfirmation ||\n              performingAction\n            }\n            variant=\"contained\"\n\n            onClick={this.signUp}>\n            Sign up\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignUpDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthProviderList from '../AuthProviderList';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = (theme) => ({\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: 'auto'\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.setState({\n          performingAction: true\n        }, () => {\n          authentication.resetPassword(emailAddress).then((value) => {\n            this.props.openSnackbar(`Sent password reset e-mail to ${emailAddress}`);\n          }).catch((reason) => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              case 'auth/invalid-email':\n              case 'auth/missing-android-pkg-name':\n              case 'auth/missing-continue-uri':\n              case 'auth/missing-ios-bundle-id':\n              case 'auth/invalid-continue-uri':\n              case 'auth/unauthorized-continue-uri':\n              case 'auth/user-not-found':\n                this.props.openSnackbar(message);\n                return;\n\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          }).finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n        });\n      });\n    }\n  };\n\n  signIn = () => {\n    const { emailAddress, password } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress,\n      password: password\n    }, {\n      emailAddress: constraints.emailAddress,\n      password: constraints.password\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState({\n        performingAction: true,\n\n        errors: null\n      }, () => {\n        authentication.signIn(emailAddress, password).then((value) => {\n          this.props.dialogProps.onClose(() => {\n            const user = value.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            case 'auth/invalid-email':\n            case 'auth/user-disabled':\n            case 'auth/user-not-found':\n            case 'auth/wrong-password':\n              this.props.openSnackbar(message);\n              return;\n\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    }\n  };\n\n  signInWithAuthProvider = (providerId) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.signInWithAuthProvider(providerId).then((value) => {\n        this.props.dialogProps.onClose(() => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.props.openSnackbar(message);\n            return;\n\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleKeyPress = (event) => {\n    const { emailAddress, password } = this.state;\n\n    if (!emailAddress || !password) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const {\n      performingAction,\n\n      emailAddress,\n      password,\n\n      errors\n    } = this.state;\n\n    return (\n      <Dialog fullWidth maxWidth=\"sm\" {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <Hidden xsDown>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <AuthProviderList\n                  performingAction={performingAction}\n\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={7}>\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"current-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={(errors && errors.password) ? errors.password[0] : ''}\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"current-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={(errors && errors.password) ? errors.password[0] : ''}\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n            </Grid>\n          </Hidden>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={dialogProps.onClose}>Cancel</Button>\n\n          <Button\n            color=\"primary\"\n            disabled={!emailAddress || performingAction}\n            variant=\"outlined\"\n\n            onClick={this.resetPassword}>\n            Reset password\n          </Button>\n\n          <Button\n            color=\"primary\"\n            disabled={(!emailAddress || !password) || performingAction}\n            variant=\"contained\"\n\n            onClick={this.signIn}>\n            Sign in\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignInDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport Avatar from '@material-ui/core/Avatar';\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = (theme) => ({\n  dialogContent: {\n    paddingTop: theme.spacing(2)\n  },\n\n  badge: {\n    top: theme.spacing(2),\n    right: -theme.spacing(2)\n  },\n\n  loadingBadge: {\n    top: '50%',\n    right: '50%'\n  },\n\n  avatar: {\n    marginRight: 'auto',\n    marginLeft: 'auto',\n\n    width: theme.spacing(14),\n    height: theme.spacing(14)\n  },\n\n  nameInitials: {\n    cursor: 'default'\n  },\n\n  personIcon: {\n    fontSize: theme.spacing(7)\n  },\n\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n\n    minHeight: 'initial'\n  }\n});\n\nconst initialState = {\n  profileCompletion: 0,\n  securityRating: 0,\n\n  showingField: '',\n\n  avatar: null,\n  avatarUrl: '',\n  firstName: '',\n  lastName: '',\n  username: '',\n  emailAddress: '',\n\n  performingAction: false,\n  loadingAvatar: false,\n  sentVerificationEmail: false,\n\n  errors: null\n};\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  getNameInitialsOrIcon = () => {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    const { classes, userData } = this.props;\n\n    if (!userData) {\n      return <PersonIcon className={classes.personIcon} />;\n    }\n\n    const nameInitials = authentication.user.getNameInitials({\n      ...user,\n      ...userData\n    });\n\n    if (nameInitials) {\n      return nameInitials;\n    }\n\n    return <PersonIcon className={classes.personIcon} />;\n  };\n\n  uploadAvatar = () => {\n    const { avatar } = this.state;\n\n    if (!avatar) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true,\n      loadingAvatar: true\n    }, () => {\n      authentication.changeAvatar(avatar).then((value) => {\n        const { user, userData } = this.props;\n\n        this.setState({\n          profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n        }, () => {\n          this.props.openSnackbar('Changed avatar');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false,\n          loadingAvatar: false,\n\n          avatar: null,\n          avatarUrl: ''\n        });\n      });\n    });\n  };\n\n  removeAvatar = () => {\n    const { user } = this.props;\n    const { avatar, avatarUrl } = this.state;\n\n    if (!user.photoURL && !avatar && !avatarUrl) {\n      return;\n    }\n\n    if ((!user.photoURL && avatar && avatarUrl) || (user.photoURL && avatar && avatarUrl)) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatar: null,\n        avatarUrl: ''\n      }, () => {\n        this.props.openSnackbar(`Removed image “${avatar.name}”`, 5);\n      });\n    } else if (user.photoURL && !avatar && !avatarUrl) {\n      this.setState({\n        performingAction: true,\n        loadingAvatar: true\n      }, () => {\n        authentication.removeAvatar().then((value) => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.props.openSnackbar('Removed avatar');\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false,\n            loadingAvatar: false\n          });\n        });\n      });\n    }\n  };\n\n  showField = (fieldId) => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = (callback) => {\n    this.setState({\n      showingField: '',\n\n      firstName: '',\n      lastName: '',\n      username: '',\n      emailAddress: '',\n\n      errors: null\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  changeFirstName = () => {\n    const { firstName } = this.state;\n\n    const errors = validate({\n      firstName: firstName\n    }, {\n      firstName: constraints.firstName\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (firstName === userData.firstName) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeFirstName(firstName).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed first name');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeLastName = () => {\n    const { lastName } = this.state;\n\n    const errors = validate({\n      lastName: lastName\n    }, {\n      lastName: constraints.lastName\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (lastName === userData.lastName) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeLastName(lastName).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed last name');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeUsername = () => {\n    const { username } = this.state;\n\n    const errors = validate({\n      username: username\n    }, {\n      username: constraints.username\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (username === userData.username) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeUsername(username).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed username');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeEmailAddress = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { user } = this.props;\n\n      if (emailAddress === user.email) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeEmailAddress(emailAddress).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed e-mail address');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.verifyEmailAddress().then(() => {\n        this.setState({\n          sentVerificationEmail: true\n        }, () => {\n          this.props.openSnackbar('Sent verification e-mail');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  deleteAccount = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.deleteAccount().then(() => {\n        this.props.openSnackbar('Deleted account');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  changeField = (fieldId) => {\n    switch (fieldId) {\n      case 'first-name':\n        this.changeFirstName();\n        return;\n\n      case 'last-name':\n        this.changeLastName();\n        return;\n\n      case 'username':\n        this.changeUsername();\n        return;\n\n      case 'email-address':\n        this.changeEmailAddress();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === 'Escape') {\n      this.hideFields();\n    } else if (key === 'Enter') {\n      this.changeField(fieldId);\n    }\n  };\n\n  handleAvatarChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const files = event.target.files;\n\n    if (!files) {\n      return;\n    }\n\n    const avatar = files[0];\n\n    if (!avatar) {\n      return;\n    }\n\n    const fileTypes = [\n      'image/gif',\n      'image/jpeg',\n      'image/png',\n      'image/webp',\n      'image/svg+xml'\n    ];\n\n    if (!fileTypes.includes(avatar.type)) {\n      return;\n    }\n\n    if (avatar.size > (20 * 1024 * 1024)) {\n      return;\n    }\n\n    this.setState({\n      avatar: avatar,\n      avatarUrl: URL.createObjectURL(avatar)\n    }, () => {\n      this.props.openSnackbar(`Selected image “${avatar.name}”`, 5);\n    });\n  };\n\n  handleFirstNameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const firstName = event.target.value;\n\n    this.setState({\n      firstName: firstName\n    });\n  };\n\n  handleLastNameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const lastName = event.target.value;\n\n    this.setState({\n      lastName: lastName\n    });\n  };\n\n  handleUsernameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  handleEmailAddressChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const {\n      user,\n      userData\n    } = this.props;\n\n    // Events\n    const {\n      onDeleteAccountClick\n    } = this.props;\n\n    const {\n      profileCompletion,\n      securityRating,\n\n      showingField,\n\n      performingAction,\n      loadingAvatar,\n\n      avatar,\n      avatarUrl,\n      firstName,\n      lastName,\n      username,\n      emailAddress,\n\n      sentVerificationEmail,\n\n      errors\n    } = this.state;\n\n    const hasFirstName = userData && userData.firstName;\n    const hasLastName = userData && userData.lastName;\n    const hasUsername = userData && userData.username;\n\n    return (\n      <DialogContent classes={{ root: classes.dialogContent }}>\n        <Box mb={2}>\n          <Hidden xsDown>\n            <Grid alignItems=\"center\" container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Box mb={1.5}>\n                    {(avatar && avatarUrl) &&\n                      <Badge classes={{ badge: classes.badge }} badgeContent={\n                        <Tooltip title=\"Remove\">\n                          <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                            <CloseIcon fontSize=\"small\" />\n                          </Fab>\n                        </Tooltip>\n                      }>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <Fade\n                              style={{ transitionDelay: '1s' }}\n                              in={loadingAvatar}\n                              unmountOnExit>\n                              <CircularProgress size={120} thickness={1.8} />\n                            </Fade>\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                        }\n                      </Badge>\n                    }\n\n                    {(!avatar && !avatarUrl) &&\n                      <>\n                        {user.photoURL &&\n                          <Badge classes={{ badge: classes.badge }} badgeContent={\n                            <Tooltip title=\"Remove\">\n                              <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                                <CloseIcon fontSize=\"small\" />\n                              </Fab>\n                            </Tooltip>\n                          }>\n                            {loadingAvatar &&\n                              <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                                <Fade\n                                  style={{ transitionDelay: '1s' }}\n                                  in={loadingAvatar}\n                                  unmountOnExit>\n                                  <CircularProgress size={120} thickness={1.8} />\n                                </Fade>\n                              }>\n                                <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                              </Badge>\n                            }\n\n                            {!loadingAvatar &&\n                              <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                            }\n                          </Badge>\n                        }\n\n                        {!user.photoURL &&\n                          <>\n                            {loadingAvatar &&\n                              <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                                <Fade\n                                  style={{ transitionDelay: '1s' }}\n                                  in={loadingAvatar}\n                                  unmountOnExit>\n                                  <CircularProgress size={120} thickness={1.8} />\n                                </Fade>\n                              }>\n                                <Avatar className={classes.avatar} alt=\"Avatar\">\n                                  <Typography className={classes.nameInitials} variant=\"h2\">\n                                    {this.getNameInitialsOrIcon()}\n                                  </Typography>\n                                </Avatar>\n                              </Badge>\n                            }\n\n                            {!loadingAvatar &&\n                              <Avatar className={classes.avatar} alt=\"Avatar\">\n                                <Typography className={classes.nameInitials} variant=\"h2\">\n                                  {this.getNameInitialsOrIcon()}\n                                </Typography>\n                              </Avatar>\n                            }\n                          </>\n                        }\n                      </>\n                    }\n                  </Box>\n\n                  {(avatar && avatarUrl) &&\n                    <Button color=\"primary\" disabled={performingAction} startIcon={<CloudUploadIcon />} variant=\"contained\" onClick={this.uploadAvatar}>\n                      Upload\n                    </Button>\n                  }\n\n                  {(!avatar && !avatarUrl) &&\n                    <>\n                      <input\n                        id=\"avatar-input\"\n                        type=\"file\"\n                        hidden\n                        accept=\"image/*\"\n\n                        onChange={this.handleAvatarChange}\n                      />\n\n                      <label htmlFor=\"avatar-input\">\n                        <Button color=\"primary\" component=\"span\" disabled={performingAction} startIcon={<PhotoIcon />} variant=\"contained\">\n                          Choose...\n                        </Button>\n                      </label>\n                    </>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile Completion</Typography>\n\n                  {profileCompletion === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {profileCompletion === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {(profileCompletion !== 0 && profileCompletion !== 100)  &&\n                    <Typography color=\"secondary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security Rating</Typography>\n\n                  {securityRating === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {securityRating === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {(securityRating !== 0 && securityRating !== 100) &&\n                    <Typography color=\"secondary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <Box textAlign=\"center\" mb={3}>\n              <Box mb={1.5}>\n                {(avatar && avatarUrl) &&\n                  <Badge classes={{ badge: classes.badge }} badgeContent={\n                    <Tooltip title=\"Remove\">\n                      <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                        <CloseIcon fontSize=\"small\" />\n                      </Fab>\n                    </Tooltip>\n                  }>\n                    {loadingAvatar &&\n                      <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                        <Fade\n                          style={{ transitionDelay: '1s' }}\n                          in={loadingAvatar}\n                          unmountOnExit>\n                          <CircularProgress size={120} thickness={1.8} />\n                        </Fade>\n                      }>\n                        <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                      </Badge>\n                    }\n\n                    {!loadingAvatar &&\n                      <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                    }\n                  </Badge>\n                }\n\n                {(!avatar && !avatarUrl) &&\n                  <>\n                    {user.photoURL &&\n                      <Badge classes={{ badge: classes.badge }} badgeContent={\n                        <Tooltip title=\"Remove\">\n                          <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                            <CloseIcon fontSize=\"small\" />\n                          </Fab>\n                        </Tooltip>\n                      }>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <CircularProgress size={120} thickness={1.8} />\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                        }\n                      </Badge>\n                    }\n\n                    {!user.photoURL &&\n                      <>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <Fade\n                              style={{ transitionDelay: '1s' }}\n                              in={loadingAvatar}\n                              unmountOnExit>\n                              <CircularProgress size={120} thickness={1.8} />\n                            </Fade>\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\">\n                              <Typography className={classes.nameInitials} variant=\"h2\">\n                                {this.getNameInitialsOrIcon()}\n                              </Typography>\n                            </Avatar>\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\">\n                            <Typography className={classes.nameInitials} variant=\"h2\">\n                              {this.getNameInitialsOrIcon()}\n                            </Typography>\n                          </Avatar>\n                        }\n                      </>\n                    }\n                  </>\n                }\n              </Box>\n\n              {(avatar && avatarUrl) &&\n                <Button color=\"primary\" disabled={performingAction} startIcon={<CloudUploadIcon />} variant=\"contained\" onClick={this.uploadAvatar}>\n                  Upload\n                </Button>\n              }\n\n              {(!avatar && !avatarUrl) &&\n                <>\n                  <input\n                    id=\"avatar-input\"\n                    type=\"file\"\n                    hidden\n                    accept=\"image/*\"\n\n                    onChange={this.handleAvatarChange}\n                  />\n\n                  <label htmlFor=\"avatar-input\">\n                    <Button color=\"primary\" component=\"span\" disabled={performingAction} startIcon={<PhotoIcon />} variant=\"contained\">\n                      Choose...\n                    </Button>\n                  </label>\n                </>\n              }\n            </Box>\n\n            <Grid container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile Completion</Typography>\n\n                  {profileCompletion === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {profileCompletion === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {(profileCompletion !== 0 && profileCompletion !== 100)  &&\n                    <Typography color=\"secondary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security Rating</Typography>\n\n                  {securityRating === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {securityRating === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {(securityRating !== 0 && securityRating !== 100) &&\n                    <Typography color=\"secondary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n        </Box>\n\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasFirstName &&\n              <ListItemIcon>\n                <Tooltip title=\"No first name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'first-name' &&\n              <TextField\n                autoComplete=\"given-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.firstName)}\n                fullWidth\n                helperText={(errors && errors.firstName) ? errors.firstName[0] : 'Press Enter to change your first name'}\n                label=\"First name\"\n                placeholder={hasFirstName && userData.firstName}\n                required\n                type=\"text\"\n                value={firstName}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'first-name')}\n\n                onChange={this.handleFirstNameChange}\n              />\n            }\n\n            {showingField !== 'first-name' &&\n              <>\n                <ListItemText\n                  primary=\"First name\"\n                  secondary={hasFirstName ? userData.firstName : 'You don’t have a first name'}\n                />\n\n                <ListItemSecondaryAction>\n                  {hasFirstName &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('first-name')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!hasFirstName &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('first-name')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasLastName &&\n              <ListItemIcon>\n                <Tooltip title=\"No last name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'last-name' &&\n              <TextField\n                autoComplete=\"family-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.lastName)}\n                fullWidth\n                helperText={(errors && errors.lastName) ? errors.lastName[0] : 'Press Enter to change your last name'}\n                label=\"Last name\"\n                placeholder={hasLastName && userData.lastName}\n                required\n                type=\"text\"\n                value={lastName}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'last-name')}\n\n                onChange={this.handleLastNameChange}\n              />\n            }\n\n            {showingField !== 'last-name' &&\n              <>\n                <ListItemText\n                  primary=\"Last name\"\n                  secondary={hasLastName ? userData.lastName : 'You don’t have a last name'}\n                />\n\n                <ListItemSecondaryAction>\n                  {hasLastName &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('last-name')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!hasLastName &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('last-name')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonOutlineIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasUsername &&\n              <ListItemIcon>\n                <Tooltip title=\"No username\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'username' &&\n              <TextField\n                autoComplete=\"username\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.username)}\n                fullWidth\n                helperText={(errors && errors.username) ? errors.username[0] : 'Press Enter to change your username'}\n                label=\"Username\"\n                placeholder={hasUsername && userData.username}\n                required\n                type=\"text\"\n                value={username}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'username')}\n\n                onChange={this.handleUsernameChange}\n              />\n            }\n\n            {showingField !== 'username' &&\n              <>\n                <ListItemText\n                  primary=\"Username\"\n                  secondary={hasUsername ? userData.username : 'You don’t have a username'}\n                />\n\n                <ListItemSecondaryAction>\n                  {hasUsername &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('username')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!hasUsername &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('username')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <EmailIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {user.email &&\n              <ListItemIcon>\n                <>\n                  {user.emailVerified &&\n                    <Tooltip title=\"Verified\">\n                      <CheckIcon color=\"primary\" />\n                    </Tooltip>\n                  }\n\n                  {!user.emailVerified &&\n                    <Tooltip title=\"Not verified\">\n                      <WarningIcon color=\"error\" />\n                    </Tooltip>\n                  }\n                </>\n              </ListItemIcon>\n            }\n\n            {!user.email &&\n              <ListItemIcon>\n                <Tooltip title=\"No e-mail address\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'email-address' &&\n              <TextField\n                autoComplete=\"email\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.emailAddress)}\n                fullWidth\n                helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : 'Press Enter to change your e-mail address'}\n                label=\"E-mail address\"\n                placeholder={user.email}\n                required\n                type=\"email\"\n                value={emailAddress}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'email-address')}\n\n                onChange={this.handleEmailAddressChange}\n              />\n            }\n\n            {showingField !== 'email-address' &&\n              <>\n                <ListItemText\n                  primary=\"E-mail address\"\n                  secondary={user.email ? user.email : 'You don’t have an e-mail address'}\n                />\n\n                {(user.email && !user.emailVerified) &&\n                  <Box clone mr={7}>\n                    <ListItemSecondaryAction>\n                      <Tooltip title=\"Verify\">\n                        <div>\n                          <IconButton color=\"secondary\" disabled={performingAction || sentVerificationEmail} onClick={this.verifyEmailAddress}>\n                            <CheckIcon />\n                          </IconButton>\n                        </div>\n                      </Tooltip>\n                    </ListItemSecondaryAction>\n                  </Box>\n                }\n\n                <ListItemSecondaryAction>\n                  {user.email &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('email-address')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!user.email &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('email-address')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <AccessTimeIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <Hidden xsDown>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format('LLLL')}\n              />\n            </Hidden>\n\n            <Hidden smUp>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format('llll')}\n              />\n            </Hidden>\n          </ListItem>\n\n          <Box mt={1} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <DeleteForeverIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Delete account\"\n              secondary=\"Accounts can’t be recovered\"\n            />\n\n            <ListItemSecondaryAction>\n              <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onDeleteAccountClick}>Delete</Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n\n  componentDidMount() {\n    const { user, userData } = this.props;\n\n    this.setState({\n      profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData }),\n      securityRating: authentication.user.getSecurityRating(user, userData)\n    });\n  }\n\n  componentWillUnmount() {\n    const { avatarUrl } = this.state;\n\n    if (avatarUrl) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatarUrl: ''\n      });\n    }\n  }\n}\n\nAccountTab.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport Box from '@material-ui/core/Box';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Button from '@material-ui/core/Button';\n\nimport FiberManualRecord from '@material-ui/icons/FiberManualRecord';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport FormatColorResetIcon from '@material-ui/icons/FormatColorReset';\n\nimport theming from '../../services/theming';\n\nclass AppearanceTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n  handlePrimaryColorChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const primaryColor = event.target.value;\n\n    if (!primaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.primaryColor.id === primaryColor) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeTheme({\n        primaryColor: primaryColor,\n        secondaryColor: theme.secondaryColor.id,\n        type: theme.type.id\n      }).then((value) => {\n        this.props.openSnackbar('Changed primary color');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleSecondaryColorChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const secondaryColor = event.target.value;\n\n    if (!secondaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.secondaryColor.id === secondaryColor) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeTheme({\n        primaryColor: theme.primaryColor.id,\n        secondaryColor: secondaryColor,\n        type: theme.type.id\n      }).then((value) => {\n        this.props.openSnackbar('Changed secondary color');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleTypeChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const type = event.target.value;\n\n    if (!type) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.type.id === type) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeTheme({\n        primaryColor: theme.primaryColor.id,\n        secondaryColor: theme.secondaryColor.id,\n        type: type\n      }).then((value) => {\n        this.props.openSnackbar('Changed type');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleResetClick = () => {\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theming.isDefaultTheme(theme)) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.resetTheme().then((value) => {\n        this.props.openSnackbar('Reset theme');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    if (!theme) {\n      return null;\n    }\n\n    const { performingAction } = this.state;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <FiberManualRecord color=\"primary\" />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Primary color</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.primaryColor.id}\n\n                    onChange={this.handlePrimaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>{color.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.primaryColor.id}\n\n                    onChange={this.handlePrimaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <FiberManualRecord color=\"secondary\" />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Secondary color</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.secondaryColor.id}\n\n                    onChange={this.handleSecondaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>{color.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.secondaryColor.id}\n\n                    onChange={this.handleSecondaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <InvertColorsIcon />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Type</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.type.id}\n\n                    onChange={this.handleTypeChange}>\n                    {Object.keys(theming.types).map((type) => {\n                      type = theming.types[type];\n\n                      return (\n                        <option key={type.id} value={type.id}>{type.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.type.id}\n\n                    onChange={this.handleTypeChange}>\n                    {Object.keys(theming.types).map((type) => {\n                      type = theming.types[type];\n\n                      return (\n                        <MenuItem key={type.id} value={type.id}>{type.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mt={2} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <FormatColorResetIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Reset theme\"\n              secondary=\"Changes will be reset\"\n            />\n\n            <ListItemSecondaryAction>\n              <Button\n                color=\"secondary\"\n                disabled={theming.isDefaultTheme(theme) || performingAction}\n                variant=\"contained\"\n\n                onClick={this.handleResetClick}>\n                Reset\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nAppearanceTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default AppearanceTab;\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport LinkIcon from '@material-ui/icons/Link';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\n\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport MicrosoftIcon from 'mdi-material-ui/Microsoft';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport YahooIcon from 'mdi-material-ui/Yahoo';\n\nimport authentication from '../../services/authentication';\n\nclass LinksTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n\n  linkAuthProvider = (authProvider) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.linkAuthProvider(authProvider.providerId).then((value) => {\n        this.props.openSnackbar(`${authProvider.name} linked`, 5);\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  unlinkAuthProvider = (authProvider) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.unlinkAuthProvider(authProvider.providerId).then((value) => {\n        this.props.openSnackbar(`${authProvider.name} unlinked`, 4);\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    const { performingAction } = this.state;\n\n    const authProviders = [\n      {\n        providerId: 'facebook.com',\n        color: '#3c5a99',\n        icon: <FacebookBoxIcon />,\n        name: 'Facebook'\n      },\n      {\n        providerId: 'github.com',\n        color: '#24292e',\n        icon: <GitHubCircleIcon />,\n        name: 'GitHub'\n      },\n      {\n        providerId: 'google.com',\n        color: '#4285f4',\n        icon: <GoogleIcon />,\n        name: 'Google'\n      },\n      {\n        providerId: 'microsoft.com',\n        color: '#f65314',\n        icon: <MicrosoftIcon />,\n        name: 'Microsoft'\n      },\n      {\n        providerId: 'twitter.com',\n        color: '#1da1f2',\n        icon: <TwitterIcon />,\n        name: 'Twitter'\n      },\n      {\n        providerId: 'yahoo.com',\n        color: '#410093',\n        icon: <YahooIcon />,\n        name: 'Yahoo'\n      }\n    ];\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          {authProviders.map((authProvider) => {\n            const authProviderData = authentication.authProviderData(authProvider.providerId);\n            let identifier = null;\n\n            if (authProviderData) {\n              const displayName = authProviderData.displayName;\n              const emailAddress = authProviderData.email;\n              const phoneNumber = authProviderData.phoneNumber;\n\n              identifier = displayName || emailAddress || phoneNumber;\n            }\n\n            return (\n              <ListItem key={authProvider.providerId}>\n                <ListItemIcon>\n                  <Box color={theme.type.id === 'light' ? authProvider.color : null}>\n                    {authProvider.icon}\n                  </Box>\n                </ListItemIcon>\n\n                {authProviderData &&\n                  <ListItemText\n                    primary={authProvider.name}\n                    secondary={identifier}\n                  />\n                }\n\n                {!authProviderData &&\n                  <ListItemText\n                    primary={authProvider.name}\n                  />\n                }\n\n                <ListItemSecondaryAction>\n                  {authProviderData &&\n                    <Tooltip title=\"Unlink\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.unlinkAuthProvider(authProvider)}>\n                          <LinkOffIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!authProviderData &&\n                    <Tooltip title=\"Link\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.linkAuthProvider(authProvider)}>\n                          <LinkIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nLinksTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default LinksTab;\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport validate from 'validate.js';\nimport moment from 'moment';\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport LockIcon from '@material-ui/icons/Lock';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst initialState = {\n  showingField: '',\n\n  password: '',\n  passwordConfirmation: '',\n\n  performingAction: false,\n\n  errors: null\n};\n\nclass SecurityTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  showField = (fieldId) => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = (callback) => {\n    this.setState({\n      showingField: '',\n\n      password: '',\n      passwordConfirmation: '',\n\n      errors: null\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  changeField = (fieldId) => {\n    switch (fieldId) {\n      case 'password':\n        const { password } = this.state;\n\n        const errors = validate({\n          password: password\n        }, {\n          password: constraints.password\n        });\n\n        if (errors) {\n          this.setState({\n            errors: errors\n          });\n\n          return;\n        }\n\n        this.setState({\n          errors: null\n        }, () => {\n          this.showField('password-confirmation');\n        });\n        return;\n\n      case 'password-confirmation':\n        this.changePassword();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  changePassword = () => {\n    const { password, passwordConfirmation } = this.state;\n\n    const errors = validate({\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }, {\n      password: constraints.password,\n      passwordConfirmation: constraints.passwordConfirmation\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changePassword(password).then(() => {\n          this.hideFields(() => {\n            this.props.openSnackbar('Changed password');\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === 'Escape') {\n      this.hideFields();\n    } else if (key === 'Enter') {\n      this.changeField(fieldId);\n    }\n  };\n\n  handlePasswordChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Properties\n    const { userData } = this.props;\n\n    const {\n      showingField,\n\n      password,\n      passwordConfirmation,\n\n      performingAction,\n\n      errors\n    } = this.state;\n\n    const hasChangedPassword = userData && userData.lastPasswordChange;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <LockIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {showingField === 'password' &&\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.password)}\n                fullWidth\n                helperText={(errors && errors.password) ? errors.password[0] : 'Press Enter to change your password'}\n                label=\"Password\"\n                required\n                type=\"password\"\n                value={password}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'password')}\n\n                onChange={this.handlePasswordChange}\n              />\n            }\n\n            {showingField === 'password-confirmation' &&\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.passwordConfirmation)}\n                fullWidth\n                helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : 'Press Enter to change your password'}\n                label=\"Password confirmation\"\n                required\n                type=\"password\"\n                value={passwordConfirmation}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'password-confirmation')}\n\n                onChange={this.handlePasswordConfirmationChange}\n              />\n            }\n\n            {(showingField !== 'password' && showingField !== 'password-confirmation') &&\n              <>\n                <Hidden xsDown>\n                  <ListItemText\n                    primary=\"Password\"\n                    secondary={hasChangedPassword ? `Last changed ${moment(userData.lastPasswordChange.toDate()).format('LL')}` : 'Never changed'}\n                  />\n                </Hidden>\n\n                <Hidden smUp>\n                  <ListItemText\n                    primary=\"Password\"\n                    secondary={hasChangedPassword ? `Last changed ${moment(userData.lastPasswordChange.toDate()).format('ll')}` : 'Never changed'}\n                  />\n                </Hidden>\n\n                <ListItemSecondaryAction>\n                  <Tooltip title=\"Change\">\n                    <div>\n                      <IconButton disabled={performingAction} onClick={() => this.showField('password')}>\n                        <EditIcon />\n                      </IconButton>\n                    </div>\n                  </Tooltip>\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nSecurityTab.propTypes = {\n  // Properties\n  userData: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default SecurityTab;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport LinkIcon from '@material-ui/icons/Link';\nimport SecurityIcon from '@material-ui/icons/Security';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport AccountTab from '../AccountTab';\nimport AppearanceTab from '../AppearanceTab';\nimport LinksTab from '../LinksTab';\nimport SecurityTab from '../SecurityTab';\n\nconst styles = (theme) => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  tabs: {\n    display: 'initial'\n  }\n});\n\nconst tabs = [\n  {\n    key: 'account',\n    icon: <AccountCircleIcon />,\n    label: 'Account'\n  },\n\n  {\n    key: 'appearance',\n    icon: <PaletteIcon />,\n    label: 'Appearance'\n  },\n\n  {\n    key: 'links',\n    icon: <LinkIcon />,\n    label: 'Links'\n  },\n\n  {\n    key: 'security',\n    icon: <SecurityIcon />,\n    label: 'Security'\n  }\n];\n\nconst initialState = {\n  selectedTab: 0\n};\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleTabChange = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  handleIndexChange = (index) => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const {\n      user,\n      userData,\n      theme\n    } = this.props;\n\n    // Custom Functions\n    const {\n      openSnackbar\n    } = this.props;\n\n    // Custom Functions\n    const {\n      onDeleteAccountClick\n    } = this.props;\n\n    const { selectedTab } = this.state;\n\n    return (\n      <Dialog {...dialogProps} onExited={this.handleExited}>\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">\n            Settings\n          </Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton className={classes.closeButton} onClick={dialogProps.onClose}>\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <Hidden xsDown>\n          <Tabs\n            classes={{ root: classes.tabs }}\n            style={{ overflow: 'initial', minHeight: 'initial' }}\n\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            value={selectedTab}\n            variant=\"fullWidth\"\n            onChange={this.handleTabChange}>\n            {tabs.map((tab) => {\n              return (\n                <Tab key={tab.key} icon={tab.icon} label={tab.label} />\n              );\n            })}\n          </Tabs>\n        </Hidden>\n\n        <Hidden smUp>\n          <Tabs\n            classes={{ root: classes.tabs }}\n            style={{ overflow: 'initial', minHeight: 'initial' }}\n\n            indicatorColor=\"primary\"\n            scrollButtons=\"off\"\n            textColor=\"primary\"\n            value={selectedTab}\n            variant=\"scrollable\"\n            onChange={this.handleTabChange}>\n            {tabs.map((tab) => {\n              return (\n                <Tab key={tab.key} icon={tab.icon} label={tab.label} />\n              );\n            })}\n          </Tabs>\n        </Hidden>\n\n        <SwipeableViews index={selectedTab} onChangeIndex={this.handleIndexChange}>\n          <AccountTab\n            user={user}\n            userData={userData}\n\n            openSnackbar={openSnackbar}\n\n            onDeleteAccountClick={onDeleteAccountClick}\n          />\n\n          <AppearanceTab\n            theme={theme}\n\n            openSnackbar={openSnackbar}\n          />\n\n          <LinksTab\n            theme={theme}\n\n            openSnackbar={openSnackbar}\n          />\n\n          <SecurityTab\n            user={user}\n            userData={userData}\n\n            openSnackbar={openSnackbar}\n          />\n        </SwipeableViews>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n  theme: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Custom Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SettingsDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  username: ''\n};\n\nclass DeleteAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleKeyPress = (event) => {\n    const { userData } = this.props;\n\n    if (userData && userData.username) {\n      const { username } = this.state;\n\n      if (!username) {\n        return;\n      }\n\n      if (username !== userData.username) {\n        return;\n      }\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.deleteAccount();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleUsernameChange = (event) => {\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  render() {\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { performingAction, userData } = this.props;\n\n    // Custom Functions\n    const { deleteAccount } = this.props;\n\n    const { username } = this.state;\n\n    const hasUsername = userData && userData.username;\n\n    return (\n      <Dialog {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\n        <DialogTitle>\n          Delete account?\n        </DialogTitle>\n\n        <DialogContent>\n          <Box mb={hasUsername && 2}>\n            <DialogContentText>\n              Deleted accounts can’t be recovered.\n              All data associated with your account will be deleted.\n            </DialogContentText>\n\n            {hasUsername &&\n              <DialogContentText>\n                Type your username and <Hidden xsDown>click</Hidden><Hidden smUp>tap</Hidden> Delete to delete your account.\n                This action is irreversible.\n              </DialogContentText>\n            }\n          </Box>\n\n          {hasUsername &&\n            <TextField\n              autoComplete=\"username\"\n              autoFocus\n              color=\"secondary\"\n              disabled={performingAction}\n              fullWidth\n              label=\"Username\"\n              placeholder={userData.username}\n              required\n              type=\"text\"\n              value={username}\n              variant=\"outlined\"\n\n              onChange={this.handleUsernameChange}\n            />\n          }\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"secondary\" disabled={performingAction} onClick={dialogProps.onClose}>Cancel</Button>\n          <Button color=\"secondary\" disabled={performingAction || (hasUsername && username !== userData.username)} variant=\"contained\" onClick={deleteAccount}>Delete</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nDeleteAccountDialog.propTypes = {\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  performingAction: PropTypes.bool.isRequired,\n  userData: PropTypes.object,\n\n  // Custom Functions\n  deleteAccount: PropTypes.func.isRequired\n};\n\nexport default DeleteAccountDialog;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst styles = (theme) => ({\n  noTitlePadding: {\n    paddingTop: theme.spacing(3)\n  }\n});\n\nclass AlertDialog extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const {\n      title,\n      contentText,\n      dismissiveAction,\n      confirmingAction,\n      acknowledgementAction\n    } = this.props;\n\n    if ((dismissiveAction || confirmingAction) && acknowledgementAction) {\n      console.error(\n        'Dialogs should contain a maximum of two actions. ' +\n        'If a single action is provided, it must be an acknowledgement action. ' +\n        'If two actions are provided, one must be a confirming action, and the other a dismissing action. ' +\n        'Providing a third action such as “Learn more” is not recommended as it navigates the user away from the dialog, leaving the dialog task unfinished. ' +\n        'https://material.io/design/components/dialogs.html#actions'\n      );\n\n      return null;\n    }\n\n    return (\n      <Dialog {...dialogProps}>\n        {title &&\n          <DialogTitle>{title}</DialogTitle>\n        }\n\n        <DialogContent className={title ? null : classes.noTitlePadding}>\n          <DialogContentText>\n            {contentText}\n          </DialogContentText>\n        </DialogContent>\n\n        {(dismissiveAction || confirmingAction || acknowledgementAction) &&\n          <DialogActions>\n            {dismissiveAction}\n            {confirmingAction}\n            {acknowledgementAction}\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nAlertDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  title: PropTypes.string,\n  contentText: PropTypes.string.isRequired,\n  dismissiveAction: PropTypes.element,\n  confirmingAction: PropTypes.element,\n  acknowledgementAction: PropTypes.element,\n};\n\nexport default withStyles(styles)(AlertDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport SignUpDialog from '../SignUpDialog';\nimport SignInDialog from '../SignInDialog';\nimport SettingsDialog from '../SettingsDialog';\nimport DeleteAccountDialog from '../DeleteAccountDialog';\nimport AlertDialog from '../AlertDialog';\n\nclass DialogHost extends Component {\n  render() {\n    // Properties\n    const {\n      user,\n      dialogs\n    } = this.props;\n\n    const signUpDialog = dialogs.signUpDialog;\n    const signInDialog = dialogs.signInDialog;\n    const settingsDialog = dialogs.settingsDialog;\n    const deleteAccountDialog = dialogs.deleteAccountDialog;\n    const signOutDialog = dialogs.signOutDialog;\n\n    return (\n      <>\n        <Hidden xsDown>\n          {user &&\n            <>\n              <DeleteAccountDialog\n                dialogProps={deleteAccountDialog.dialogProps}\n\n                {...deleteAccountDialog.props}\n              />\n            </>\n          }\n\n          {!user &&\n            <>\n              <SignUpDialog\n                dialogProps={signUpDialog.dialogProps}\n\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={signInDialog.dialogProps}\n\n                {...signInDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n\n        <Hidden smDown>\n          {user &&\n            <>\n              <SettingsDialog\n                dialogProps={settingsDialog.dialogProps}\n\n                {...settingsDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n\n        <Hidden smUp>\n          {user &&\n            <>\n              <DeleteAccountDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...deleteAccountDialog.dialogProps\n                }}\n\n                {...deleteAccountDialog.props}\n              />\n            </>\n          }\n\n          {!user &&\n            <>\n              <SignUpDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signUpDialog.dialogProps\n                }}\n\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signInDialog.dialogProps\n                }}\n\n                {...signInDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n\n        <Hidden mdUp>\n          {user &&\n            <>\n              <SettingsDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...settingsDialog.dialogProps\n                }}\n\n                {...settingsDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n\n        {user &&\n          <>\n            <AlertDialog\n              dialogProps={signOutDialog.dialogProps}\n\n              {...signOutDialog.props}\n            />\n          </>\n        }\n      </>\n    );\n  }\n}\n\nDialogHost.propTypes = {\n  // Properties\n  user: PropTypes.object,\n  dialogs: PropTypes.object.isRequired\n};\n\nexport default DialogHost;\n","import React, { Component } from 'react';\n\nimport readingTime from 'reading-time';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { auth, firestore } from '../../firebase';\nimport authentication from '../../services/authentication';\nimport theming from '../../services/theming';\n\nimport LaunchScreen from '../LaunchScreen';\n\nimport Bar from '../Bar';\n\nimport Router from '../Router';\nimport DialogHost from '../DialogHost';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      userData: null,\n      theme: theming.defaultTheme,\n\n      ready: false,\n      performingAction: false,\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      deleteAccountDialog: {\n        open: false\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  openDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = true;\n\n    this.setState({ dialog }, callback);\n  };\n\n  closeDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = false;\n\n    this.setState({ dialog }, callback);\n  };\n\n  deleteAccount = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.deleteAccount().then(() => {\n        this.closeDialog('deleteAccountDialog', () => {\n          this.openSnackbar('Deleted account');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  signOut = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.signOut().then(() => {\n        this.closeDialog('signOutDialog', () => {\n          this.openSnackbar('Signed out');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  openSnackbar = (message, autoHideDuration = 2, callback) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * autoHideDuration,\n        message,\n        open: true\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    const {\n      user,\n      userData,\n      theme,\n      ready,\n      performingAction,\n    } = this.state;\n\n    const {\n      signUpDialog,\n      signInDialog,\n      settingsDialog,\n      deleteAccountDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n\n        {!ready &&\n          <LaunchScreen />\n        }\n\n        {ready &&\n          <>\n            <Bar\n              performingAction={performingAction}\n\n              user={user}\n              userData={userData}\n\n              onSignUpClick={() => this.openDialog('signUpDialog')}\n              onSignInClick={() => this.openDialog('signInDialog')}\n\n              onSettingsClick={() => this.openDialog('settingsDialog')}\n              onSignOutClick={() => this.openDialog('signOutDialog')}\n            />\n\n            <Router user={user} />\n\n            <DialogHost\n              user={user}\n              dialogs={\n                {\n                  signUpDialog: {\n                    dialogProps: {\n                      open: signUpDialog.open,\n\n                      onClose: (callback) => {\n                        this.closeDialog('signUpDialog');\n\n                        if (callback && typeof callback === 'function') {\n                          callback();\n                        }\n                      }\n                    },\n\n                    props: {\n                      performingAction: performingAction,\n\n                      openSnackbar: this.openSnackbar\n                    }\n                  },\n\n                  signInDialog: {\n                    dialogProps: {\n                      open: signInDialog.open,\n\n                      onClose: (callback) => {\n                        this.closeDialog('signInDialog');\n\n                        if (callback && typeof callback === 'function') {\n                          callback();\n                        }\n                      }\n                    },\n\n                    props: {\n                      performingAction: performingAction,\n\n                      openSnackbar: this.openSnackbar\n                    }\n                  },\n\n                  settingsDialog: {\n                    dialogProps: {\n                      open: settingsDialog.open,\n\n                      onClose: () => this.closeDialog('settingsDialog')\n                    },\n\n                    props: {\n                      user: user,\n                      userData: userData,\n                      theme: theme,\n\n                      openSnackbar: this.openSnackbar,\n\n                      onDeleteAccountClick: () => this.openDialog('deleteAccountDialog')\n                    }\n                  },\n\n                  deleteAccountDialog: {\n                    dialogProps: {\n                      open: deleteAccountDialog.open,\n\n                      onClose: () => this.closeDialog('deleteAccountDialog')\n                    },\n\n                    props: {\n                      performingAction: performingAction,\n                      userData: userData,\n\n                      deleteAccount: this.deleteAccount\n                    }\n                  },\n\n                  signOutDialog: {\n                    dialogProps: {\n                      open: signOutDialog.open,\n\n                      onClose: () => this.closeDialog('signOutDialog')\n                    },\n\n                    props: {\n                      title: 'Sign out?',\n                      contentText: 'While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.',\n                      dismissiveAction: <Button color=\"primary\" onClick={() => this.closeDialog('signOutDialog')}>Cancel</Button>,\n                      confirmingAction: <Button color=\"primary\" disabled={performingAction} variant=\"contained\" onClick={this.signOut}>Sign Out</Button>\n                    }\n                  }\n                }\n              }\n            />\n\n            <Snackbar\n              autoHideDuration={snackbar.autoHideDuration}\n              message={snackbar.message}\n              open={snackbar.open}\n              onClose={this.closeSnackbar}\n            />\n          </>\n        }\n      </MuiThemeProvider>\n    );\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    this.removeAuthStateChangedObserver = auth.onAuthStateChanged((user) => {\n      if (!user) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: null,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      this.removeReferenceListener = reference.onSnapshot((snapshot) => {\n        if (!snapshot.exists) {\n          if (this.removeReferenceListener) {\n            this.removeReferenceListener();\n          }\n\n          if (this.mounted) {\n            this.setState({\n              user: user,\n              userData: null,\n              theme: theming.defaultTheme,\n\n              ready: true\n            });\n          }\n\n          return;\n        }\n\n        const data = snapshot.data();\n\n        if (!data) {\n          if (this.removeReferenceListener) {\n            this.removeReferenceListener();\n          }\n\n          if (this.mounted) {\n            this.setState({\n              user: user,\n              userData: null,\n              theme: theming.defaultTheme,\n\n              ready: true\n            });\n          }\n\n          return;\n        }\n\n        if (data.theme) {\n          this.setState({\n            theme: theming.createTheme(data.theme)\n          });\n        } else {\n          this.setState({\n            theme: theming.defaultTheme\n          });\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: data,\n\n            ready: true\n          });\n        }\n      }, (error) => {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            ready: true\n          }, () => {\n            const code = error.code;\n            const message = error.message;\n\n            switch (code) {\n              default:\n                this.openSnackbar(message);\n                return;\n            }\n          });\n        }\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.removeAuthStateChangedObserver) {\n      this.removeAuthStateChangedObserver();\n    }\n\n    if (this.removeReferenceListener) {\n      this.removeReferenceListener();\n    }\n\n    this.mounted = false;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}