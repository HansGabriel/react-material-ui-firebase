{"version":3,"sources":["firebase.js","services/authentication.js","services/theming.js","components/EmptyState/EmptyState.js","components/ErrorBoundary/ErrorBoundary.js","components/LaunchScreen/LaunchScreen.js","components/Bar/Bar.js","components/HomeContent/HomeContent.js","components/NotFoundContent/NotFoundContent.js","components/Router/Router.js","components/AboutDialog/AboutDialog.js","components/AuthProviderList/AuthProviderList.js","constraints.js","components/SignUpDialog/SignUpDialog.js","components/SignInDialog/SignInDialog.js","components/AccountTab/AccountTab.js","components/AppearanceTab/AppearanceTab.js","components/LinksTab/LinksTab.js","components/SecurityTab/SecurityTab.js","components/SettingsDialog/SettingsDialog.js","components/DeleteAccountDialog/DeleteAccountDialog.js","components/AlertDialog/AlertDialog.js","components/DialogHost/DialogHost.js","components/App/App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","firestore","storage","authentication","fields","Promise","resolve","reject","firstName","lastName","username","emailAddress","password","currentUser","createUserWithEmailAndPassword","then","value","user","uid","reference","collection","doc","set","logEvent","method","catch","reason","merge","signInWithEmailAndPassword","get","source","exists","sendSignInLinkToEmail","url","handleCodeInApp","localStorage","setItem","emailLink","signInWithEmailLink","removeItem","providerId","provider","OAuthProvider","signInWithPopup","linkWithPopup","unlink","providerData","find","authProvider","signOut","sendPasswordResetEmail","avatar","includes","type","size","ref","child","put","uploadTaskSnapshot","getDownloadURL","updateProfile","photoURL","delete","update","updateEmail","updatePassword","lastPasswordChange","FieldValue","serverTimestamp","sendEmailVerification","getName","displayName","getFullName","getNameInitials","charAt","getProfileCompletion","email","emailVerified","profileCompletion","forEach","field","length","Math","floor","getSecurityRating","userData","metadata","creationTime","moment","securityRating","toDate","diff","colors","red","id","name","import","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","types","light","dark","getColor","colorId","_","camelCase","getType","typeId","defaultPrimaryColor","defaultSecondaryColor","defaultType","defaultTheme","createMuiTheme","palette","primary","secondary","primaryColor","secondaryColor","theming","isDefaultTheme","theme","createTheme","changeTheme","changePrimaryColor","changeSecondaryColor","changeType","resetTheme","EmptyState","section","this","props","title","description","button","classes","icon","className","center","Box","mb","getMarginBottomForSection","SvgIcon","color","Typography","variant","Component","withStyles","position","top","left","transform","textAlign","fontSize","spacing","ErrorBoundary","state","hasError","eventId","error","errorInfo","Sentry","scope","setExtras","setState","children","LaunchScreen","CircularProgress","Bar","getAvatar","photoUrl","Avatar","alt","src","nameInitials","openMenu","event","anchorEl","currentTarget","menu","closeMenu","handleAboutClick","onAboutClick","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","performingAction","onSignUpClick","onSignInClick","AppBar","Toolbar","display","flexGrow","IconButton","disabled","onClick","Menu","open","Boolean","onClose","MenuItem","mr","Button","defaultProps","HomeContent","window","location","href","isSignInWithEmailLink","getItem","history","push","openSnackbar","code","message","finally","Fab","rel","target","buttonIcon","withRouter","marginRight","NotFoundContent","component","Link","to","Router","basename","path","exact","AboutDialog","dialogProps","Dialog","DialogTitle","disableTypography","Tooltip","closeButton","DialogContent","List","disablePadding","ListItem","ListItemText","right","AuthProviderList","gutterBottom","onAuthProviderClick","authProviders","main","contrastText","Grid","grid","container","direction","map","key","item","fullWidth","startIcon","marginBottom","constraints","presence","allowEmpty","minimum","maximum","emailAddressConfirmation","equality","attribute","passwordConfirmation","initialState","errors","SignUpDialog","signUp","validate","signUpWithEmailAddressAndPassword","signInWithAuthProvider","handleKeyPress","altKey","ctrlKey","metaKey","shiftKey","handleExited","handleEmailAddressChange","handleEmailAddressConfirmationChange","handlePasswordChange","handlePasswordConfirmationChange","maxWidth","onKeyPress","onExited","Hidden","xsDown","xs","Divider","divider","orientation","TextField","autoComplete","helperText","label","placeholder","required","onChange","smUp","DialogActions","margin","SignInDialog","getSignInButton","signIn","resetPassword","showingField","avatarUrl","loadingAvatar","sentVerificationEmail","AccountTab","getNameInitialsOrIcon","personIcon","uploadAvatar","changeAvatar","removeAvatar","URL","revokeObjectURL","showField","fieldId","hideFields","callback","changeFirstName","changeLastName","changeUsername","changeEmailAddress","verifyEmailAddress","deleteAccount","changeField","handleKeyDown","handleAvatarChange","files","createObjectURL","handleFirstNameChange","handleLastNameChange","handleUsernameChange","onDeleteAccountClick","hasFirstName","hasLastName","hasUsername","root","dialogContent","alignItems","Badge","badge","badgeContent","sizeSmall","small","loadingBadge","Fade","style","transitionDelay","in","unmountOnExit","thickness","hidden","accept","htmlFor","ListItemIcon","autoFocus","onBlur","onKeyDown","ListItemSecondaryAction","clone","lastSignInTime","format","mt","paddingTop","marginLeft","width","height","cursor","minHeight","AppearanceTab","handlePrimaryColorChange","handleSecondaryColorChange","handleTypeChange","handleResetClick","FormControl","InputLabel","Select","native","Object","keys","LinksTab","linkAuthProvider","unlinkAuthProvider","authProviderData","identifier","phoneNumber","SecurityTab","changePassword","hasChangedPassword","tabs","selectedTab","SettingsDialog","handleTabChange","handleIndexChange","index","Tabs","overflow","indicatorColor","textColor","tab","Tab","onChangeIndex","DeleteAccountDialog","DialogContentText","AlertDialog","contentText","dismissiveAction","confirmingAction","acknowledgementAction","console","noTitlePadding","DialogHost","dialogs","aboutDialog","signUpDialog","signInDialog","settingsDialog","deleteAccountDialog","signOutDialog","smDown","fullScreen","mdUp","ready","snackbar","autoHideDuration","App","resetState","setTheme","openDialog","dialogId","dialog","undefined","closeDialog","closeAllDialogs","readingTime","time","closeSnackbar","clearMessage","CssBaseline","Snackbar","onAuthStateChangedObserver","onAuthStateChanged","userDocumentSnapshotListener","onSnapshot","snapshot","data","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","dsn","release","ReactDOM","render","document","getElementById","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.765b107c.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\n\nimport 'firebase/analytics';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/performance';\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n});\n\nexport default firebase;\nexport const analytics = firebase.analytics();\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\nexport const performance = firebase.performance();\n","import firebase, { analytics, auth, firestore, storage } from '../firebase';\n\nimport moment from 'moment';\n\nconst authentication = {};\n\nauthentication.signUp = (fields) => {\n  return new Promise((resolve, reject) => {\n    if (!fields) {\n      reject();\n\n      return;\n    }\n\n    const firstName = fields.firstName;\n    const lastName = fields.lastName;\n    const username = fields.username;\n    const emailAddress = fields.emailAddress;\n    const password = fields.password;\n\n    if (!firstName || !lastName || !username || !emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n      const user = value.user;\n\n      if (!user) {\n        reject();\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        reject();\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.set({\n        firstName: firstName,\n        lastName: lastName,\n        username: username\n      }).then((value) => {\n        analytics.logEvent('sign_up', {\n          method: 'password'\n        });\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signUpWithEmailAddressAndPassword = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n      const user = value.user;\n\n      if (!user) {\n        reject();\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        reject();\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.set({}, { merge: true }).then((value) => {\n        analytics.logEvent('sign_up', {\n          method: 'password'\n        });\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signIn = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signInWithEmailAndPassword(emailAddress, password).then((value) => {\n      const user = value.user;\n\n      if (!user) {\n        reject();\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        reject();\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.get({ source: 'server' }).then((value) => {\n        if (value.exists) {\n          analytics.logEvent('login', {\n            method: 'password'\n          });\n\n          resolve(user);\n        } else {\n          reference.set({}, { merge: true }).then((value) => {\n            analytics.logEvent('login', {\n              method: 'password'\n            });\n\n            resolve(user);\n          }).catch((reason) => {\n            reject(reason);\n          });\n        }\n      }).catch((reason => {\n        reject(reason);\n      }));\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.sendSignInLinkToEmail = (emailAddress) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    const actionCodeSettings = {\n      url: process.env.REACT_APP_HOMEPAGE,\n      handleCodeInApp: true\n    };\n\n    auth.sendSignInLinkToEmail(emailAddress, actionCodeSettings).then((value) => {\n      analytics.logEvent('send_sign_in_link_to_email');\n\n      localStorage.setItem('emailAddress', emailAddress);\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signInWithEmailLink = (emailAddress, emailLink) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !emailLink) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signInWithEmailLink(emailAddress, emailLink).then((value) => {\n      analytics.logEvent('login', {\n        method: 'email-link'\n      });\n\n      localStorage.removeItem('emailAddress');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signInWithAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signInWithPopup(provider).then((value) => {\n      const user = value.user;\n\n      if (!user) {\n        reject();\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        reject();\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.get({ source: 'server' }).then((value) => {\n        if (value.exists) {\n          analytics.logEvent('login', {\n            method: providerId\n          });\n\n          resolve(user);\n        } else {\n          reference.set({}, { merge: true }).then((value) => {\n            analytics.logEvent('login', {\n              method: providerId\n            });\n\n            resolve(user);\n          }).catch((reason) => {\n            reject(reason);\n          });\n        }\n      }).catch((reason => {\n        reject(reason);\n      }));\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.linkAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.linkWithPopup(provider).then((value) => {\n      analytics.logEvent('link_auth_provider', {\n        value: providerId\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.unlinkAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.unlink(providerId).then((value) => {\n      analytics.logEvent('unlink_auth_provider', {\n        value: providerId\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.authProviderData = (providerId) => {\n  if (!providerId) {\n    return;\n  }\n\n  const currentUser = auth.currentUser;\n\n  if (!currentUser) {\n    return;\n  }\n\n  const providerData = currentUser.providerData;\n\n  if (!providerData) {\n    return;\n  }\n\n  return providerData.find(authProvider => authProvider.providerId === providerId);\n};\n\nauthentication.signOut = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signOut().then((value) => {\n      analytics.logEvent('sign_out');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.resetPassword = (emailAddress) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.sendPasswordResetEmail(emailAddress).then((value) => {\n      analytics.logEvent('reset_password');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeAvatar = (avatar) => {\n  return new Promise((resolve, reject) => {\n    if (!avatar) {\n      reject();\n\n      return;\n    }\n\n    const avatarFileTypes = [\n      'image/gif',\n      'image/jpeg',\n      'image/png',\n      'image/webp',\n      'image/svg+xml'\n    ];\n\n    if (!avatarFileTypes.includes(avatar.type)) {\n      reject();\n\n      return;\n    }\n\n    if (avatar.size > (20 * 1024 * 1024)) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = storage.ref().child('images').child('avatars').child(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.put(avatar).then((uploadTaskSnapshot) => {\n      reference.getDownloadURL().then((value) => {\n        currentUser.updateProfile({\n          photoURL: value\n        }).then((value) => {\n          analytics.logEvent('change_avatar');\n\n          resolve(value);\n        }).catch((reason) => {\n          reject(reason);\n        });\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.removeAvatar = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updateProfile({\n      photoURL: null\n    }).then((value) => {\n      const reference = storage.ref().child('images').child('avatars').child(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.delete().then((value) => {\n        analytics.logEvent('remove_avatar');\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeFirstName = (firstName) => {\n  return new Promise((resolve, reject) => {\n    if (!firstName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      firstName: firstName\n    }).then((value) => {\n      analytics.logEvent('change_first_name');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeLastName = (lastName) => {\n  return new Promise((resolve, reject) => {\n    if (!lastName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      lastName: lastName\n    }).then((value) => {\n      analytics.logEvent('change_last_name');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeUsername = (username) => {\n  return new Promise((resolve, reject) => {\n    if (!username) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      username: username\n    }).then((value) => {\n      analytics.logEvent('change_username');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeEmailAddress = (emailAddress) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updateEmail(emailAddress).then((value) => {\n      analytics.logEvent('change_email_address');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changePassword = (password) => {\n  return new Promise((resolve, reject) => {\n    if (!password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updatePassword(password).then((value) => {\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.update({\n        lastPasswordChange: firebase.firestore.FieldValue.serverTimestamp()\n      }).then((value) => {\n        analytics.logEvent('change_password');\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.verifyEmailAddress = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.sendEmailVerification().then((value) => {\n      analytics.logEvent('verify_email_address');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.deleteAccount = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.delete().then((value) => {\n      analytics.logEvent('delete_account');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.user = {};\n\nauthentication.user.getName = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n  const lastName = fields.lastName;\n\n  if (firstName) {\n    return firstName;\n  }\n\n  if (username) {\n    return username;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  if (lastName) {\n    return lastName;\n  }\n\n  return null;\n};\n\nauthentication.user.getFullName = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return `${firstName} ${lastName}`;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  return null;\n};\n\nauthentication.user.getNameInitials = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return firstName.charAt(0) + lastName.charAt(0);\n  }\n\n  if (firstName) {\n    return firstName.charAt(0);\n  }\n\n  if (username) {\n    return username.charAt(0);\n  }\n\n  if (lastName) {\n    return lastName.charAt(0);\n  }\n\n  if (displayName) {\n    return displayName.charAt(0);\n  }\n\n  return null;\n};\n\nauthentication.user.getProfileCompletion = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  fields = [\n    fields.photoURL,\n    fields.firstName,\n    fields.lastName,\n    fields.username,\n    fields.email,\n    fields.email && fields.emailVerified\n  ];\n\n  if (!fields) {\n    return null;\n  }\n\n  let profileCompletion = 0;\n\n  fields.forEach((field) => {\n    if (field) {\n      profileCompletion += 100 / fields.length;\n    }\n  });\n\n  return Math.floor(profileCompletion);\n};\n\nauthentication.user.getSecurityRating = (user, userData) => {\n  if (!user || !user.metadata) {\n    return null;\n  }\n\n  let creationTime = user.metadata.creationTime;\n\n  if (!creationTime) {\n    return null;\n  }\n\n  creationTime = moment(creationTime);\n\n  let securityRating = 0;\n\n  if (userData && userData.lastPasswordChange) {\n    let lastPasswordChange = userData.lastPasswordChange;\n\n    if (lastPasswordChange) {\n      lastPasswordChange = moment(lastPasswordChange.toDate());\n\n      if (creationTime.diff(lastPasswordChange, 'days') >= 365.242199) {\n        securityRating = 50;\n      } else {\n        securityRating = 100;\n      }\n    }\n  } else {\n    if (moment().diff(creationTime, 'days') >= 365.242199) {\n      securityRating = 50;\n    } else {\n      securityRating = 100;\n    }\n  }\n\n  return securityRating;\n};\n\nexport default authentication;\n","import _ from 'lodash';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nimport firebase, { analytics, auth, firestore } from '../firebase';\n\nconst colors = {\n  red: {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n\n  pink: {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n\n  purple: {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n\n  deepPurple: {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n\n  indigo: {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n\n  blue: {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n\n  lightBlue: {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n\n  cyan: {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n\n  teal: {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n\n  green: {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n\n  lightGreen: {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n\n  lime: {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n\n  yellow: {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n\n  amber: {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n\n  orange: {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n\n  deepOrange: {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n\n  brown: {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n\n  gray: {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n\n  blueGray: {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n};\n\nconst types = {\n  light: {\n    id: 'light',\n    name: 'Light'\n  },\n\n  dark: {\n    id: 'dark',\n    name: 'Dark'\n  }\n};\n\nconst getColor = (colorId) => {\n  if (!colorId) {\n    return null;\n  }\n\n  colorId = _.camelCase(colorId);\n\n  return colors[colorId];\n};\n\nconst getType = (typeId) => {\n  if (!typeId) {\n    return null;\n  }\n\n  return types[typeId];\n};\n\nconst defaultPrimaryColor = getColor(process.env.REACT_APP_THEME_PRIMARY_COLOR);\nconst defaultSecondaryColor = getColor(process.env.REACT_APP_THEME_SECONDARY_COLOR);\nconst defaultType = getType(process.env.REACT_APP_THEME_TYPE);\n\nconst defaultTheme = createMuiTheme({\n  palette: {\n    primary: defaultPrimaryColor.import,\n    secondary: defaultSecondaryColor.import,\n    type: defaultType.id\n  },\n\n  primaryColor: defaultPrimaryColor,\n  secondaryColor: defaultSecondaryColor,\n  type: defaultType\n});\n\nconst theming = {};\n\ntheming.colors = colors;\ntheming.types = types;\n\ntheming.defaultPrimaryColor = defaultPrimaryColor;\ntheming.defaultSecondaryColor = defaultSecondaryColor;\ntheming.defaultType = defaultType;\n\ntheming.defaultTheme = defaultTheme;\n\n/**\n * Returns whether a theme is the default theme.\n * @param theme\n * @returns {boolean}\n */\ntheming.isDefaultTheme = (theme) => {\n  if (!theme) {\n    return false;\n  }\n\n  if (theme.primaryColor.id === defaultPrimaryColor.id &&\n      theme.secondaryColor.id === defaultSecondaryColor.id &&\n      theme.type.id === defaultType.id) {\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Creates a Material-UI theme from a JSON theme object.\n * @param theme\n * @returns {null|Theme}\n */\ntheming.createTheme = (theme) => {\n  if (!theme) {\n    return null;\n  }\n\n  let primaryColor = theme.primaryColor;\n  let secondaryColor = theme.secondaryColor;\n  let type = theme.type;\n\n  if (!primaryColor || !secondaryColor || !type) {\n    return null;\n  }\n\n  primaryColor = getColor(primaryColor);\n  secondaryColor = getColor(secondaryColor);\n  type = getType(type);\n\n  if (!primaryColor || !secondaryColor || !type) {\n    return null;\n  }\n\n  theme = createMuiTheme({\n    palette: {\n      primary: primaryColor.import,\n      secondary: secondaryColor.import,\n      type: type.id\n    },\n\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor,\n    type: type\n  });\n\n  return theme;\n};\n\n/**\n * Changes the theme for the current user.\n * @param theme\n * @returns {Promise<unknown>}\n */\ntheming.changeTheme = (theme) => {\n  return new Promise((resolve, reject) => {\n    if (!theme) {\n      reject();\n\n      return;\n    }\n\n    let primaryColor = theme.primaryColor;\n    let secondaryColor = theme.secondaryColor;\n    let type = theme.type;\n\n    if (!primaryColor || !secondaryColor || !type) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n    secondaryColor = getColor(secondaryColor);\n    type = getType(type);\n\n    if (!primaryColor || !secondaryColor || !type) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      theme: {\n        primaryColor: primaryColor.id,\n        secondaryColor: secondaryColor.id,\n        type: type.id\n      }\n    }).then((value) => {\n      analytics.logEvent('change_theme', {\n        value: {\n          primaryColor: primaryColor.id,\n          secondaryColor: secondaryColor.id,\n          type: type.id\n        }\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Changes the primary color for the current user.\n * @param primaryColor\n * @returns {Promise<unknown>}\n */\ntheming.changePrimaryColor = (primaryColor) => {\n  return new Promise((resolve, reject) => {\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      'theme.primaryColor': primaryColor.id\n    }).then((value) => {\n      analytics.logEvent('change_primary_color', {\n        value: primaryColor.id\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Changes the secondary color for the current user.\n * @param secondaryColor\n * @returns {Promise<unknown>}\n */\ntheming.changeSecondaryColor = (secondaryColor) => {\n  return new Promise((resolve, reject) => {\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    secondaryColor = getColor(secondaryColor);\n\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      'theme.secondaryColor': secondaryColor.id\n    }).then((value) => {\n      analytics.logEvent('change_secondary_color', {\n        value: secondaryColor.id\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Changes the type for the current user.\n * @param type\n * @returns {Promise<unknown>}\n */\ntheming.changeType = (type) => {\n  return new Promise((resolve, reject) => {\n    if (!type) {\n      reject();\n\n      return;\n    }\n\n    type = getType(type);\n\n    if (!type) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      'theme.type': type.id\n    }).then((value) => {\n      analytics.logEvent('change_type', {\n        value: type.id\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\n/**\n * Resets the theme for the current user.\n * @returns {Promise<unknown>}\n */\ntheming.resetTheme = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      theme: firebase.firestore.FieldValue.delete()\n    }).then((value) => {\n      analytics.logEvent('reset_theme');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nexport default theming;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  },\n\n  icon: {\n    fontSize: theme.spacing(12)\n  }\n});\n\nclass EmptyState extends Component {\n  getMarginBottomForSection(section) {\n    if (!section) {\n      return 0;\n    }\n\n    const { title, description, button } = this.props;\n\n    switch (section) {\n      case 'icon':\n        if (title || description || button) {\n          return 1;\n        }\n\n        return 0;\n\n      case 'title':\n        if (description && button) {\n          return 1;\n        }\n\n        if (!description && button) {\n          return 2;\n        }\n\n        if (description && !button) {\n          return 1;\n        }\n\n        return 0;\n\n      case 'description':\n        if (button) {\n          return 2;\n        }\n\n        return 0;\n\n      default:\n        return 0;\n    }\n  }\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { icon, title, description, button } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon &&\n          <Box mb={this.getMarginBottomForSection('icon')}>\n            <SvgIcon className={classes.icon} color=\"action\">\n              {icon}\n            </SvgIcon>\n          </Box>\n        }\n\n        {title &&\n          <Box mb={this.getMarginBottomForSection('title')}>\n            <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>\n          </Box>\n        }\n\n        {description &&\n          <Box mb={this.getMarginBottomForSection('description')}>\n            <Typography color=\"textSecondary\" variant=\"subtitle1\">{description}</Typography>\n          </Box>\n        }\n\n        {button &&\n          <Box>\n            {button}\n          </Box>\n        }\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  button: PropTypes.element\n};\n\nexport default withStyles(styles)(EmptyState);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport * as Sentry from '@sentry/browser';\n\nimport ErrorIcon from '@material-ui/icons/Error';\n\nimport EmptyState from '../EmptyState';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n      eventId: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo);\n\n      const eventId = Sentry.captureException(error);\n\n      this.setState({\n        eventId: eventId\n      });\n    });\n  }\n\n  render() {\n    // Properties\n    const { children } = this.props;\n\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <EmptyState\n          icon={<ErrorIcon />}\n          title=\"Something went wrong\"\n        />\n      );\n    }\n\n    return children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  // Properties\n  children: PropTypes.array.isRequired\n};\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = (theme) => ({\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n});\n\nclass LaunchScreen extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.center}>\n        <CircularProgress />\n      </div>\n    );\n  }\n}\n\nLaunchScreen.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LaunchScreen);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport authentication from '../../services/authentication';\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  getAvatar = () => {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    const photoUrl = user.photoURL;\n\n    if (photoUrl) {\n      return (<Avatar alt=\"Avatar\" src={photoUrl} />);\n    }\n\n    const { userData } = this.props;\n\n    if (!userData) {\n      return <PersonIcon />;\n    }\n\n    const nameInitials = authentication.user.getNameInitials({\n      ...user,\n      ...userData\n    });\n\n    if (nameInitials) {\n      return <Avatar alt=\"Avatar\">{nameInitials}</Avatar>;\n    }\n\n    return <PersonIcon />;\n  };\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleAboutClick = () => {\n    this.closeMenu();\n    this.props.onAboutClick();\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Properties\n    const { performingAction, user } = this.props;\n\n    // Events\n    const {\n      onSignUpClick,\n      onSignInClick\n    } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Box display=\"flex\" flexGrow={1}>\n            <Typography color=\"inherit\" variant=\"h6\">{process.env.REACT_APP_TITLE}</Typography>\n          </Box>\n\n          {user &&\n            <>\n              <IconButton color=\"inherit\" disabled={performingAction} onClick={this.openMenu}>\n                {this.getAvatar()}\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem disabled={performingAction} onClick={this.handleAboutClick}>About</MenuItem>\n                <MenuItem disabled={performingAction} onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem disabled={performingAction} onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </>\n          }\n\n          {!user &&\n            <>\n              <Box mr={1}>\n                <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              </Box>\n\n              <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.defaultProps = {\n  performingAction: false\n};\n\nBar.propTypes = {\n  // Properties\n  performingAction: PropTypes.bool.isRequired,\n  user: PropTypes.object,\n  userData: PropTypes.object,\n\n  // Events\n  onAboutClick: PropTypes.func.isRequired,\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default Bar;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withRouter } from 'react-router-dom';\n\nimport { auth } from '../../firebase';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nimport authentication from '../../services/authentication';\n\nimport EmptyState from '../EmptyState';\n\nconst styles = (theme) => ({\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass HomeContent extends Component {\n  signInWithEmailLink = () => {\n    const { user } = this.props;\n\n    if (user) {\n      return;\n    }\n\n    const emailLink = window.location.href;\n\n    if (!emailLink) {\n      return;\n    }\n\n    if (auth.isSignInWithEmailLink(emailLink)) {\n      let emailAddress = localStorage.getItem('emailAddress');\n\n      if (!emailAddress) {\n        this.props.history.push('/');\n\n        return;\n      }\n\n      authentication.signInWithEmailLink(emailAddress, emailLink).then((value) => {\n        const user = value.user;\n        const displayName = user.displayName;\n        const emailAddress = user.email;\n\n        this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/expired-action-code':\n          case 'auth/invalid-email':\n          case 'auth/user-disabled':\n            this.props.openSnackbar(message);\n            break;\n\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.props.history.push('/');\n      });\n    }\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user } = this.props;\n\n    if (user) {\n      return (\n        <EmptyState\n          icon={<HomeIcon />}\n          title=\"Home\"\n        />\n      );\n    }\n\n    return (\n      <EmptyState\n        title={process.env.REACT_APP_TITLE}\n        description={process.env.REACT_APP_DESCRIPTION}\n        button={\n          <Fab color=\"secondary\" href=\"https://github.com/phoqe/react-material-ui-firebase\" rel=\"noopener noreferrer\" target=\"_blank\" variant=\"extended\">\n            <GitHubCircleIcon className={classes.buttonIcon} />\n            GitHub\n          </Fab>\n        }\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.signInWithEmailLink();\n  }\n}\n\nHomeContent.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  user: PropTypes.object\n};\n\nexport default withRouter(withStyles(styles)(HomeContent));\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport FindIcon from '@material-ui/icons/FindInPage';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../EmptyState';\n\nconst styles = (theme) => ({\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass NotFoundContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<FindIcon />}\n        title=\"Content Not Found\"\n        description=\"The requested URL was not found on this server\"\n        button={\n          <Fab color=\"secondary\" component={Link} to=\"/\" variant=\"extended\">\n            <HomeIcon className={classes.buttonIcon} /> Go Home\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nNotFoundContent.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NotFoundContent);\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types';\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport HomeContent from '../HomeContent';\nimport NotFoundContent from '../NotFoundContent';\n\nclass Router extends Component {\n  render() {\n    // Properties\n    const { user } = this.props;\n\n    // Functions\n    const { openSnackbar } = this.props;\n\n    return (\n      <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomeContent\n              user={user}\n\n              openSnackbar={openSnackbar}\n            />\n          </Route>\n\n          <Route>\n            <NotFoundContent />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nRouter.propTypes = {\n  // Properties\n  user: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default Router;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = (theme) => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  }\n});\n\nclass AboutDialog extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { user } = this.props;\n\n    return (\n      <Dialog {...dialogProps}>\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">About</Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton className={classes.closeButton} onClick={dialogProps.onClose}>\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <DialogContent>\n          <List disablePadding>\n            <ListItem>\n              <ListItemText\n                primary=\"Version\"\n                secondary={process.env.REACT_APP_VERSION}\n              />\n            </ListItem>\n\n            {user &&\n              <ListItem>\n                <ListItemText\n                  primary=\"UID\"\n                  secondary={user.uid}\n                />\n              </ListItem>\n            }\n          </List>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n\nAboutDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  user: PropTypes.object,\n};\n\nexport default withStyles(styles)(AboutDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { createMuiTheme, withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport AppleIcon from 'mdi-material-ui/Apple';\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport MicrosoftIcon from 'mdi-material-ui/Microsoft';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport YahooIcon from 'mdi-material-ui/Yahoo';\n\nconst styles = (theme) => ({\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nclass AuthProviderList extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { gutterBottom, performingAction } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    const authProviders = [\n      {\n        providerId: 'apple.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#000000',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <AppleIcon />,\n        name: 'Apple'\n      },\n      {\n        providerId: 'facebook.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#3c5a99',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <FacebookBoxIcon />,\n        name: 'Facebook'\n      },\n      {\n        providerId: 'github.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#24292e',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <GitHubCircleIcon />,\n        name: 'GitHub'\n      },\n      {\n        providerId: 'google.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#4285f4',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <GoogleIcon />,\n        name: 'Google'\n      },\n      {\n        providerId: 'microsoft.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#f65314',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <MicrosoftIcon />,\n        name: 'Microsoft'\n      },\n      {\n        providerId: 'twitter.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#1da1f2',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <TwitterIcon />,\n        name: 'Twitter'\n      },\n      {\n        providerId: 'yahoo.com',\n        theme: createMuiTheme({\n          palette: {\n            primary: {\n              main: '#410093',\n              contrastText: '#ffffff'\n            }\n          }\n        }),\n        icon: <YahooIcon />,\n        name: 'Yahoo'\n      }\n    ];\n\n    if (gutterBottom) {\n      return (\n        <Grid className={classes.grid} container direction=\"column\" spacing={1}>\n          {authProviders.map((authProvider) => {\n            return (\n              <Grid key={authProvider.providerId} item>\n                <MuiThemeProvider theme={authProvider.theme}>\n                  <Button\n                    color=\"primary\"\n                    disabled={performingAction}\n                    fullWidth\n                    startIcon={authProvider.icon}\n                    variant=\"contained\"\n                    onClick={() => onAuthProviderClick(authProvider.providerId)}>\n                    {authProvider.name}\n                  </Button>\n                </MuiThemeProvider>\n              </Grid>\n            );\n          })}\n        </Grid>\n      );\n    }\n\n    return (\n      <Grid container direction=\"column\" spacing={1}>\n        {authProviders.map((authProvider) => {\n          return (\n            <Grid key={authProvider.providerId} item>\n              <MuiThemeProvider theme={authProvider.theme}>\n                <Button\n                  color=\"primary\"\n                  disabled={performingAction}\n                  fullWidth\n                  startIcon={authProvider.icon}\n                  variant=\"contained\"\n                  onClick={() => onAuthProviderClick(authProvider.providerId)}>\n                  {authProvider.name}\n                </Button>\n              </MuiThemeProvider>\n            </Grid>\n          );\n        })}\n      </Grid>\n    );\n  }\n}\n\nAuthProviderList.defaultProps = {\n  gutterBottom: false,\n  performingAction: false\n};\n\nAuthProviderList.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  gutterBottom: PropTypes.bool,\n  performingAction: PropTypes.bool,\n\n  // Events\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AuthProviderList);\n","const constraints = {\n  firstName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  lastName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  username: {\n    length: {\n      minimum: 2,\n      maximum: 20\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  emailAddress: {\n    email: {\n      message: '^E-mail address is invalid'\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  emailAddressConfirmation: {\n    email: {\n      message: '^E-mail address confirmation is invalid'\n    },\n\n    equality: {\n      attribute: 'emailAddress',\n      message: '^E-mail address confirmation is not equal to e-mail address'\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  password: {\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  },\n\n  passwordConfirmation: {\n    equality: 'password',\n\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: 'string'\n  }\n};\n\nexport default constraints;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthProviderList from '../AuthProviderList';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = (theme) => ({\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: 'auto'\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n\n  emailAddress: '',\n  emailAddressConfirmation: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const {\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress,\n      emailAddressConfirmation: emailAddressConfirmation,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }, {\n      emailAddress: constraints.emailAddress,\n      emailAddressConfirmation: constraints.emailAddressConfirmation,\n      password: constraints.password,\n      passwordConfirmation: constraints.passwordConfirmation\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState({\n        performingAction: true,\n\n        errors: null\n      }, () => {\n        authentication.signUpWithEmailAddressAndPassword(emailAddress, password).then((value) => {\n          this.props.dialogProps.onClose();\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            case 'auth/email-already-in-use':\n            case 'auth/invalid-email':\n            case 'auth/operation-not-allowed':\n            case 'auth/weak-password':\n              this.props.openSnackbar(message);\n              return;\n\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    }\n  };\n\n  signInWithAuthProvider = (providerId) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.signInWithAuthProvider(providerId).then((user) => {\n        this.props.dialogProps.onClose(() => {\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.props.openSnackbar(message);\n            return;\n\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleKeyPress = (event) => {\n    const {\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    if (!emailAddress ||\n      !emailAddressConfirmation ||\n      !password ||\n      !passwordConfirmation) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handleEmailAddressConfirmationChange = (event) => {\n    const emailAddressConfirmation = event.target.value;\n\n    this.setState({\n      emailAddressConfirmation: emailAddressConfirmation\n    });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const {\n      performingAction,\n\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation,\n\n      errors\n    } = this.state;\n\n    return (\n      <Dialog fullWidth maxWidth=\"sm\" {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <Hidden xsDown>\n          <DialogContent>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <AuthProviderList\n                  performingAction={performingAction}\n\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={7}>\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddressConfirmation)}\n                      fullWidth\n                      helperText={(errors && errors.emailAddressConfirmation) ? errors.emailAddressConfirmation[0] : ''}\n                      label=\"E-mail address confirmation\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddressConfirmation}\n                      variant=\"outlined\"\n\n                      onChange={this.handleEmailAddressConfirmationChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"new-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={(errors && errors.password) ? errors.password[0] : ''}\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.passwordConfirmation)}\n                      fullWidth\n                      helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n                      label=\"Password confirmation\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={passwordConfirmation}\n                      variant=\"outlined\"\n\n                      onChange={this.handlePasswordConfirmationChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <Hidden smUp>\n          <DialogContent>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddressConfirmation)}\n                  fullWidth\n                  helperText={(errors && errors.emailAddressConfirmation) ? errors.emailAddressConfirmation[0] : ''}\n                  label=\"E-mail address confirmation\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddressConfirmation}\n                  variant=\"outlined\"\n\n                  onChange={this.handleEmailAddressConfirmationChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"new-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={(errors && errors.password) ? errors.password[0] : ''}\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.passwordConfirmation)}\n                  fullWidth\n                  helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n                  label=\"Password confirmation\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={passwordConfirmation}\n                  variant=\"outlined\"\n\n                  onChange={this.handlePasswordConfirmationChange}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={dialogProps.onClose}>Cancel</Button>\n\n          <Button\n            color=\"primary\"\n            disabled={\n              !emailAddress ||\n              !emailAddressConfirmation ||\n              !password ||\n              !passwordConfirmation ||\n              performingAction\n            }\n            variant=\"contained\"\n\n            onClick={this.signUp}>\n            Sign up\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignUpDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthProviderList from '../AuthProviderList';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = (theme) => ({\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: 'auto'\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  getSignInButton = () => {\n    const { emailAddress, password, performingAction } = this.state;\n\n    if (emailAddress && !password) {\n      return (\n        <Button\n          color=\"primary\"\n          disabled={!emailAddress || performingAction}\n          variant=\"contained\"\n\n          onClick={() => this.sendSignInLinkToEmail()}>\n          Send sign-in link\n        </Button>\n      );\n    }\n\n    return (\n      <Button\n        color=\"primary\"\n        disabled={!emailAddress || performingAction}\n        variant=\"contained\"\n\n        onClick={() => this.signIn()}>\n        Sign in\n      </Button>\n    );\n  };\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.setState({\n          performingAction: true\n        }, () => {\n          authentication.resetPassword(emailAddress).then((value) => {\n            this.props.openSnackbar(`Sent password reset e-mail to ${emailAddress}`);\n          }).catch((reason) => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              case 'auth/invalid-email':\n              case 'auth/missing-android-pkg-name':\n              case 'auth/missing-continue-uri':\n              case 'auth/missing-ios-bundle-id':\n              case 'auth/invalid-continue-uri':\n              case 'auth/unauthorized-continue-uri':\n              case 'auth/user-not-found':\n                this.props.openSnackbar(message);\n                return;\n\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          }).finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n        });\n      });\n    }\n  };\n\n  signIn = () => {\n    const { emailAddress, password } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress,\n      password: password\n    }, {\n      emailAddress: constraints.emailAddress,\n      password: constraints.password\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState({\n        performingAction: true,\n\n        errors: null\n      }, () => {\n        authentication.signIn(emailAddress, password).then((user) => {\n          this.props.dialogProps.onClose(() => {\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            case 'auth/invalid-email':\n            case 'auth/user-disabled':\n            case 'auth/user-not-found':\n            case 'auth/wrong-password':\n              this.props.openSnackbar(message);\n              return;\n\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    }\n  };\n\n  sendSignInLinkToEmail = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      performingAction: true,\n\n      errors: null\n    }, () => {\n      authentication.sendSignInLinkToEmail(emailAddress).then(() => {\n        this.props.dialogProps.onClose(() => {\n          this.props.openSnackbar(`Sent sign-in e-mail to ${emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/argument-error':\n          case 'auth/invalid-email':\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n            this.props.openSnackbar(message);\n            return;\n\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  signInWithAuthProvider = (providerId) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.signInWithAuthProvider(providerId).then((user) => {\n        this.props.dialogProps.onClose(() => {\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.props.openSnackbar(message);\n            return;\n\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleKeyPress = (event) => {\n    const { emailAddress, password } = this.state;\n\n    if (!emailAddress && !password) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      if (emailAddress && !password) {\n        this.sendSignInLinkToEmail();\n      } else {\n        this.signIn();\n      }\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const {\n      performingAction,\n\n      emailAddress,\n      password,\n\n      errors\n    } = this.state;\n\n    return (\n      <Dialog fullWidth maxWidth=\"sm\" {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <Hidden xsDown>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <AuthProviderList\n                  performingAction={performingAction}\n\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={7}>\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"current-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={(errors && errors.password) ? errors.password[0] : ''}\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"current-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={(errors && errors.password) ? errors.password[0] : ''}\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n            </Grid>\n          </Hidden>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={dialogProps.onClose}>Cancel</Button>\n\n          <Button\n            color=\"primary\"\n            disabled={!emailAddress || performingAction}\n            variant=\"outlined\"\n\n            onClick={this.resetPassword}>\n            Reset password\n          </Button>\n\n          {this.getSignInButton()}\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignInDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport Avatar from '@material-ui/core/Avatar';\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = (theme) => ({\n  dialogContent: {\n    paddingTop: theme.spacing(2)\n  },\n\n  badge: {\n    top: theme.spacing(2),\n    right: -theme.spacing(2)\n  },\n\n  loadingBadge: {\n    top: '50%',\n    right: '50%'\n  },\n\n  avatar: {\n    marginRight: 'auto',\n    marginLeft: 'auto',\n\n    width: theme.spacing(14),\n    height: theme.spacing(14)\n  },\n\n  nameInitials: {\n    cursor: 'default'\n  },\n\n  personIcon: {\n    fontSize: theme.spacing(7)\n  },\n\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n\n    minHeight: 'initial'\n  }\n});\n\nconst initialState = {\n  profileCompletion: 0,\n  securityRating: 0,\n\n  showingField: '',\n\n  avatar: null,\n  avatarUrl: '',\n  firstName: '',\n  lastName: '',\n  username: '',\n  emailAddress: '',\n\n  performingAction: false,\n  loadingAvatar: false,\n  sentVerificationEmail: false,\n\n  errors: null\n};\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  getNameInitialsOrIcon = () => {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    const { classes, userData } = this.props;\n\n    if (!userData) {\n      return <PersonIcon className={classes.personIcon} />;\n    }\n\n    const nameInitials = authentication.user.getNameInitials({\n      ...user,\n      ...userData\n    });\n\n    if (nameInitials) {\n      return nameInitials;\n    }\n\n    return <PersonIcon className={classes.personIcon} />;\n  };\n\n  uploadAvatar = () => {\n    const { avatar } = this.state;\n\n    if (!avatar) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true,\n      loadingAvatar: true\n    }, () => {\n      authentication.changeAvatar(avatar).then((value) => {\n        const { user, userData } = this.props;\n\n        this.setState({\n          profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n        }, () => {\n          this.props.openSnackbar('Changed avatar');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false,\n          loadingAvatar: false,\n\n          avatar: null,\n          avatarUrl: ''\n        });\n      });\n    });\n  };\n\n  removeAvatar = () => {\n    const { user } = this.props;\n    const { avatar, avatarUrl } = this.state;\n\n    if (!user.photoURL && !avatar && !avatarUrl) {\n      return;\n    }\n\n    if ((!user.photoURL && avatar && avatarUrl) || (user.photoURL && avatar && avatarUrl)) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatar: null,\n        avatarUrl: ''\n      }, () => {\n        this.props.openSnackbar(`Removed image “${avatar.name}”`, 5);\n      });\n    } else if (user.photoURL && !avatar && !avatarUrl) {\n      this.setState({\n        performingAction: true,\n        loadingAvatar: true\n      }, () => {\n        authentication.removeAvatar().then((value) => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.props.openSnackbar('Removed avatar');\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false,\n            loadingAvatar: false\n          });\n        });\n      });\n    }\n  };\n\n  showField = (fieldId) => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = (callback) => {\n    this.setState({\n      showingField: '',\n\n      firstName: '',\n      lastName: '',\n      username: '',\n      emailAddress: '',\n\n      errors: null\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  changeFirstName = () => {\n    const { firstName } = this.state;\n\n    const errors = validate({\n      firstName: firstName\n    }, {\n      firstName: constraints.firstName\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (firstName === userData.firstName) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeFirstName(firstName).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed first name');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeLastName = () => {\n    const { lastName } = this.state;\n\n    const errors = validate({\n      lastName: lastName\n    }, {\n      lastName: constraints.lastName\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (lastName === userData.lastName) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeLastName(lastName).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed last name');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeUsername = () => {\n    const { username } = this.state;\n\n    const errors = validate({\n      username: username\n    }, {\n      username: constraints.username\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (username === userData.username) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeUsername(username).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed username');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeEmailAddress = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { user } = this.props;\n\n      if (emailAddress === user.email) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeEmailAddress(emailAddress).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed e-mail address');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.verifyEmailAddress().then(() => {\n        this.setState({\n          sentVerificationEmail: true\n        }, () => {\n          this.props.openSnackbar('Sent verification e-mail');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  deleteAccount = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.deleteAccount().then(() => {\n        this.props.openSnackbar('Deleted account');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  changeField = (fieldId) => {\n    switch (fieldId) {\n      case 'first-name':\n        this.changeFirstName();\n        return;\n\n      case 'last-name':\n        this.changeLastName();\n        return;\n\n      case 'username':\n        this.changeUsername();\n        return;\n\n      case 'email-address':\n        this.changeEmailAddress();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === 'Escape') {\n      this.hideFields();\n    } else if (key === 'Enter') {\n      this.changeField(fieldId);\n    }\n  };\n\n  handleAvatarChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const files = event.target.files;\n\n    if (!files) {\n      return;\n    }\n\n    const avatar = files[0];\n\n    if (!avatar) {\n      return;\n    }\n\n    const fileTypes = [\n      'image/gif',\n      'image/jpeg',\n      'image/png',\n      'image/webp',\n      'image/svg+xml'\n    ];\n\n    if (!fileTypes.includes(avatar.type)) {\n      return;\n    }\n\n    if (avatar.size > (20 * 1024 * 1024)) {\n      return;\n    }\n\n    this.setState({\n      avatar: avatar,\n      avatarUrl: URL.createObjectURL(avatar)\n    }, () => {\n      this.props.openSnackbar(`Selected image “${avatar.name}”`, 5);\n    });\n  };\n\n  handleFirstNameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const firstName = event.target.value;\n\n    this.setState({\n      firstName: firstName\n    });\n  };\n\n  handleLastNameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const lastName = event.target.value;\n\n    this.setState({\n      lastName: lastName\n    });\n  };\n\n  handleUsernameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  handleEmailAddressChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const {\n      user,\n      userData\n    } = this.props;\n\n    // Events\n    const {\n      onDeleteAccountClick\n    } = this.props;\n\n    const {\n      profileCompletion,\n      securityRating,\n\n      showingField,\n\n      performingAction,\n      loadingAvatar,\n\n      avatar,\n      avatarUrl,\n      firstName,\n      lastName,\n      username,\n      emailAddress,\n\n      sentVerificationEmail,\n\n      errors\n    } = this.state;\n\n    const hasFirstName = userData && userData.firstName;\n    const hasLastName = userData && userData.lastName;\n    const hasUsername = userData && userData.username;\n\n    return (\n      <DialogContent classes={{ root: classes.dialogContent }}>\n        <Box mb={2}>\n          <Hidden xsDown>\n            <Grid alignItems=\"center\" container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Box mb={1.5}>\n                    {(avatar && avatarUrl) &&\n                      <Badge classes={{ badge: classes.badge }} badgeContent={\n                        <Tooltip title=\"Remove\">\n                          <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                            <CloseIcon fontSize=\"small\" />\n                          </Fab>\n                        </Tooltip>\n                      }>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <Fade\n                              style={{ transitionDelay: '1s' }}\n                              in={loadingAvatar}\n                              unmountOnExit>\n                              <CircularProgress size={120} thickness={1.8} />\n                            </Fade>\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                        }\n                      </Badge>\n                    }\n\n                    {(!avatar && !avatarUrl) &&\n                      <>\n                        {user.photoURL &&\n                          <Badge classes={{ badge: classes.badge }} badgeContent={\n                            <Tooltip title=\"Remove\">\n                              <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                                <CloseIcon fontSize=\"small\" />\n                              </Fab>\n                            </Tooltip>\n                          }>\n                            {loadingAvatar &&\n                              <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                                <Fade\n                                  style={{ transitionDelay: '1s' }}\n                                  in={loadingAvatar}\n                                  unmountOnExit>\n                                  <CircularProgress size={120} thickness={1.8} />\n                                </Fade>\n                              }>\n                                <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                              </Badge>\n                            }\n\n                            {!loadingAvatar &&\n                              <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                            }\n                          </Badge>\n                        }\n\n                        {!user.photoURL &&\n                          <>\n                            {loadingAvatar &&\n                              <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                                <Fade\n                                  style={{ transitionDelay: '1s' }}\n                                  in={loadingAvatar}\n                                  unmountOnExit>\n                                  <CircularProgress size={120} thickness={1.8} />\n                                </Fade>\n                              }>\n                                <Avatar className={classes.avatar} alt=\"Avatar\">\n                                  <Typography className={classes.nameInitials} variant=\"h2\">\n                                    {this.getNameInitialsOrIcon()}\n                                  </Typography>\n                                </Avatar>\n                              </Badge>\n                            }\n\n                            {!loadingAvatar &&\n                              <Avatar className={classes.avatar} alt=\"Avatar\">\n                                <Typography className={classes.nameInitials} variant=\"h2\">\n                                  {this.getNameInitialsOrIcon()}\n                                </Typography>\n                              </Avatar>\n                            }\n                          </>\n                        }\n                      </>\n                    }\n                  </Box>\n\n                  {(avatar && avatarUrl) &&\n                    <Button color=\"primary\" disabled={performingAction} startIcon={<CloudUploadIcon />} variant=\"contained\" onClick={this.uploadAvatar}>\n                      Upload\n                    </Button>\n                  }\n\n                  {(!avatar && !avatarUrl) &&\n                    <>\n                      <input\n                        id=\"avatar-input\"\n                        type=\"file\"\n                        hidden\n                        accept=\"image/*\"\n\n                        onChange={this.handleAvatarChange}\n                      />\n\n                      <label htmlFor=\"avatar-input\">\n                        <Button color=\"primary\" component=\"span\" disabled={performingAction} startIcon={<PhotoIcon />} variant=\"contained\">\n                          Choose...\n                        </Button>\n                      </label>\n                    </>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile completion</Typography>\n\n                  {profileCompletion === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {profileCompletion === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {(profileCompletion !== 0 && profileCompletion !== 100)  &&\n                    <Typography color=\"secondary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security rating</Typography>\n\n                  {securityRating === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {securityRating === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {(securityRating !== 0 && securityRating !== 100) &&\n                    <Typography color=\"secondary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <Box textAlign=\"center\" mb={3}>\n              <Box mb={1.5}>\n                {(avatar && avatarUrl) &&\n                  <Badge classes={{ badge: classes.badge }} badgeContent={\n                    <Tooltip title=\"Remove\">\n                      <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                        <CloseIcon fontSize=\"small\" />\n                      </Fab>\n                    </Tooltip>\n                  }>\n                    {loadingAvatar &&\n                      <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                        <Fade\n                          style={{ transitionDelay: '1s' }}\n                          in={loadingAvatar}\n                          unmountOnExit>\n                          <CircularProgress size={120} thickness={1.8} />\n                        </Fade>\n                      }>\n                        <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                      </Badge>\n                    }\n\n                    {!loadingAvatar &&\n                      <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                    }\n                  </Badge>\n                }\n\n                {(!avatar && !avatarUrl) &&\n                  <>\n                    {user.photoURL &&\n                      <Badge classes={{ badge: classes.badge }} badgeContent={\n                        <Tooltip title=\"Remove\">\n                          <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                            <CloseIcon fontSize=\"small\" />\n                          </Fab>\n                        </Tooltip>\n                      }>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <CircularProgress size={120} thickness={1.8} />\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                        }\n                      </Badge>\n                    }\n\n                    {!user.photoURL &&\n                      <>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <Fade\n                              style={{ transitionDelay: '1s' }}\n                              in={loadingAvatar}\n                              unmountOnExit>\n                              <CircularProgress size={120} thickness={1.8} />\n                            </Fade>\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\">\n                              <Typography className={classes.nameInitials} variant=\"h2\">\n                                {this.getNameInitialsOrIcon()}\n                              </Typography>\n                            </Avatar>\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\">\n                            <Typography className={classes.nameInitials} variant=\"h2\">\n                              {this.getNameInitialsOrIcon()}\n                            </Typography>\n                          </Avatar>\n                        }\n                      </>\n                    }\n                  </>\n                }\n              </Box>\n\n              {(avatar && avatarUrl) &&\n                <Button color=\"primary\" disabled={performingAction} startIcon={<CloudUploadIcon />} variant=\"contained\" onClick={this.uploadAvatar}>\n                  Upload\n                </Button>\n              }\n\n              {(!avatar && !avatarUrl) &&\n                <>\n                  <input\n                    id=\"avatar-input\"\n                    type=\"file\"\n                    hidden\n                    accept=\"image/*\"\n\n                    onChange={this.handleAvatarChange}\n                  />\n\n                  <label htmlFor=\"avatar-input\">\n                    <Button color=\"primary\" component=\"span\" disabled={performingAction} startIcon={<PhotoIcon />} variant=\"contained\">\n                      Choose...\n                    </Button>\n                  </label>\n                </>\n              }\n            </Box>\n\n            <Grid container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile completion</Typography>\n\n                  {profileCompletion === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {profileCompletion === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {(profileCompletion !== 0 && profileCompletion !== 100)  &&\n                    <Typography color=\"secondary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security rating</Typography>\n\n                  {securityRating === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {securityRating === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {(securityRating !== 0 && securityRating !== 100) &&\n                    <Typography color=\"secondary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n        </Box>\n\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasFirstName &&\n              <ListItemIcon>\n                <Tooltip title=\"No first name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'first-name' &&\n              <TextField\n                autoComplete=\"given-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.firstName)}\n                fullWidth\n                helperText={(errors && errors.firstName) ? errors.firstName[0] : 'Press Enter to change your first name'}\n                label=\"First name\"\n                placeholder={hasFirstName && userData.firstName}\n                required\n                type=\"text\"\n                value={firstName}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'first-name')}\n\n                onChange={this.handleFirstNameChange}\n              />\n            }\n\n            {showingField !== 'first-name' &&\n              <>\n                <ListItemText\n                  primary=\"First name\"\n                  secondary={hasFirstName ? userData.firstName : 'You don’t have a first name'}\n                />\n\n                <ListItemSecondaryAction>\n                  {hasFirstName &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('first-name')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!hasFirstName &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('first-name')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasLastName &&\n              <ListItemIcon>\n                <Tooltip title=\"No last name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'last-name' &&\n              <TextField\n                autoComplete=\"family-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.lastName)}\n                fullWidth\n                helperText={(errors && errors.lastName) ? errors.lastName[0] : 'Press Enter to change your last name'}\n                label=\"Last name\"\n                placeholder={hasLastName && userData.lastName}\n                required\n                type=\"text\"\n                value={lastName}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'last-name')}\n\n                onChange={this.handleLastNameChange}\n              />\n            }\n\n            {showingField !== 'last-name' &&\n              <>\n                <ListItemText\n                  primary=\"Last name\"\n                  secondary={hasLastName ? userData.lastName : 'You don’t have a last name'}\n                />\n\n                <ListItemSecondaryAction>\n                  {hasLastName &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('last-name')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!hasLastName &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('last-name')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonOutlineIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasUsername &&\n              <ListItemIcon>\n                <Tooltip title=\"No username\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'username' &&\n              <TextField\n                autoComplete=\"username\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.username)}\n                fullWidth\n                helperText={(errors && errors.username) ? errors.username[0] : 'Press Enter to change your username'}\n                label=\"Username\"\n                placeholder={hasUsername && userData.username}\n                required\n                type=\"text\"\n                value={username}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'username')}\n\n                onChange={this.handleUsernameChange}\n              />\n            }\n\n            {showingField !== 'username' &&\n              <>\n                <ListItemText\n                  primary=\"Username\"\n                  secondary={hasUsername ? userData.username : 'You don’t have a username'}\n                />\n\n                <ListItemSecondaryAction>\n                  {hasUsername &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('username')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!hasUsername &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('username')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <EmailIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {user.email &&\n              <ListItemIcon>\n                <>\n                  {user.emailVerified &&\n                    <Tooltip title=\"Verified\">\n                      <CheckIcon color=\"primary\" />\n                    </Tooltip>\n                  }\n\n                  {!user.emailVerified &&\n                    <Tooltip title=\"Not verified\">\n                      <WarningIcon color=\"error\" />\n                    </Tooltip>\n                  }\n                </>\n              </ListItemIcon>\n            }\n\n            {!user.email &&\n              <ListItemIcon>\n                <Tooltip title=\"No e-mail address\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'email-address' &&\n              <TextField\n                autoComplete=\"email\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.emailAddress)}\n                fullWidth\n                helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : 'Press Enter to change your e-mail address'}\n                label=\"E-mail address\"\n                placeholder={user.email}\n                required\n                type=\"email\"\n                value={emailAddress}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'email-address')}\n\n                onChange={this.handleEmailAddressChange}\n              />\n            }\n\n            {showingField !== 'email-address' &&\n              <>\n                <ListItemText\n                  primary=\"E-mail address\"\n                  secondary={user.email ? user.email : 'You don’t have an e-mail address'}\n                />\n\n                {(user.email && !user.emailVerified) &&\n                  <Box clone mr={7}>\n                    <ListItemSecondaryAction>\n                      <Tooltip title=\"Verify\">\n                        <div>\n                          <IconButton color=\"secondary\" disabled={performingAction || sentVerificationEmail} onClick={this.verifyEmailAddress}>\n                            <CheckIcon />\n                          </IconButton>\n                        </div>\n                      </Tooltip>\n                    </ListItemSecondaryAction>\n                  </Box>\n                }\n\n                <ListItemSecondaryAction>\n                  {user.email &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('email-address')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!user.email &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('email-address')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <AccessTimeIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <Hidden xsDown>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format('LLLL')}\n              />\n            </Hidden>\n\n            <Hidden smUp>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format('llll')}\n              />\n            </Hidden>\n          </ListItem>\n\n          <Box mt={1} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <DeleteForeverIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Delete account\"\n              secondary=\"Accounts can’t be recovered\"\n            />\n\n            <ListItemSecondaryAction>\n              <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onDeleteAccountClick}>Delete</Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n\n  componentDidMount() {\n    const { user, userData } = this.props;\n\n    this.setState({\n      profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData }),\n      securityRating: authentication.user.getSecurityRating(user, userData)\n    });\n  }\n\n  componentWillUnmount() {\n    const { avatarUrl } = this.state;\n\n    if (avatarUrl) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatarUrl: ''\n      });\n    }\n  }\n}\n\nAccountTab.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport Box from '@material-ui/core/Box';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Button from '@material-ui/core/Button';\n\nimport FiberManualRecord from '@material-ui/icons/FiberManualRecord';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport FormatColorResetIcon from '@material-ui/icons/FormatColorReset';\n\nimport theming from '../../services/theming';\n\nclass AppearanceTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n  handlePrimaryColorChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const primaryColor = event.target.value;\n\n    if (!primaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.primaryColor.id === primaryColor) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeTheme({\n        primaryColor: primaryColor,\n        secondaryColor: theme.secondaryColor.id,\n        type: theme.type.id\n      }).then((value) => {\n        this.props.openSnackbar('Changed primary color');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleSecondaryColorChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const secondaryColor = event.target.value;\n\n    if (!secondaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.secondaryColor.id === secondaryColor) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeTheme({\n        primaryColor: theme.primaryColor.id,\n        secondaryColor: secondaryColor,\n        type: theme.type.id\n      }).then((value) => {\n        this.props.openSnackbar('Changed secondary color');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleTypeChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const type = event.target.value;\n\n    if (!type) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.type.id === type) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeTheme({\n        primaryColor: theme.primaryColor.id,\n        secondaryColor: theme.secondaryColor.id,\n        type: type\n      }).then((value) => {\n        this.props.openSnackbar('Changed type');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleResetClick = () => {\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theming.isDefaultTheme(theme)) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.resetTheme().then((value) => {\n        this.props.openSnackbar('Reset theme');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    if (!theme) {\n      return null;\n    }\n\n    const { performingAction } = this.state;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <FiberManualRecord color=\"primary\" />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Primary color</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.primaryColor.id}\n\n                    onChange={this.handlePrimaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>{color.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.primaryColor.id}\n\n                    onChange={this.handlePrimaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <FiberManualRecord color=\"secondary\" />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Secondary color</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.secondaryColor.id}\n\n                    onChange={this.handleSecondaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>{color.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.secondaryColor.id}\n\n                    onChange={this.handleSecondaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <InvertColorsIcon />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Type</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.type.id}\n\n                    onChange={this.handleTypeChange}>\n                    {Object.keys(theming.types).map((type) => {\n                      type = theming.types[type];\n\n                      return (\n                        <option key={type.id} value={type.id}>{type.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.type.id}\n\n                    onChange={this.handleTypeChange}>\n                    {Object.keys(theming.types).map((type) => {\n                      type = theming.types[type];\n\n                      return (\n                        <MenuItem key={type.id} value={type.id}>{type.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mt={2} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <FormatColorResetIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Reset theme\"\n              secondary={theming.isDefaultTheme(theme) ? 'No changes made' : 'Changes will be reset'}\n            />\n\n            <ListItemSecondaryAction>\n              <Button\n                color=\"secondary\"\n                disabled={theming.isDefaultTheme(theme) || performingAction}\n                variant=\"contained\"\n\n                onClick={this.handleResetClick}>\n                Reset\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nAppearanceTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default AppearanceTab;\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport LinkIcon from '@material-ui/icons/Link';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\n\nimport AppleIcon from 'mdi-material-ui/Apple';\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport MicrosoftIcon from 'mdi-material-ui/Microsoft';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport YahooIcon from 'mdi-material-ui/Yahoo';\n\nimport authentication from '../../services/authentication';\n\nclass LinksTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n\n  linkAuthProvider = (authProvider) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.linkAuthProvider(authProvider.providerId).then((value) => {\n        this.props.openSnackbar(`${authProvider.name} linked`, 5);\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  unlinkAuthProvider = (authProvider) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.unlinkAuthProvider(authProvider.providerId).then((value) => {\n        this.props.openSnackbar(`${authProvider.name} unlinked`, 4);\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    const { performingAction } = this.state;\n\n    const authProviders = [\n      {\n        providerId: 'apple.com',\n        color: '#000000',\n        icon: <AppleIcon />,\n        name: 'Apple'\n      },\n      {\n        providerId: 'facebook.com',\n        color: '#3c5a99',\n        icon: <FacebookBoxIcon />,\n        name: 'Facebook'\n      },\n      {\n        providerId: 'github.com',\n        color: '#24292e',\n        icon: <GitHubCircleIcon />,\n        name: 'GitHub'\n      },\n      {\n        providerId: 'google.com',\n        color: '#4285f4',\n        icon: <GoogleIcon />,\n        name: 'Google'\n      },\n      {\n        providerId: 'microsoft.com',\n        color: '#f65314',\n        icon: <MicrosoftIcon />,\n        name: 'Microsoft'\n      },\n      {\n        providerId: 'twitter.com',\n        color: '#1da1f2',\n        icon: <TwitterIcon />,\n        name: 'Twitter'\n      },\n      {\n        providerId: 'yahoo.com',\n        color: '#410093',\n        icon: <YahooIcon />,\n        name: 'Yahoo'\n      }\n    ];\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          {authProviders.map((authProvider) => {\n            const authProviderData = authentication.authProviderData(authProvider.providerId);\n            let identifier = null;\n\n            if (authProviderData) {\n              const displayName = authProviderData.displayName;\n              const emailAddress = authProviderData.email;\n              const phoneNumber = authProviderData.phoneNumber;\n\n              identifier = displayName || emailAddress || phoneNumber;\n            }\n\n            return (\n              <ListItem key={authProvider.providerId}>\n                <ListItemIcon>\n                  <Box color={theme.type.id === 'light' ? authProvider.color : null}>\n                    {authProvider.icon}\n                  </Box>\n                </ListItemIcon>\n\n                {authProviderData &&\n                  <ListItemText\n                    primary={authProvider.name}\n                    secondary={identifier}\n                  />\n                }\n\n                {!authProviderData &&\n                  <ListItemText\n                    primary={authProvider.name}\n                  />\n                }\n\n                <ListItemSecondaryAction>\n                  {authProviderData &&\n                    <Tooltip title=\"Unlink\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.unlinkAuthProvider(authProvider)}>\n                          <LinkOffIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!authProviderData &&\n                    <Tooltip title=\"Link\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.linkAuthProvider(authProvider)}>\n                          <LinkIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nLinksTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default LinksTab;\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport validate from 'validate.js';\nimport moment from 'moment';\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport LockIcon from '@material-ui/icons/Lock';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst initialState = {\n  showingField: '',\n\n  password: '',\n  passwordConfirmation: '',\n\n  performingAction: false,\n\n  errors: null\n};\n\nclass SecurityTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  showField = (fieldId) => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = (callback) => {\n    this.setState({\n      showingField: '',\n\n      password: '',\n      passwordConfirmation: '',\n\n      errors: null\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  changeField = (fieldId) => {\n    switch (fieldId) {\n      case 'password':\n        const { password } = this.state;\n\n        const errors = validate({\n          password: password\n        }, {\n          password: constraints.password\n        });\n\n        if (errors) {\n          this.setState({\n            errors: errors\n          });\n\n          return;\n        }\n\n        this.setState({\n          errors: null\n        }, () => {\n          this.showField('password-confirmation');\n        });\n        return;\n\n      case 'password-confirmation':\n        this.changePassword();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  changePassword = () => {\n    const { password, passwordConfirmation } = this.state;\n\n    const errors = validate({\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }, {\n      password: constraints.password,\n      passwordConfirmation: constraints.passwordConfirmation\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changePassword(password).then(() => {\n          this.hideFields(() => {\n            this.props.openSnackbar('Changed password');\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === 'Escape') {\n      this.hideFields();\n    } else if (key === 'Enter') {\n      this.changeField(fieldId);\n    }\n  };\n\n  handlePasswordChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Properties\n    const { userData } = this.props;\n\n    const {\n      showingField,\n\n      password,\n      passwordConfirmation,\n\n      performingAction,\n\n      errors\n    } = this.state;\n\n    const hasChangedPassword = userData && userData.lastPasswordChange;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <LockIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {showingField === 'password' &&\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.password)}\n                fullWidth\n                helperText={(errors && errors.password) ? errors.password[0] : 'Press Enter to change your password'}\n                label=\"Password\"\n                required\n                type=\"password\"\n                value={password}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'password')}\n\n                onChange={this.handlePasswordChange}\n              />\n            }\n\n            {showingField === 'password-confirmation' &&\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.passwordConfirmation)}\n                fullWidth\n                helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : 'Press Enter to change your password'}\n                label=\"Password confirmation\"\n                required\n                type=\"password\"\n                value={passwordConfirmation}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'password-confirmation')}\n\n                onChange={this.handlePasswordConfirmationChange}\n              />\n            }\n\n            {(showingField !== 'password' && showingField !== 'password-confirmation') &&\n              <>\n                <Hidden xsDown>\n                  <ListItemText\n                    primary=\"Password\"\n                    secondary={hasChangedPassword ? `Last changed ${moment(userData.lastPasswordChange.toDate()).format('LL')}` : 'Never changed'}\n                  />\n                </Hidden>\n\n                <Hidden smUp>\n                  <ListItemText\n                    primary=\"Password\"\n                    secondary={hasChangedPassword ? `Last changed ${moment(userData.lastPasswordChange.toDate()).format('ll')}` : 'Never changed'}\n                  />\n                </Hidden>\n\n                <ListItemSecondaryAction>\n                  <Tooltip title=\"Change\">\n                    <div>\n                      <IconButton disabled={performingAction} onClick={() => this.showField('password')}>\n                        <EditIcon />\n                      </IconButton>\n                    </div>\n                  </Tooltip>\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nSecurityTab.propTypes = {\n  // Properties\n  userData: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default SecurityTab;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport LinkIcon from '@material-ui/icons/Link';\nimport SecurityIcon from '@material-ui/icons/Security';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport AccountTab from '../AccountTab';\nimport AppearanceTab from '../AppearanceTab';\nimport LinksTab from '../LinksTab';\nimport SecurityTab from '../SecurityTab';\n\nconst styles = (theme) => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  tabs: {\n    display: 'initial'\n  }\n});\n\nconst tabs = [\n  {\n    key: 'account',\n    icon: <AccountCircleIcon />,\n    label: 'Account'\n  },\n\n  {\n    key: 'appearance',\n    icon: <PaletteIcon />,\n    label: 'Appearance'\n  },\n\n  {\n    key: 'links',\n    icon: <LinkIcon />,\n    label: 'Links'\n  },\n\n  {\n    key: 'security',\n    icon: <SecurityIcon />,\n    label: 'Security'\n  }\n];\n\nconst initialState = {\n  selectedTab: 0\n};\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleTabChange = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  handleIndexChange = (index) => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const {\n      user,\n      userData,\n      theme\n    } = this.props;\n\n    // Custom Functions\n    const {\n      openSnackbar\n    } = this.props;\n\n    // Custom Functions\n    const {\n      onDeleteAccountClick\n    } = this.props;\n\n    const { selectedTab } = this.state;\n\n    return (\n      <Dialog {...dialogProps} onExited={this.handleExited}>\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">\n            Settings\n          </Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton className={classes.closeButton} onClick={dialogProps.onClose}>\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <Hidden xsDown>\n          <Tabs\n            classes={{ root: classes.tabs }}\n            style={{ overflow: 'initial', minHeight: 'initial' }}\n\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            value={selectedTab}\n            variant=\"fullWidth\"\n            onChange={this.handleTabChange}>\n            {tabs.map((tab) => {\n              return (\n                <Tab key={tab.key} icon={tab.icon} label={tab.label} />\n              );\n            })}\n          </Tabs>\n        </Hidden>\n\n        <Hidden smUp>\n          <Tabs\n            classes={{ root: classes.tabs }}\n            style={{ overflow: 'initial', minHeight: 'initial' }}\n\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            value={selectedTab}\n            variant=\"fullWidth\"\n            onChange={this.handleTabChange}>\n            {tabs.map((tab) => {\n              return (\n                <Tab key={tab.key} icon={tab.icon} label={tab.label} />\n              );\n            })}\n          </Tabs>\n        </Hidden>\n\n        <SwipeableViews index={selectedTab} onChangeIndex={this.handleIndexChange}>\n          <AccountTab\n            user={user}\n            userData={userData}\n\n            openSnackbar={openSnackbar}\n\n            onDeleteAccountClick={onDeleteAccountClick}\n          />\n\n          <AppearanceTab\n            theme={theme}\n\n            openSnackbar={openSnackbar}\n          />\n\n          <LinksTab\n            theme={theme}\n\n            openSnackbar={openSnackbar}\n          />\n\n          <SecurityTab\n            user={user}\n            userData={userData}\n\n            openSnackbar={openSnackbar}\n          />\n        </SwipeableViews>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n  theme: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Custom Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SettingsDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  username: ''\n};\n\nclass DeleteAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleKeyPress = (event) => {\n    const { userData } = this.props;\n\n    if (userData && userData.username) {\n      const { username } = this.state;\n\n      if (!username) {\n        return;\n      }\n\n      if (username !== userData.username) {\n        return;\n      }\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.deleteAccount();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleUsernameChange = (event) => {\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  render() {\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { performingAction, userData } = this.props;\n\n    // Custom Functions\n    const { deleteAccount } = this.props;\n\n    const { username } = this.state;\n\n    const hasUsername = userData && userData.username;\n\n    return (\n      <Dialog {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\n        <DialogTitle>\n          Delete account?\n        </DialogTitle>\n\n        <DialogContent>\n          <Box mb={hasUsername ? 2 : 0}>\n            <DialogContentText>\n              Deleted accounts can’t be recovered.\n              All data associated with your account will be deleted.\n            </DialogContentText>\n\n            {hasUsername &&\n              <DialogContentText>\n                Type your username and <Hidden xsDown>click</Hidden><Hidden smUp>tap</Hidden> Delete to delete your account.\n                This action is irreversible.\n              </DialogContentText>\n            }\n          </Box>\n\n          {hasUsername &&\n            <TextField\n              autoComplete=\"username\"\n              autoFocus\n              color=\"secondary\"\n              disabled={performingAction}\n              fullWidth\n              label=\"Username\"\n              placeholder={userData.username}\n              required\n              type=\"text\"\n              value={username}\n              variant=\"outlined\"\n\n              onChange={this.handleUsernameChange}\n            />\n          }\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"secondary\" disabled={performingAction} onClick={dialogProps.onClose}>Cancel</Button>\n          <Button color=\"secondary\" disabled={performingAction || (hasUsername && username !== userData.username)} variant=\"contained\" onClick={deleteAccount}>Delete</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nDeleteAccountDialog.propTypes = {\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  performingAction: PropTypes.bool.isRequired,\n  userData: PropTypes.object,\n\n  // Custom Functions\n  deleteAccount: PropTypes.func.isRequired\n};\n\nexport default DeleteAccountDialog;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst styles = (theme) => ({\n  noTitlePadding: {\n    paddingTop: theme.spacing(3)\n  }\n});\n\nclass AlertDialog extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const {\n      title,\n      contentText,\n      dismissiveAction,\n      confirmingAction,\n      acknowledgementAction\n    } = this.props;\n\n    if ((dismissiveAction || confirmingAction) && acknowledgementAction) {\n      console.error(\n        'Dialogs should contain a maximum of two actions. ' +\n        'If a single action is provided, it must be an acknowledgement action. ' +\n        'If two actions are provided, one must be a confirming action, and the other a dismissing action. ' +\n        'Providing a third action such as “Learn more” is not recommended as it navigates the user away from the dialog, leaving the dialog task unfinished. ' +\n        'https://material.io/design/components/dialogs.html#actions'\n      );\n\n      return null;\n    }\n\n    return (\n      <Dialog {...dialogProps}>\n        {title &&\n          <DialogTitle>{title}</DialogTitle>\n        }\n\n        <DialogContent className={title ? null : classes.noTitlePadding}>\n          <DialogContentText>\n            {contentText}\n          </DialogContentText>\n        </DialogContent>\n\n        {(dismissiveAction || confirmingAction || acknowledgementAction) &&\n          <DialogActions>\n            {dismissiveAction}\n            {confirmingAction}\n            {acknowledgementAction}\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nAlertDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  title: PropTypes.string,\n  contentText: PropTypes.string.isRequired,\n  dismissiveAction: PropTypes.element,\n  confirmingAction: PropTypes.element,\n  acknowledgementAction: PropTypes.element,\n};\n\nexport default withStyles(styles)(AlertDialog);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport AboutDialog from '../AboutDialog';\nimport SignUpDialog from '../SignUpDialog';\nimport SignInDialog from '../SignInDialog';\nimport SettingsDialog from '../SettingsDialog';\nimport DeleteAccountDialog from '../DeleteAccountDialog';\nimport AlertDialog from '../AlertDialog';\n\nclass DialogHost extends Component {\n  render() {\n    // Properties\n    const {\n      user,\n      dialogs\n    } = this.props;\n\n    const aboutDialog = dialogs.aboutDialog;\n    const signUpDialog = dialogs.signUpDialog;\n    const signInDialog = dialogs.signInDialog;\n    const settingsDialog = dialogs.settingsDialog;\n    const deleteAccountDialog = dialogs.deleteAccountDialog;\n    const signOutDialog = dialogs.signOutDialog;\n\n    return (\n      <>\n        <AboutDialog\n          dialogProps={aboutDialog.dialogProps}\n\n          {...aboutDialog.props}\n        />\n\n        {user &&\n          <>\n            <AlertDialog\n              dialogProps={signOutDialog.dialogProps}\n\n              {...signOutDialog.props}\n            />\n          </>\n        }\n\n        <Hidden xsDown>\n          {user &&\n            <>\n              <DeleteAccountDialog\n                dialogProps={deleteAccountDialog.dialogProps}\n\n                {...deleteAccountDialog.props}\n              />\n            </>\n          }\n\n          {!user &&\n            <>\n              <SignUpDialog\n                dialogProps={signUpDialog.dialogProps}\n\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={signInDialog.dialogProps}\n\n                {...signInDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n\n        <Hidden smDown>\n          {user &&\n            <>\n              <SettingsDialog\n                dialogProps={settingsDialog.dialogProps}\n\n                {...settingsDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n\n        <Hidden smUp>\n          {user &&\n            <>\n              <DeleteAccountDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...deleteAccountDialog.dialogProps\n                }}\n\n                {...deleteAccountDialog.props}\n              />\n            </>\n          }\n\n          {!user &&\n            <>\n              <SignUpDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signUpDialog.dialogProps\n                }}\n\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signInDialog.dialogProps\n                }}\n\n                {...signInDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n\n        <Hidden mdUp>\n          {user &&\n            <>\n              <SettingsDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...settingsDialog.dialogProps\n                }}\n\n                {...settingsDialog.props}\n              />\n            </>\n          }\n        </Hidden>\n      </>\n    );\n  }\n}\n\nDialogHost.propTypes = {\n  // Properties\n  user: PropTypes.object,\n  dialogs: PropTypes.object.isRequired\n};\n\nexport default DialogHost;\n","import React, { Component } from 'react';\n\nimport readingTime from 'reading-time';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { auth, firestore } from '../../firebase';\nimport authentication from '../../services/authentication';\nimport theming from '../../services/theming';\n\nimport ErrorBoundary from '../ErrorBoundary';\nimport LaunchScreen from '../LaunchScreen';\nimport Bar from '../Bar';\nimport Router from '../Router';\nimport DialogHost from '../DialogHost';\n\nconst initialState = {\n  ready: false,\n  performingAction: false,\n\n  theme: theming.defaultTheme,\n\n  user: null,\n  userData: null,\n\n  aboutDialog: {\n    open: false\n  },\n\n  signUpDialog: {\n    open: false\n  },\n\n  signInDialog: {\n    open: false\n  },\n\n  settingsDialog: {\n    open: false\n  },\n\n  deleteAccountDialog: {\n    open: false\n  },\n\n  signOutDialog: {\n    open: false\n  },\n\n  snackbar: {\n    autoHideDuration: 0,\n    message: '',\n    open: false\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetState = (callback) => {\n    this.setState({\n      ready: true,\n\n      theme: theming.defaultTheme,\n\n      user: null,\n      userData: null\n    }, callback);\n  };\n\n  setTheme = (theme, callback) => {\n    if (!theme) {\n      this.setState({\n        theme: theming.defaultTheme\n      }, callback);\n\n      return;\n    }\n\n    this.setState({\n      theme: theming.createTheme(theme)\n    }, callback);\n  };\n\n  openDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = true;\n\n    this.setState({ dialog }, callback);\n  };\n\n  closeDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = false;\n\n    this.setState({ dialog }, callback);\n  };\n\n  closeAllDialogs = (callback) => {\n    this.setState({\n      aboutDialog: {\n        open: false\n      },\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      deleteAccountDialog: {\n        open: false\n      },\n\n      signOutDialog: {\n        open: false\n      }\n    }, callback);\n  };\n\n  deleteAccount = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.deleteAccount().then(() => {\n        this.closeAllDialogs(() => {\n          this.openSnackbar('Deleted account');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  signOut = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.signOut().then(() => {\n        this.closeAllDialogs(() => {\n          this.openSnackbar('Signed out');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  openSnackbar = (message, autoHideDuration = 2, callback) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * autoHideDuration,\n        message,\n        open: true\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    const {\n      user,\n      userData,\n      theme,\n      ready,\n      performingAction,\n    } = this.state;\n\n    const {\n      aboutDialog,\n      signUpDialog,\n      signInDialog,\n      settingsDialog,\n      deleteAccountDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n\n        <ErrorBoundary>\n          {!ready &&\n            <LaunchScreen />\n          }\n\n          {ready &&\n            <>\n              <Bar\n                performingAction={performingAction}\n\n                user={user}\n                userData={userData}\n\n                onSignUpClick={() => this.openDialog('signUpDialog')}\n                onSignInClick={() => this.openDialog('signInDialog')}\n\n                onAboutClick={() => this.openDialog('aboutDialog')}\n                onSettingsClick={() => this.openDialog('settingsDialog')}\n                onSignOutClick={() => this.openDialog('signOutDialog')}\n              />\n\n              <Router\n                user={user}\n\n                openSnackbar={this.openSnackbar}\n              />\n\n              <DialogHost\n                user={user}\n                dialogs={\n                  {\n                    aboutDialog: {\n                      dialogProps: {\n                        open: aboutDialog.open,\n\n                        onClose: () => this.closeDialog('aboutDialog')\n                      },\n\n                      props: {\n                        user: user\n                      }\n                    },\n\n                    signUpDialog: {\n                      dialogProps: {\n                        open: signUpDialog.open,\n\n                        onClose: (callback) => {\n                          this.closeDialog('signUpDialog');\n\n                          if (callback && typeof callback === 'function') {\n                            callback();\n                          }\n                        }\n                      },\n\n                      props: {\n                        performingAction: performingAction,\n\n                        openSnackbar: this.openSnackbar\n                      }\n                    },\n\n                    signInDialog: {\n                      dialogProps: {\n                        open: signInDialog.open,\n\n                        onClose: (callback) => {\n                          this.closeDialog('signInDialog');\n\n                          if (callback && typeof callback === 'function') {\n                            callback();\n                          }\n                        }\n                      },\n\n                      props: {\n                        performingAction: performingAction,\n\n                        openSnackbar: this.openSnackbar\n                      }\n                    },\n\n                    settingsDialog: {\n                      dialogProps: {\n                        open: settingsDialog.open,\n\n                        onClose: () => this.closeDialog('settingsDialog')\n                      },\n\n                      props: {\n                        user: user,\n                        userData: userData,\n                        theme: theme,\n\n                        openSnackbar: this.openSnackbar,\n\n                        onDeleteAccountClick: () => this.openDialog('deleteAccountDialog')\n                      }\n                    },\n\n                    deleteAccountDialog: {\n                      dialogProps: {\n                        open: deleteAccountDialog.open,\n\n                        onClose: () => this.closeDialog('deleteAccountDialog')\n                      },\n\n                      props: {\n                        performingAction: performingAction,\n                        userData: userData,\n\n                        deleteAccount: this.deleteAccount\n                      }\n                    },\n\n                    signOutDialog: {\n                      dialogProps: {\n                        open: signOutDialog.open,\n\n                        onClose: () => this.closeDialog('signOutDialog')\n                      },\n\n                      props: {\n                        title: 'Sign out?',\n                        contentText: 'While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.',\n                        dismissiveAction: <Button color=\"primary\" onClick={() => this.closeDialog('signOutDialog')}>Cancel</Button>,\n                        confirmingAction: <Button color=\"primary\" disabled={performingAction} variant=\"contained\" onClick={this.signOut}>Sign Out</Button>\n                      }\n                    }\n                  }\n                }\n              />\n\n              <Snackbar\n                autoHideDuration={snackbar.autoHideDuration}\n                message={snackbar.message}\n                open={snackbar.open}\n                onClose={this.closeSnackbar}\n              />\n            </>\n          }\n        </ErrorBoundary>\n      </MuiThemeProvider>\n    );\n  }\n\n  componentDidMount() {\n    this.onAuthStateChangedObserver = auth.onAuthStateChanged((user) => {\n      // The user is not signed in or doesn’t have a user ID.\n      if (!user || !user.uid) {\n        if (this.userDocumentSnapshotListener) {\n          this.userDocumentSnapshotListener();\n        }\n\n        this.resetState();\n\n        return;\n      }\n\n      // The user is signed in, begin retrieval of external user data.\n      this.userDocumentSnapshotListener = firestore.collection('users').doc(user.uid).onSnapshot((snapshot) => {\n        const data = snapshot.data();\n\n        // The user doesn’t have a data point, equivalent to not signed in.\n        if (!snapshot.exists || !data) {\n          if (this.userDocumentSnapshotListener) {\n            this.userDocumentSnapshotListener();\n          }\n\n          this.resetState();\n\n          return;\n        }\n\n        this.setTheme(data.theme, () => {\n          this.setState({\n            ready: true,\n\n            user: user,\n            userData: data\n          });\n        });\n      }, (error) => {\n        this.resetState(() => {\n          const code = error.code;\n          const message = error.message;\n\n          switch (code) {\n            default:\n              this.openSnackbar(message);\n              return;\n          }\n        });\n      });\n    }, (error) => {\n      this.resetState(() => {\n        const code = error.code;\n        const message = error.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.onAuthStateChangedObserver) {\n      this.onAuthStateChangedObserver();\n    }\n\n    if (this.userDocumentSnapshotListener) {\n      this.userDocumentSnapshotListener();\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport * as Sentry from '@sentry/browser';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nSentry.init({\n  dsn: process.env.REACT_APP_SENTRY_DSN,\n  release: `${process.env.REACT_APP_NAME}@${process.env.REACT_APP_VERSION}`\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}