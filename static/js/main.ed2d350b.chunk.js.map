{"version":3,"sources":["layout/Bar.js","layout/EmptyState.js","content/HomeContent.js","content/NotFoundContent.js","layout/AuthProviderList.js","dialogs/SignUpDialog.js","dialogs/SignInDialog.js","dialogs/ResetPasswordDialog.js","dialogs/ConfirmationDialog.js","tabs/settings/AccountTab.js","tabs/settings/AppearanceTab.js","dialogs/SettingsDialog.js","App.js","serviceWorker.js","index.js"],"names":["Bar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","_this$props","classes","name","isSignedIn","isSigningUp","isSigningIn","user","_this$props2","onSignUpClick","onSignInClick","react_default","a","createElement","AppBar_default","color","position","Toolbar_default","variant","Typography_default","style","flexGrow","Fragment","IconButton_default","onClick","photoURL","Avatar_default","alt","src","Person_default","Menu_default","open","Boolean","onClose","MenuItem_default","Button_default","className","signUpButton","disabled","Component","withStyles","theme","marginRight","spacing","unit","EmptyState","icon","title","description","button","center","top","left","transform","textAlign","HomeContent","layout_EmptyState","Home_default","emptyStateIcon","Fab_default","component","Link","to","fontSize","concat","marginTop","NotFoundContent","FindInPage_default","buttonIcon","AuthProviderList","onAuthProviderClick","Hidden_default","only","DialogActions_default","dialogActions","google","firebase","auth","GoogleAuthProvider","Google_default","facebook","FacebookAuthProvider","FacebookBox_default","twitter","TwitterAuthProvider","Twitter_default","gitHub","GithubAuthProvider","GithubCircle_default","dialogActionsMobile","buttonMobile","justifyContent","marginBottom","display","backgroundColor","initialState","emailAddress","password","passwordConfirmation","errors","SignUpDialog","signUp","_this$state","validate","email","presence","allowEmpty","length","minimum","equality","handleExited","handleKeyPress","key","altKey","ctrlKey","metaKey","shiftKey","handleEmailAddressChange","target","value","handlePasswordChange","handlePasswordConfirmationChange","handleSignUpClick","fullScreen","_this$state2","Dialog_default","onExited","onKeyPress","DialogTitle_default","DialogContent_default","DialogContentText_default","layout_AuthProviderList","TextField_default","autoComplete","error","fullWidth","helperText","label","margin","onChange","required","type","SignInDialog","signIn","handleSignInClick","onResetPasswordClick","placeholder","ResetPasswordDialog","resetPassword","preventDefault","handleResetPasswordClick","isResettingPassword","autoFocus","ConfirmationDialog","onOkClick","contentText","cancelText","okText","disableOkButton","highlightOkButton","onCancelClick","AccountTab","openVerifyEmailAddressDialog","verifyEmailAddressDialog","closeVerifyEmailAddressDialog","callback","verifyEmailAddress","onVerifyEmailAddressClick","isVerifyingEmailAddress","dialogContentText","List_default","ListItem_default","ListItemIcon_default","Tooltip_default","Email_default","ListItemText_default","primary","secondary","emailVerified","ListItemSecondaryAction_default","AccessTime_default","moment","metadata","lastSignInTime","format","creationTime","dialogs_ConfirmationDialog","AppearanceTab","colors","types","primaryColor","secondaryColor","onPrimaryColorChange","onSecondaryColorChange","onTypeChange","FormControl_default","InputLabel_default","Select_default","map","id","index","charAt","toUpperCase","slice","SettingsDialog","changeTab","selectedTab","changeIndex","onResetClick","Tabs_default","Tab_default","light","dark","settings_AccountTab","settings_AppearanceTab","lib_default","onChangeIndex","setTimeout","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","import","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","defaultTheme","createMuiTheme","palette","typography","useNextVariants","settings","App","updateTheme","removeLocalStorage","find","localStorage","removeItem","setItem","JSON","stringify","resetTheme","changePrimaryColor","changeSecondaryColor","changeType","showSignUpDialog","signUpDialog","closeSignUpDialog","showSignInDialog","signInDialog","closeSignInDialog","showResetPasswordDialog","resetPasswordDialog","closeResetPasswordDialog","showSettingsDialog","settingsDialog","closeSettingsDialog","showSignOutDialog","signOutDialog","closeSignOutDialog","openSnackbar","message","snackbar","autoHideDuration","readingTime","time","closeSnackbar","clearMessage","arguments","undefined","createUserWithEmailAndPassword","then","userCredential","catch","signInWithEmailAndPassword","displayName","signInWithAuthProvider","authProvider","signInWithPopup","sendPasswordResetEmail","sendEmailVerification","signOut","isSigningOut","isAuthReady","_this$state3","_this$state4","react_router_dom","basename","styles","minHeight","layout_Bar","react_router","path","exact","Code_default","href","rel","dialogs_SignUpDialog","dialogs_SignInDialog","dialogs_ResetPasswordDialog","dialogs_SettingsDialog","Snackbar_default","_this2","parse","getItem","removeAuthObserver","onAuthStateChanged","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed2d350b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst styles = (theme) => ({\n  signUpButton: {\n    marginRight: theme.spacing.unit\n  }\n});\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Properties\n    const { classes, name, isSignedIn, isSigningUp, isSigningIn, user } = this.props;\n\n    // Events\n    const { onSignUpClick, onSignInClick } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Typography style={{ flexGrow: 1 }} color=\"inherit\" variant=\"h6\">{name}</Typography>\n\n          {isSignedIn &&\n            <React.Fragment>\n              <IconButton color=\"inherit\" onClick={this.openMenu}>\n                {user.photoURL ? <Avatar alt=\"Avatar\" src={user.photoURL} /> : <PersonIcon />}\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </React.Fragment>\n          }\n\n          {!isSignedIn &&\n            <React.Fragment>\n              <Button className={classes.signUpButton} color=\"secondary\" disabled={isSigningUp} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              <Button color=\"secondary\" disabled={isSigningIn} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </React.Fragment>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  isSignedIn: PropTypes.bool.isRequired,\n  isSigningUp: PropTypes.bool.isRequired,\n  isSigningIn: PropTypes.bool.isRequired,\n\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Bar);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n};\n\nclass EmptyState extends Component {\n  render() {\n    const { classes, icon, title, description, button } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon}\n        {title && <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>}\n        {description && <Typography color=\"textSecondary\" variant=\"subtitle1\">{description}</Typography>}\n        {button}\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  classes: PropTypes.object.isRequired,\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  button: PropTypes.element\n};\n\nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  }\n});\n\nclass HomeContent extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<HomeIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Home\"\n        description=\"Use React + Material-UI + Firebase as a starting point for your project.\"\n        button={\n          <Fab className={classes.button} color=\"primary\" component={Link} to=\"/something-crazy\" variant=\"extended\">\n            Do Something Crazy\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nHomeContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(HomeContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport FindIcon from '@material-ui/icons/FindInPage';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  },\n\n  buttonIcon: {\n    marginRight: `${theme.spacing.unit}px`\n  }\n});\n\nclass NotFoundContent extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<FindIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Content Not Found\"\n        description=\"The requested URL was not found on this server.\"\n        button={\n          <Fab className={classes.button} color=\"primary\" component={Link} to=\"/\" variant=\"extended\">\n            <HomeIcon className={classes.buttonIcon} /> Go Home\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nNotFoundContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NotFoundContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport firebase from 'firebase/app';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nconst styles = (theme) => ({\n  dialogActions: {\n    justifyContent: 'center',\n\n    marginTop: `${theme.spacing.unit * 2.5}px`,\n    marginBottom: `${theme.spacing.unit}px`\n  },\n\n  dialogActionsMobile: {\n    display: 'grid',\n    justifyContent: 'stretch',\n\n    marginTop: `${theme.spacing.unit * 2.5}px`,\n    marginBottom: `${theme.spacing.unit / 3}px`\n  },\n\n  buttonMobile: {\n    marginBottom: `${theme.spacing.unit * 1.5}px`\n  },\n\n  google: {\n    backgroundColor: '#4285f4',\n    color: '#ffffff'\n  },\n\n  facebook: {\n    backgroundColor: '#3c5a99',\n    color: '#ffffff'\n  },\n\n  twitter: {\n    backgroundColor: '#1da1f2',\n    color: '#ffffff'\n  },\n\n  gitHub: {\n    backgroundColor: '#24292e',\n    color: '#ffffff'\n  },\n\n  icon: {\n    marginRight: `${theme.spacing.unit / 2}px`\n  }\n});\n\nclass AuthProviderList extends Component {\n  render() {\n    // Properties\n    const { classes, isSigningIn } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    return (\n      <React.Fragment>\n        <Hidden only=\"xs\">\n          <DialogActions className={classes.dialogActions}>\n            <Button className={classes.google} disabled={isSigningIn} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={classes.facebook} disabled={isSigningIn} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={classes.twitter} disabled={isSigningIn} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n\n            <Button className={classes.gitHub} disabled={isSigningIn} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n          </DialogActions>\n        </Hidden>\n\n        <Hidden only={['sm', 'md', 'lg', 'xl']}>\n          <DialogActions className={classes.dialogActionsMobile}>\n            <Button className={`${classes.google} ${classes.buttonMobile}`} disabled={isSigningIn} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={`${classes.facebook} ${classes.buttonMobile}`} disabled={isSigningIn} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={`${classes.twitter} ${classes.buttonMobile}`} disabled={isSigningIn} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n\n            <Button className={`${classes.gitHub} ${classes.buttonMobile}`} disabled={isSigningIn} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n          </DialogActions>\n        </Hidden>\n      </React.Fragment>\n    );\n  }\n}\n\nAuthProviderList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  isSigningIn: PropTypes.bool,\n\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AuthProviderList);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AuthProviderList from '../layout/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      },\n      \n      password: {\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      },\n\n      passwordConfirmation: {\n        equality: 'password',\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress, password, passwordConfirmation } = this.state;\n    \n    const errors = validate({ emailAddress, password, passwordConfirmation }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signUp(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({ passwordConfirmation });\n  };\n\n  handleSignUpClick = () => {\n    this.signUp();\n  };\n\n  render() {\n    // Properties\n    const { open, fullScreen, isSigningUp, isSigningIn } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick } = this.props;\n\n    const { emailAddress, password, passwordConfirmation, errors } = this.state;\n\n    return (\n      <Dialog open={open} fullScreen={fullScreen} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Create an account to access features that are unavailable to users who haven't signed up.\n          </DialogContentText>\n\n          <AuthProviderList isSigningIn={isSigningIn} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              label=\"E-mail address\"\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"new-password\"\n              error={(errors && errors.password) ? true : false}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              label=\"Password\"\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              required\n              type=\"password\"\n              value={password}\n            />\n\n            <TextField\n              autoComplete=\"password\"\n              error={(errors && errors.passwordConfirmation) ? true : false}\n              fullWidth\n              helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n              label=\"Password confirmation\"\n              margin=\"normal\"\n              onChange={this.handlePasswordConfirmationChange}\n              required\n              type=\"password\"\n              value={passwordConfirmation}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password || !passwordConfirmation) || isSigningUp} variant=\"contained\" onClick={this.handleSignUpClick}>Sign Up</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  fullScreen: PropTypes.bool,\n  isSigningUp: PropTypes.bool.isRequired,\n  isSigningIn: PropTypes.bool.isRequired,\n\n  signUp: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default SignUpDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AuthProviderList from '../layout/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signIn = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      },\n      \n      password: {\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress, password } = this.state;\n    \n    const errors = validate({ emailAddress, password }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signIn(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handleSignInClick = () => {\n    this.signIn();\n  };\n\n  render() {\n    // Properties\n    const { open, fullScreen, isSigningIn } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick, onResetPasswordClick } = this.props;\n\n    const { emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog open={open} fullScreen={fullScreen} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Some features might be unavailable until you sign in.\n            While you're signed in you can manage your account.\n          </DialogContentText>\n\n          <AuthProviderList isSigningIn={isSigningIn} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"current-password\"\n              error={(errors && errors.password) ? true : false}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              value={password}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={onResetPasswordClick}>Reset Password</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password) || isSigningIn} variant=\"contained\" onClick={this.handleSignInClick}>Sign In</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  fullScreen: PropTypes.bool,\n  isSigningIn: PropTypes.bool.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired,\n  onResetPasswordClick: PropTypes.func.isRequired\n};\n\nexport default SignInDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n\n  errors: null\n};\n\nclass ResetPasswordDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress } = this.state;\n    \n    const errors = validate({ emailAddress }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.resetPassword(emailAddress);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.resetPassword();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handleResetPasswordClick = () => {\n    this.resetPassword();\n  };\n\n  render() {\n    // Properties\n    const { open, isResettingPassword } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Reset your password\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            An e-mail will be sent to your e-mail address containing instructions on how to reset your password.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={!emailAddress || isResettingPassword} variant=\"contained\" onClick={this.handleResetPasswordClick}>Reset Password</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nResetPasswordDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isResettingPassword: PropTypes.bool.isRequired,\n\n  resetPassword: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default ResetPasswordDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\n/**\n * Confirmation dialogs give users the ability to provide final confirmation of a choice\n * before committing to it, so they have a chance to change their minds if necessary.\n * If the user confirms a choice, it’s carried out. Otherwise, the user can dismiss the\n * dialog. For example, users can listen to multiple ringtones but only make a final\n * selection upon touching “OK.”\n */\nclass ConfirmationDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    /**\n     * Properties\n     */\n\n    // Dialog\n    const { open } = this.props;\n\n    // Custom\n    const { title, contentText, cancelText, okText, disableOkButton, highlightOkButton } = this.props;\n\n    /**\n     * Events\n     */\n\n    // Dialog\n    const { onClose } = this.props;\n\n    // Custom\n    const { onCancelClick, onOkClick } = this.props;\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" disabled={disableOkButton} variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string.isRequired,\n  contentText: PropTypes.string.isRequired,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default ConfirmationDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\n\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport ConfirmationDialog from '../../dialogs/ConfirmationDialog';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    };\n  }\n\n  openVerifyEmailAddressDialog = () => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeVerifyEmailAddressDialog = (callback) => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.closeVerifyEmailAddressDialog(() => {\n      this.props.onVerifyEmailAddressClick();\n    });\n  };\n\n  render() {\n    const { classes, user, isVerifyingEmailAddress } = this.props;\n    const { verifyEmailAddressDialog } = this.state;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          This is a summary of your account.\n          You can manage your account throughout all the settings.\n        </DialogContentText>\n\n        <List>\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"E-mail address\">\n                <EmailIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary={user.email} secondary={user.emailVerified ? 'Verified' : 'Not verified'} />\n\n            {!user.emailVerified &&\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isVerifyingEmailAddress} variant=\"contained\" onClick={this.openVerifyEmailAddressDialog}>Verify</Button>\n              </ListItemSecondaryAction>\n            }\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"Last sign-in\">\n                <AccessTimeIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary=\"Last sign-in\" secondary={moment(user.metadata.lastSignInTime).format('LLLL')} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"Signed up\">\n                <AccessTimeIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary=\"Signed up\" secondary={moment(user.metadata.creationTime).format('LLLL')} />\n          </ListItem>\n        </List>\n\n        <ConfirmationDialog\n          open={verifyEmailAddressDialog.open}\n\n          title=\"Verify e-mail address?\"\n          contentText=\"An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\"\n          okText=\"Verify\"\n          highlightOkButton\n\n          onClose={this.closeVerifyEmailAddressDialog}\n\n          onCancelClick={this.closeVerifyEmailAddressDialog}\n          onOkClick={this.verifyEmailAddress}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nAccountTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n\n  onVerifyEmailAddressClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AppearanceTab extends Component {\n  render() {\n    // Properties\n    const { classes, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          Customize the look and feel to your own liking.\n          You can reset all changes you've made by clicking Reset.\n        </DialogContentText>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Primary color</InputLabel>\n\n          <Select onChange={onPrimaryColorChange} value={primaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Secondary color</InputLabel>\n\n          <Select onChange={onSecondaryColorChange} value={secondaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Type</InputLabel>\n\n          <Select onChange={onTypeChange} value={type}>\n            {types.map((type, index) => {\n              return (<MenuItem key={index} value={type}>{type.charAt(0).toUpperCase() + type.slice(1)}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nAppearanceTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AppearanceTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport AccountTab from '../tabs/settings/AccountTab';\nimport AppearanceTab from '../tabs/settings/AppearanceTab';\n\nconst styles = {\n  light: {\n    color: '#000000'\n  },\n\n  dark: {\n    color: '#ffffff'\n  }\n};\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedTab: 0\n    };\n  }\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onClose();\n    }\n  };\n\n  changeTab = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  changeIndex = (index) => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  render() {\n    // Properties\n    const { classes, open, fullScreen, user, isVerifyingEmailAddress, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onClose, onVerifyEmailAddressClick, onPrimaryColorChange, onSecondaryColorChange, onTypeChange, onResetClick } = this.props;\n\n    const { selectedTab } = this.state;\n\n    return (\n      <Dialog open={open} fullScreen={fullScreen} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>Settings</DialogTitle>\n\n        <Tabs onChange={this.changeTab} value={selectedTab} variant=\"fullWidth\">\n          <Tab classes={{ label: type === 'light' ? classes.light : classes.dark }} label=\"Account\" />\n          <Tab classes={{ label: type === 'light' ? classes.light : classes.dark }} label=\"Appearance\" />\n        </Tabs>\n\n        <DialogContent>\n          <Hidden only=\"xs\">\n            {selectedTab === 0 &&\n              <AccountTab\n                user={user}\n                isVerifyingEmailAddress={isVerifyingEmailAddress}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n            }\n\n            {selectedTab === 1 &&\n              <AppearanceTab\n                colors={colors}\n                types={types}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            }\n          </Hidden>\n\n          <Hidden only={['sm', 'md', 'lg', 'xl']}>\n            <SwipeableViews index={selectedTab} onChangeIndex={this.changeIndex}>\n              <AccountTab\n                user={user}\n                isVerifyingEmailAddress={isVerifyingEmailAddress}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n\n              <AppearanceTab\n                colors={colors}\n                types={types}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            </SwipeableViews>\n          </Hidden>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={() => { setTimeout(onResetClick, 137.5) }}>Reset</Button>\n          <Button color=\"primary\" variant=\"contained\" onClick={onClose}>OK</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  fullScreen: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired,\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired,\n  onResetClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SettingsDialog);","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport readingTime from 'reading-time';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nimport { createMuiTheme, withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport CodeIcon from '@material-ui/icons/Code';\n\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nimport Bar from './layout/Bar';\nimport EmptyState from './layout/EmptyState';\n\nimport HomeContent from './content/HomeContent';\nimport NotFoundContent from './content/NotFoundContent';\n\nimport SignUpDialog from './dialogs/SignUpDialog';\nimport SignInDialog from './dialogs/SignInDialog';\nimport ResetPasswordDialog from './dialogs/ResetPasswordDialog';\nimport SettingsDialog from './dialogs/SettingsDialog';\nimport ConfirmationDialog from './dialogs/ConfirmationDialog';\n\nconst config = {\n  apiKey: 'AIzaSyDYZOrZVpXkPQD6J31mb9t2eIIxmGEJK-Q',\n  authDomain: 'react-material-ui-firebase.firebaseapp.com',\n  databaseURL: 'https://react-material-ui-firebase.firebaseio.com',\n  projectId: 'react-material-ui-firebase',\n  storageBucket: 'react-material-ui-firebase.appspot.com',\n  messagingSenderId: '552659850812'\n};\n\nfirebase.initializeApp(config);\n\nconst colors = [\n  {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n  {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n  {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n  {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n  {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n  {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n  {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n  {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n  {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n  {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n  {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n  {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n  {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n  {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n  {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n  {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n  {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n  {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n  {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n];\n\nconst types = [\n  'light',\n  'dark'\n];\n\nconst defaultTheme = {\n  primaryColor: 'blue',\n  secondaryColor: 'red'\n};\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: red,\n    type: 'light'\n  },\n\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst styles = theme => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  },\n\n  buttonIcon: {\n    marginRight: `${theme.spacing.unit}px`\n  }\n});\n\nconst settings = {\n  name: 'React + Material-UI + Firebase'\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: 'light',\n\n      isAuthReady: false,\n\n      isSigningUp: false,\n      isSigningIn: false,\n      isResettingPassword: false,\n      isSignedIn: false,\n      isVerifyingEmailAddress: false,\n      isSigningOut: false,\n\n      user: null,\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      resetPasswordDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  updateTheme = (palette, removeLocalStorage) => {\n    const { primaryColor, secondaryColor, type } = this.state;\n\n    if (!palette.primaryColor) {\n      palette.primaryColor = primaryColor;\n    }\n\n    if (!palette.secondaryColor) {\n      palette.secondaryColor = secondaryColor;\n    }\n\n    if (!palette.type) {\n      palette.type = type;\n    }\n\n    theme = createMuiTheme({\n      palette: {\n        primary: colors.find(color => color.id === palette.primaryColor).import,\n        secondary: colors.find(color => color.id === palette.secondaryColor).import,\n        type: palette.type\n      },\n\n      typography: {\n        useNextVariants: true\n      }\n    });\n\n    this.setState({\n      primaryColor: palette.primaryColor,\n      secondaryColor: palette.secondaryColor,\n      type: palette.type\n    }, () => {\n      if (removeLocalStorage) {\n        localStorage.removeItem('theme');\n      } else {\n        localStorage.setItem('theme', JSON.stringify({\n          primaryColor: palette.primaryColor,\n          secondaryColor: palette.secondaryColor,\n          type: palette.type\n        }));\n      }\n    });\n  };\n\n  resetTheme = () => {\n    this.updateTheme({\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: 'light'\n    }, true);\n  };\n\n  changePrimaryColor = (event) => {\n    const primaryColor = event.target.value;\n\n    this.updateTheme({\n      primaryColor\n    });\n  };\n\n  changeSecondaryColor = (event) => {\n    const secondaryColor = event.target.value;\n\n    this.updateTheme({\n      secondaryColor\n    });\n  };\n\n  changeType = (event) => {\n    const type = event.target.value;\n\n    this.updateTheme({\n      type\n    });\n  };\n\n  showSignUpDialog = () => {\n    this.setState({\n      signUpDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignUpDialog = (callback) => {\n    this.setState({\n      signUpDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignInDialog = () => {\n    this.setState({\n      signInDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignInDialog = (callback) => {\n    this.setState({\n      signInDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showResetPasswordDialog = () => {\n    this.setState({\n      resetPasswordDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeResetPasswordDialog = (callback) => {\n    this.setState({\n      resetPasswordDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSettingsDialog = () => {\n    this.setState({\n      settingsDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSettingsDialog = (callback) => {\n    this.setState({\n      settingsDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignOutDialog = () => {\n    this.setState({\n      signOutDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignOutDialog = (callback) => {\n    this.setState({\n      signOutDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Opens a snackbar. Snackbars provide brief messages about app processes through a message.\n   */\n  openSnackbar = (message) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * 2,\n        message,\n        open: true\n      }\n    });\n  };\n\n  /**\n   * Sets the `open` state of a snackbar to `false`. A direct response to the snackbar's `onClose` event.\n   * @param clearMessage Whether or not to clear the message of the snackbar.\n   */\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  signUp = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t sign up');\n      \n      return;\n    }\n\n    this.setState({\n      isSigningUp: true\n    }, () => {\n      firebase.auth().createUserWithEmailAndPassword(emailAddress, password).then((userCredential) => {\n        this.setState({\n          isSigningUp: false\n        }, () => {\n          this.closeSignUpDialog(() => {\n            const user = userCredential.user;\n            const emailAddress = user.email;\n\n            this.openSnackbar('Signed up as ' + emailAddress);\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningUp: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  signIn = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t sign in again');\n      \n      return;\n    }\n\n    this.setState({\n      isSigningIn: true\n    }, () => {\n      firebase.auth().signInWithEmailAndPassword(emailAddress, password).then((userCredential) => {\n        this.setState({\n          isSigningIn: false\n        }, () => {\n          this.closeSignInDialog(() => {\n            const user = userCredential.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.openSnackbar('Signed in as ' + (displayName || emailAddress));\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningIn: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  signInWithAuthProvider = (authProvider) => {\n    if (!authProvider || this.state.isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isSigningIn: true\n    }, () => {\n      firebase.auth().signInWithPopup(authProvider).then((userCredential) => {\n        this.setState({\n          isSigningIn: false\n        }, () => {\n          this.closeSignInDialog(() => {\n            const user = userCredential.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.openSnackbar('Signed in as ' + (displayName || emailAddress));\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningIn: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  resetPassword = (emailAddress) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t reset their password');\n\n      return;\n    }\n\n    this.setState({\n      isResettingPassword: true\n    }, () => {\n      firebase.auth().sendPasswordResetEmail(emailAddress).then(() => {\n        this.setState({\n          isResettingPassword: false\n        }, () => {\n          this.closeResetPasswordDialog(() => {\n            this.openSnackbar('Password reset email sent');\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isResettingPassword: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  verifyEmailAddress = () => {\n    const { isSignedIn, isVerifyingEmailAddress, user } = this.state;\n\n    if (!isSignedIn || isVerifyingEmailAddress || !user) {\n      return;\n    }\n\n    user.sendEmailVerification().then(() => {\n      this.setState({\n        isVerifyingEmailAddress: true\n      }, () => {\n        this.openSnackbar('Password reset e-mail sent');\n      });\n    }).catch((error) => {\n      this.openSnackbar(error.message);\n    });\n  };\n\n  signOut = () => {\n    if (!this.state.isSignedIn) {\n      this.openSnackbar('Not signed in');\n\n      return;\n    }\n\n    this.setState({\n      isSigningOut: true\n    }, () => {\n      firebase.auth().signOut().then(() => {\n        this.setState({\n          isSigningOut: false\n        }, () => {\n          this.closeSignOutDialog(() => {\n            this.openSnackbar('Signed out');\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningOut: false\n        }, () => {\n          this.closeSignOutDialog(() => {\n            this.openSnackbar(error.message);\n          });\n        });\n      });\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    // Properties\n    const { primaryColor, secondaryColor, type, isAuthReady, isSigningUp, isSigningIn, isResettingPassword, isSignedIn, isVerifyingEmailAddress, isSigningOut, user } = this.state;\n\n    // Dialogs\n    const { signUpDialog, signInDialog, resetPasswordDialog, settingsDialog, signOutDialog } = this.state;\n\n    const { snackbar } = this.state;\n\n    if (!isAuthReady) {\n      return null;\n    }\n\n    return (\n      <Router basename=\"/react-material-ui-firebase\">\n        <MuiThemeProvider theme={theme}>\n          <div style={{ minHeight: '100vh', backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa' }}>\n            <Bar\n              name={settings.name}\n\n              isSignedIn={isSignedIn}\n              isSigningUp={isSigningUp}\n              isSigningIn={isSigningIn}\n\n              user={user}\n\n              onSignUpClick={this.showSignUpDialog}\n              onSignInClick={this.showSignInDialog}\n\n              onSettingsClick={this.showSettingsDialog}\n              onSignOutClick={this.showSignOutDialog}\n            />\n\n            {isSignedIn &&\n              <Switch>\n                <Route path=\"/\" exact component={HomeContent} />\n                <Route component={NotFoundContent} />\n              </Switch>\n            }\n\n            {!isSignedIn &&\n              <EmptyState\n                icon={<CodeIcon className={classes.emptyStateIcon} color=\"action\" />}\n                title={settings.name}\n                description=\"The three musketeers, all in one pack in the form of a boilerplate app.\"\n                button={\n                  <Fab className={classes.button} color=\"primary\" href=\"https://github.com/Phoqe/react-material-ui-firebase\" rel=\"noopener noreferrer\" target=\"_blank\" variant=\"extended\">\n                    <GitHubCircleIcon className={classes.buttonIcon} />\n                    GitHub\n                  </Fab>\n                }\n              />\n            }\n\n            {!isSignedIn &&\n              <React.Fragment>\n                <Hidden only=\"xs\">\n                  <SignUpDialog\n                    open={signUpDialog.open}\n                    isSigningUp={isSigningUp}\n                    isSigningIn={isSigningIn}\n                    signUp={this.signUp}\n\n                    onClose={this.closeSignUpDialog}\n                    onAuthProviderClick={this.signInWithAuthProvider}\n                  />\n                </Hidden>\n\n                <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                  <SignUpDialog\n                    open={signUpDialog.open}\n                    fullScreen\n                    isSigningUp={isSigningUp}\n                    isSigningIn={isSigningIn}\n                    signUp={this.signUp}\n\n                    onClose={this.closeSignUpDialog}\n                    onAuthProviderClick={this.signInWithAuthProvider}\n                  />\n                </Hidden>\n              </React.Fragment>\n            }\n\n            {!isSignedIn &&\n              <React.Fragment>\n                <Hidden only=\"xs\">\n                  <SignInDialog\n                    open={signInDialog.open}\n                    isSigningIn={isSigningIn}\n                    signIn={this.signIn}\n\n                    onClose={this.closeSignInDialog}\n                    onAuthProviderClick={this.signInWithAuthProvider}\n                    onResetPasswordClick={this.showResetPasswordDialog}\n                  />\n                </Hidden>\n\n                <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                  <SignInDialog\n                    open={signInDialog.open}\n                    fullScreen\n                    isSigningIn={isSigningIn}\n                    signIn={this.signIn}\n\n                    onClose={this.closeSignInDialog}\n                    onAuthProviderClick={this.signInWithAuthProvider}\n                    onResetPasswordClick={this.showResetPasswordDialog}\n                  />\n                </Hidden>\n              </React.Fragment>\n            }\n\n            {!isSignedIn &&\n              <ResetPasswordDialog\n                open={resetPasswordDialog.open}\n                isResettingPassword={isResettingPassword}\n                resetPassword={this.resetPassword}\n                onClose={this.closeResetPasswordDialog}\n              />\n            }\n\n            {isSignedIn &&\n              <React.Fragment>\n                <Hidden only=\"xs\">\n                  <SettingsDialog\n                    open={settingsDialog.open}\n                    user={user}\n                    isVerifyingEmailAddress={isVerifyingEmailAddress}\n                    colors={colors}\n                    types={types}\n                    primaryColor={primaryColor}\n                    secondaryColor={secondaryColor}\n                    type={type}\n\n                    onClose={this.closeSettingsDialog}\n                    onVerifyEmailAddressClick={this.verifyEmailAddress}\n                    onPrimaryColorChange={this.changePrimaryColor}\n                    onSecondaryColorChange={this.changeSecondaryColor}\n                    onTypeChange={this.changeType}\n                    onResetClick={this.resetTheme}\n                  />\n                </Hidden>\n\n                <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                  <SettingsDialog\n                    open={settingsDialog.open}\n                    fullScreen\n                    user={user}\n                    isVerifyingEmailAddress={isVerifyingEmailAddress}\n                    colors={colors}\n                    types={types}\n                    primaryColor={primaryColor}\n                    secondaryColor={secondaryColor}\n                    type={type}\n\n                    onClose={this.closeSettingsDialog}\n                    onVerifyEmailAddressClick={this.verifyEmailAddress}\n                    onPrimaryColorChange={this.changePrimaryColor}\n                    onSecondaryColorChange={this.changeSecondaryColor}\n                    onTypeChange={this.changeType}\n                    onResetClick={this.resetTheme}\n                  />\n                </Hidden>\n              </React.Fragment>\n            }\n\n            {isSignedIn &&\n              <ConfirmationDialog\n                open={signOutDialog.open}\n\n                title=\"Sign out?\"\n                contentText=\"While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\"\n                okText=\"Sign Out\"\n                disableOkButton={isSigningOut}\n                highlightOkButton\n\n                onClose={this.closeSignOutDialog}\n                onCancelClick={this.closeSignOutDialog}\n                onOkClick={this.signOut}\n              />\n            }\n\n            <Snackbar\n              autoHideDuration={snackbar.autoHideDuration}\n              message={snackbar.message}\n              open={snackbar.open}\n              onClose={this.closeSnackbar}\n            />\n          </div>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    const theme = JSON.parse(localStorage.getItem('theme'));\n\n    if (theme) {\n      this.updateTheme(theme);\n    }\n\n    this.removeAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      this.setState({\n        isAuthReady: true,\n        isSignedIn: !!user,\n        user\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeAuthObserver();\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}