{"version":3,"sources":["layout/Bar.js","layout/EmptyState.js","content/HomeContent.js","content/NotFoundContent.js","dialogs/SignUpDialog.js","dialogs/SignInDialog.js","dialogs/ResetPasswordDialog.js","dialogs/ConfirmationDialog.js","tabs/settings/AccountTab.js","tabs/settings/AppearanceTab.js","dialogs/SettingsDialog.js","dialogs/SignOutDialog.js","App.js","serviceWorker.js","index.js"],"names":["Bar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","_this$props","classes","title","isSignedIn","isSigningUp","isSigningIn","_this$props2","onSignUpClick","onSignInClick","react_default","a","createElement","AppBar_default","color","position","Toolbar_default","variant","Typography_default","style","flexGrow","Fragment","IconButton_default","onClick","Person_default","Menu_default","open","Boolean","onClose","MenuItem_default","Button_default","className","signUpButton","disabled","Component","withStyles","theme","marginRight","spacing","unit","EmptyState","icon","description","button","center","top","left","transform","textAlign","HomeContent","layout_EmptyState","Home_default","emptyStateIcon","Fab_default","component","Link","to","fontSize","concat","marginTop","NotFoundContent","FindInPage_default","buttonIcon","initialState","emailAddress","password","passwordConfirmation","errors","SignUpDialog","signUp","_this$state","validate","email","presence","allowEmpty","length","minimum","equality","handleExited","handleKeyPress","key","altKey","ctrlKey","metaKey","shiftKey","handleEmailAddressChange","target","value","handlePasswordChange","handlePasswordConfirmationChange","handleSignUpClick","_this$state2","Dialog_default","onExited","onKeyPress","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","autoComplete","autoFocus","error","fullWidth","helperText","label","margin","onChange","required","type","DialogActions_default","SignInDialog","signIn","handleSignInClick","onResetPasswordClick","placeholder","ResetPasswordDialog","resetPassword","preventDefault","handleResetPasswordClick","isResettingPassword","ConfirmationDialog","onOkClick","contentText","cancelText","okText","highlightOkButton","onCancelClick","AccountTab","openVerifyEmailAddressDialog","verifyEmailAddressDialog","closeVerifyEmailAddressDialog","callback","verifyEmailAddress","onVerifyEmailAddressClick","user","isVerifyingEmailAddress","dialogContentText","List_default","ListItem_default","ListItemIcon_default","Tooltip_default","Email_default","ListItemText_default","primary","secondary","emailVerified","ListItemSecondaryAction_default","AccessTime_default","moment","metadata","lastSignInTime","format","creationTime","dialogs_ConfirmationDialog","AppearanceTab","colors","types","primaryColor","secondaryColor","onPrimaryColorChange","onSecondaryColorChange","onTypeChange","FormControl_default","InputLabel_default","Select_default","map","id","name","index","charAt","toUpperCase","slice","SettingsDialog","changeTab","selectedTab","onResetClick","DynamicTab","Tab","Tabs_default","settings_AccountTab","settings_AppearanceTab","setTimeout","SignOutDialog","signOut","isSigningOut","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","import","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","defaultTheme","createMuiTheme","palette","typography","useNextVariants","settings","App","updateTheme","removeLocalStorage","find","localStorage","removeItem","setItem","JSON","stringify","resetTheme","changePrimaryColor","changeSecondaryColor","changeType","showSignUpDialog","signUpDialog","closeSignUpDialog","showSignInDialog","signInDialog","closeSignInDialog","showResetPasswordDialog","resetPasswordDialog","closeResetPasswordDialog","showSettingsDialog","settingsDialog","closeSettingsDialog","showSignOutDialog","signOutDialog","closeSignOutDialog","openSnackbar","message","snackbar","autoHideDuration","readingTime","time","closeSnackbar","clearMessage","arguments","undefined","auth","createUserWithEmailAndPassword","then","userCredential","catch","signInWithEmailAndPassword","displayName","sendPasswordResetEmail","sendEmailVerification","isAuthReady","_this$state3","_this$state4","react_router_dom","styles","minHeight","backgroundColor","layout_Bar","react_router","path","exact","PersonOutline_default","dialogs_SignUpDialog","dialogs_SignInDialog","dialogs_ResetPasswordDialog","dialogs_SettingsDialog","dialogs_SignOutDialog","Snackbar_default","_this2","parse","getItem","removeAuthObserver","onAuthStateChanged","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.481b0187.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst styles = (theme) => ({\n  signUpButton: {\n    marginRight: theme.spacing.unit\n  }\n});\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Properties\n    const { classes, title, isSignedIn, isSigningUp, isSigningIn } = this.props;\n\n    // Events\n    const { onSignUpClick, onSignInClick } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Typography style={{ flexGrow: 1 }} color=\"inherit\" variant=\"h6\">{title}</Typography>\n\n          {isSignedIn &&\n            <React.Fragment>\n              <IconButton color=\"inherit\" onClick={this.openMenu}>\n                <PersonIcon />\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </React.Fragment>\n          }\n\n          {!isSignedIn &&\n            <React.Fragment>\n              <Button className={classes.signUpButton} color=\"secondary\" disabled={isSigningUp} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              <Button color=\"secondary\" disabled={isSigningIn} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </React.Fragment>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  isSignedIn: PropTypes.bool.isRequired,\n  isSigningUp: PropTypes.bool.isRequired,\n  isSigningIn: PropTypes.bool.isRequired,\n\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Bar);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n};\n\nclass EmptyState extends Component {\n  render() {\n    const { classes, icon, title, description, button } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon}\n        {title && <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>}\n        {description && <Typography color=\"textSecondary\" variant=\"subtitle1\">{description}</Typography>}\n        {button}\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  classes: PropTypes.object.isRequired,\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  button: PropTypes.element\n};\n\nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  }\n});\n\nclass HomeContent extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<HomeIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Home\"\n        description=\"Use React + Material-UI + Firebase as a starting point for your project.\"\n        button={\n          <Fab className={classes.button} color=\"primary\" component={Link} to=\"/something-crazy\" variant=\"extended\">\n            Do Something Crazy\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nHomeContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(HomeContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport FindIcon from '@material-ui/icons/FindInPage';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../layout/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  },\n\n  button: {\n    marginTop: `${theme.spacing.unit}px`\n  },\n\n  buttonIcon: {\n    marginRight: `${theme.spacing.unit}px`\n  }\n});\n\nclass NotFoundContent extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<FindIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Content Not Found\"\n        description=\"The requested URL was not found on this server.\"\n        button={\n          <Fab className={classes.button} color=\"primary\" component={Link} to=\"/\" variant=\"extended\">\n            <HomeIcon className={classes.buttonIcon} /> Go Home\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nNotFoundContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NotFoundContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      },\n      \n      password: {\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      },\n\n      passwordConfirmation: {\n        equality: 'password',\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress, password, passwordConfirmation } = this.state;\n    \n    const errors = validate({ emailAddress, password, passwordConfirmation }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signUp(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({ passwordConfirmation });\n  };\n\n  handleSignUpClick = () => {\n    this.signUp();\n  };\n\n  render() {\n    // Properties\n    const { open, isSigningUp } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, password, passwordConfirmation, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Create an account to access features that are unavailable to users who haven't signed up.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              label=\"E-mail address\"\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"new-password\"\n              error={(errors && errors.password) ? true : false}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              label=\"Password\"\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              required\n              type=\"password\"\n              value={password}\n            />\n\n            <TextField\n              autoComplete=\"password\"\n              error={(errors && errors.passwordConfirmation) ? true : false}\n              fullWidth\n              helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n              label=\"Password confirmation\"\n              margin=\"normal\"\n              onChange={this.handlePasswordConfirmationChange}\n              required\n              type=\"password\"\n              value={passwordConfirmation}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password || !passwordConfirmation) || isSigningUp} variant=\"contained\" onClick={this.handleSignUpClick}>Sign Up</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isSigningUp: PropTypes.bool.isRequired,\n\n  signUp: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default SignUpDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signIn = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      },\n      \n      password: {\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress, password } = this.state;\n    \n    const errors = validate({ emailAddress, password }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signIn(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handleSignInClick = () => {\n    this.signIn();\n  };\n\n  render() {\n    // Properties\n    const { open, isSigningIn } = this.props;\n\n    // Events\n    const { onClose, onResetPasswordClick } = this.props;\n\n    const { emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Some features might be unavailable until you sign in.\n            While you're signed in you can manage your account.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"current-password\"\n              error={(errors && errors.password) ? true : false}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              value={password}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={onResetPasswordClick}>Reset Password</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password) || isSigningIn} variant=\"contained\" onClick={this.handleSignInClick}>Sign In</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isSigningIn: PropTypes.bool.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onResetPasswordClick: PropTypes.func.isRequired\n};\n\nexport default SignInDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n\n  errors: null\n};\n\nclass ResetPasswordDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const constraints = {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      }\n    };\n\n    const { emailAddress } = this.state;\n    \n    const errors = validate({ emailAddress }, constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.resetPassword(emailAddress);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.resetPassword();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handleResetPasswordClick = () => {\n    this.resetPassword();\n  };\n\n  render() {\n    // Properties\n    const { open, isResettingPassword } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Reset your password\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            An e-mail will be sent to your e-mail address containing instructions on how to reset your password.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={(errors && errors.emailAddress) ? true : false}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={!emailAddress || isResettingPassword} variant=\"contained\" onClick={this.handleResetPasswordClick}>Reset Password</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nResetPasswordDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isResettingPassword: PropTypes.bool.isRequired,\n\n  resetPassword: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default ResetPasswordDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\n/**\n * Confirmation dialogs give users the ability to provide final confirmation of a choice\n * before committing to it, so they have a chance to change their minds if necessary.\n * If the user confirms a choice, it’s carried out. Otherwise, the user can dismiss the\n * dialog. For example, users can listen to multiple ringtones but only make a final\n * selection upon touching “OK.”\n */\nclass ConfirmationDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    /**\n     * Properties\n     */\n\n    // Dialog\n    const { open } = this.props;\n\n    // Custom\n    const { title, contentText, cancelText, okText, highlightOkButton } = this.props;\n\n    /**\n     * Events\n     */\n\n    // Dialog\n    const { onClose } = this.props;\n\n    // Custom\n    const { onCancelClick, onOkClick } = this.props;\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string.isRequired,\n  contentText: PropTypes.string.isRequired,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default ConfirmationDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\n\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport ConfirmationDialog from '../../dialogs/ConfirmationDialog';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    };\n  }\n\n  openVerifyEmailAddressDialog = () => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeVerifyEmailAddressDialog = (callback) => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.closeVerifyEmailAddressDialog(() => {\n      this.props.onVerifyEmailAddressClick();\n    });\n  };\n\n  render() {\n    const { classes, user, isVerifyingEmailAddress } = this.props;\n    const { verifyEmailAddressDialog } = this.state;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          This is a summary of your account.\n          You can manage your account throughout all the settings.\n        </DialogContentText>\n\n        <List>\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"E-mail address\">\n                <EmailIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary={user.email} secondary={user.emailVerified ? 'Verified' : 'Not verified'} />\n\n            {!user.emailVerified &&\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isVerifyingEmailAddress} variant=\"contained\" onClick={this.openVerifyEmailAddressDialog}>Verify</Button>\n              </ListItemSecondaryAction>\n            }\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"Signed in\">\n                <AccessTimeIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary=\"Signed in\" secondary={moment(user.metadata.lastSignInTime).format('LLLL')} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <Tooltip title=\"Signed up\">\n                <AccessTimeIcon />\n              </Tooltip>\n            </ListItemIcon>\n\n            <ListItemText primary=\"Signed up\" secondary={moment(user.metadata.creationTime).format('LLLL')} />\n          </ListItem>\n        </List>\n\n        <ConfirmationDialog\n          open={verifyEmailAddressDialog.open}\n\n          title=\"Verify e-mail address?\"\n          contentText=\"An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\"\n          okText=\"Verify\"\n          highlightOkButton\n\n          onClose={this.closeVerifyEmailAddressDialog}\n\n          onCancelClick={this.closeVerifyEmailAddressDialog}\n          onOkClick={this.verifyEmailAddress}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nAccountTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n\n  onVerifyEmailAddressClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = (theme) => ({\n  dialogContentText: {\n    marginTop: `${theme.spacing.unit * 2}px`\n  }\n});\n\nclass AppearanceTab extends Component {\n  render() {\n    // Properties\n    const { classes, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    return (\n      <React.Fragment>\n        <DialogContentText className={classes.dialogContentText}>\n          Customize the look and feel to your own liking.\n          You can reset all changes you've made by clicking Reset.\n        </DialogContentText>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Primary color</InputLabel>\n\n          <Select onChange={onPrimaryColorChange} value={primaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Secondary color</InputLabel>\n\n          <Select onChange={onSecondaryColorChange} value={secondaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Type</InputLabel>\n\n          <Select onChange={onTypeChange} value={type}>\n            {types.map((type, index) => {\n              return (<MenuItem key={index} value={type}>{type.charAt(0).toUpperCase() + type.slice(1)}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nAppearanceTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AppearanceTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\n\nimport AccountTab from '../tabs/settings/AccountTab';\nimport AppearanceTab from '../tabs/settings/AppearanceTab';\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedTab: 0\n    };\n  }\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onClose();\n    }\n  };\n\n  changeTab = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  render() {\n    // Properties\n    const { open, user, isVerifyingEmailAddress, colors, types, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onClose, onVerifyEmailAddressClick, onPrimaryColorChange, onSecondaryColorChange, onTypeChange, onResetClick } = this.props;\n\n    const { selectedTab } = this.state;\n\n    const DynamicTab = withStyles({\n      label: {\n        color: type === 'light' ? '#000000' : '#ffffff'\n      }\n    })(Tab);\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>Settings</DialogTitle>\n\n        <Tabs onChange={this.changeTab} value={selectedTab} variant=\"fullWidth\">\n          <DynamicTab label=\"Account\" />\n          <DynamicTab label=\"Appearance\" />\n        </Tabs>\n\n        <DialogContent>\n          {selectedTab === 0 &&\n            <AccountTab user={user} isVerifyingEmailAddress={isVerifyingEmailAddress} onVerifyEmailAddressClick={onVerifyEmailAddressClick} />\n          }\n\n          {selectedTab === 1 &&\n            <AppearanceTab\n              colors={colors}\n              types={types}\n              primaryColor={primaryColor}\n              secondaryColor={secondaryColor}\n              type={type}\n              onPrimaryColorChange={onPrimaryColorChange}\n              onSecondaryColorChange={onSecondaryColorChange}\n              onTypeChange={onTypeChange}\n            />\n          }\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={() => { setTimeout(onResetClick, 137.5) }}>Reset</Button>\n          <Button color=\"primary\" variant=\"contained\" onClick={onClose}>OK</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n  colors: PropTypes.array.isRequired,\n  types: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired,\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired,\n  onResetClick: PropTypes.func.isRequired\n};\n\nexport default SettingsDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass SignOutDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.signOut();\n    }\n  };\n\n  render() {\n    // Properties\n    const { open, isSigningOut } = this.props;\n\n    // Methods\n    const { signOut } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign out?\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={isSigningOut} variant=\"contained\" onClick={signOut}>Sign Out</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignOutDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isSigningOut: PropTypes.bool.isRequired,\n\n  signOut: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default SignOutDialog;","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport readingTime from 'reading-time';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nimport { createMuiTheme, withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\n\nimport Bar from './layout/Bar';\nimport EmptyState from './layout/EmptyState';\n\nimport HomeContent from './content/HomeContent';\nimport NotFoundContent from './content/NotFoundContent';\n\nimport SignUpDialog from './dialogs/SignUpDialog';\nimport SignInDialog from './dialogs/SignInDialog';\nimport ResetPasswordDialog from './dialogs/ResetPasswordDialog';\nimport SettingsDialog from './dialogs/SettingsDialog';\nimport SignOutDialog from './dialogs/SignOutDialog';\n\nconst config = {\n  apiKey: 'AIzaSyDYZOrZVpXkPQD6J31mb9t2eIIxmGEJK-Q',\n  authDomain: 'react-material-ui-firebase.firebaseapp.com',\n  databaseURL: 'https://react-material-ui-firebase.firebaseio.com',\n  projectId: 'react-material-ui-firebase',\n  storageBucket: 'react-material-ui-firebase.appspot.com',\n  messagingSenderId: '552659850812'\n};\n\nfirebase.initializeApp(config);\n\nconst colors = [\n  {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n  {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n  {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n  {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n  {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n  {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n  {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n  {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n  {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n  {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n  {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n  {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n  {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n  {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n  {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n  {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n  {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n  {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n  {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n];\n\nconst types = [\n  'light',\n  'dark'\n];\n\nconst defaultTheme = {\n  primaryColor: 'blue-gray',\n  secondaryColor: 'red'\n};\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: blueGray,\n    secondary: red,\n    type: 'light'\n  },\n\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst styles = theme => ({\n  emptyStateIcon: {\n    fontSize: `${theme.spacing.unit * 12}px`\n  }\n});\n\nconst settings = {\n  title: 'React + Material-UI + Firebase'\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: 'light',\n\n      isAuthReady: false,\n\n      isSigningUp: false,\n      isSigningIn: false,\n      isResettingPassword: false,\n      isSignedIn: false,\n      isVerifyingEmailAddress: false,\n      isSigningOut: false,\n\n      user: null,\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      resetPasswordDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  updateTheme = (palette, removeLocalStorage) => {\n    const { primaryColor, secondaryColor, type } = this.state;\n\n    if (!palette.primaryColor) {\n      palette.primaryColor = primaryColor;\n    }\n\n    if (!palette.secondaryColor) {\n      palette.secondaryColor = secondaryColor;\n    }\n\n    if (!palette.type) {\n      palette.type = type;\n    }\n\n    theme = createMuiTheme({\n      palette: {\n        primary: colors.find(color => color.id === palette.primaryColor).import,\n        secondary: colors.find(color => color.id === palette.secondaryColor).import,\n        type: palette.type\n      },\n\n      typography: {\n        useNextVariants: true\n      }\n    });\n\n    this.setState({\n      primaryColor: palette.primaryColor,\n      secondaryColor: palette.secondaryColor,\n      type: palette.type\n    }, () => {\n      if (removeLocalStorage) {\n        localStorage.removeItem('theme');\n      } else {\n        localStorage.setItem('theme', JSON.stringify({\n          primaryColor: palette.primaryColor,\n          secondaryColor: palette.secondaryColor,\n          type: palette.type\n        }));\n      }\n    });\n  };\n\n  resetTheme = () => {\n    this.updateTheme({\n      primaryColor: defaultTheme.primaryColor,\n      secondaryColor: defaultTheme.secondaryColor,\n      type: 'light'\n    }, true);\n  };\n\n  changePrimaryColor = (event) => {\n    const primaryColor = event.target.value;\n\n    this.updateTheme({\n      primaryColor\n    });\n  };\n\n  changeSecondaryColor = (event) => {\n    const secondaryColor = event.target.value;\n\n    this.updateTheme({\n      secondaryColor\n    });\n  };\n\n  changeType = (event) => {\n    const type = event.target.value;\n\n    this.updateTheme({\n      type\n    });\n  };\n\n  showSignUpDialog = () => {\n    this.setState({\n      signUpDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignUpDialog = (callback) => {\n    this.setState({\n      signUpDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignInDialog = () => {\n    this.setState({\n      signInDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignInDialog = (callback) => {\n    this.setState({\n      signInDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showResetPasswordDialog = () => {\n    this.setState({\n      resetPasswordDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeResetPasswordDialog = (callback) => {\n    this.setState({\n      resetPasswordDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSettingsDialog = () => {\n    this.setState({\n      settingsDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSettingsDialog = (callback) => {\n    this.setState({\n      settingsDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  showSignOutDialog = () => {\n    this.setState({\n      signOutDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignOutDialog = (callback) => {\n    this.setState({\n      signOutDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Opens a snackbar. Snackbars provide brief messages about app processes through a message.\n   */\n  openSnackbar = (message) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * 2,\n        message,\n        open: true\n      }\n    });\n  };\n\n  /**\n   * Sets the `open` state of a snackbar to `false`. A direct response to the snackbar's `onClose` event.\n   * @param clearMessage Whether or not to clear the message of the snackbar.\n   */\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  signUp = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t sign up');\n      \n      return;\n    }\n\n    this.setState({\n      isSigningUp: true\n    }, () => {\n      firebase.auth().createUserWithEmailAndPassword(emailAddress, password).then((userCredential) => {\n        this.setState({\n          isSigningUp: false\n        }, () => {\n          this.closeSignUpDialog(() => {\n            const user = userCredential.user;\n            const emailAddress = user.email;\n\n            this.openSnackbar('Signed up as ' + emailAddress);\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningUp: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  signIn = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t sign in again');\n      \n      return;\n    }\n\n    this.setState({\n      isSigningIn: true\n    }, () => {\n      firebase.auth().signInWithEmailAndPassword(emailAddress, password).then((userCredential) => {\n        this.setState({\n          isSigningIn: false\n        }, () => {\n          this.closeSignInDialog(() => {\n            const user = userCredential.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.openSnackbar('Signed in as ' + (displayName || emailAddress));\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningIn: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  resetPassword = (emailAddress) => {\n    if (this.state.isSignedIn) {\n      this.openSnackbar('Signed in users can\\'t reset their password');\n\n      return;\n    }\n\n    this.setState({\n      isResettingPassword: true\n    }, () => {\n      firebase.auth().sendPasswordResetEmail(emailAddress).then(() => {\n        this.setState({\n          isResettingPassword: false\n        }, () => {\n          this.closeResetPasswordDialog(() => {\n            this.openSnackbar('Password reset email sent');\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isResettingPassword: false\n        }, () => {\n          this.openSnackbar(error.message);\n        });\n      });\n    });\n  };\n\n  verifyEmailAddress = () => {\n    const { isSignedIn, isVerifyingEmailAddress, user } = this.state;\n\n    if (!isSignedIn || isVerifyingEmailAddress || !user) {\n      return;\n    }\n\n    user.sendEmailVerification().then(() => {\n      this.setState({\n        isVerifyingEmailAddress: true\n      }, () => {\n        this.openSnackbar('Password reset e-mail sent');\n      });\n    }).catch((error) => {\n      this.openSnackbar(error.message);\n    });\n  };\n\n  signOut = () => {\n    if (!this.state.isSignedIn) {\n      this.openSnackbar('Not signed in');\n\n      return;\n    }\n\n    this.setState({\n      isSigningOut: true\n    }, () => {\n      firebase.auth().signOut().then(() => {\n        this.setState({\n          isSigningOut: false\n        }, () => {\n          this.closeSignOutDialog(() => {\n            this.openSnackbar('Signed out');\n          });\n        });\n      }).catch((error) => {\n        this.setState({\n          isSigningOut: false\n        }, () => {\n          this.closeSignOutDialog(() => {\n            this.openSnackbar(error.message);\n          });\n        });\n      });\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    // Properties\n    const { primaryColor, secondaryColor, type, isAuthReady, isSigningUp, isSigningIn, isResettingPassword, isSignedIn, isVerifyingEmailAddress, isSigningOut, user } = this.state;\n\n    // Dialogs\n    const { signUpDialog, signInDialog, resetPasswordDialog, settingsDialog, signOutDialog } = this.state;\n\n    const { snackbar } = this.state;\n\n    if (!isAuthReady) {\n      return null;\n    }\n\n    return (\n      <Router>\n        <MuiThemeProvider theme={theme}>\n          <div style={{ minHeight: '100vh', backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa' }}>\n            <Bar\n              title={settings.title}\n\n              isSignedIn={isSignedIn}\n              isSigningUp={isSigningUp}\n              isSigningIn={isSigningIn}\n\n              onSignUpClick={this.showSignUpDialog}\n              onSignInClick={this.showSignInDialog}\n\n              onSettingsClick={this.showSettingsDialog}\n              onSignOutClick={this.showSignOutDialog}\n            />\n\n            {isSignedIn &&\n              <Switch>\n                <Route path=\"/\" exact component={HomeContent} />\n                <Route component={NotFoundContent} />\n              </Switch>\n            }\n\n            {!isSignedIn &&\n              <EmptyState\n                icon={<PersonOutlineIcon className={classes.emptyStateIcon} color=\"action\" />}\n                title=\"You are not signed in.\"\n              />\n            }\n\n            {!isSignedIn &&\n              <SignUpDialog\n                open={signUpDialog.open}\n                isSigningUp={isSigningUp}\n                signUp={this.signUp}\n                onClose={this.closeSignUpDialog}\n              />\n            }\n\n            {!isSignedIn &&\n              <SignInDialog\n                open={signInDialog.open}\n                isSigningIn={isSigningIn}\n                signIn={this.signIn}\n                onClose={this.closeSignInDialog}\n                onResetPasswordClick={this.showResetPasswordDialog}\n              />\n            }\n\n            {!isSignedIn &&\n              <ResetPasswordDialog\n                open={resetPasswordDialog.open}\n                isResettingPassword={isResettingPassword}\n                resetPassword={this.resetPassword}\n                onClose={this.closeResetPasswordDialog}\n              />\n            }\n\n            {isSignedIn &&\n              <SettingsDialog\n                open={settingsDialog.open}\n                user={user}\n                isVerifyingEmailAddress={isVerifyingEmailAddress}\n                colors={colors}\n                types={types}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n\n                onClose={this.closeSettingsDialog}\n                onVerifyEmailAddressClick={this.verifyEmailAddress}\n                onPrimaryColorChange={this.changePrimaryColor}\n                onSecondaryColorChange={this.changeSecondaryColor}\n                onTypeChange={this.changeType}\n                onResetClick={this.resetTheme}\n              />\n            }\n\n            {isSignedIn &&\n              <SignOutDialog\n                open={signOutDialog.open}\n                isSigningOut={isSigningOut}\n                signOut={this.signOut}\n                onClose={this.closeSignOutDialog}\n              />\n            }\n\n            <Snackbar\n              autoHideDuration={snackbar.autoHideDuration}\n              message={snackbar.message}\n              open={snackbar.open}\n              onClose={this.closeSnackbar}\n            />\n          </div>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    const theme = JSON.parse(localStorage.getItem('theme'));\n\n    if (theme) {\n      this.updateTheme(theme);\n    }\n\n    this.removeAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      this.setState({\n        isAuthReady: true,\n        isSignedIn: !!user,\n        user\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeAuthObserver();\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}