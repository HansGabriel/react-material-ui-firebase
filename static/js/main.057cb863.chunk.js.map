{"version":3,"sources":["colors.js","settings.js","layout/LaunchScreen/LaunchScreen.js","layout/Bar/Bar.js","layout/EmptyState/EmptyState.js","content/HomeContent/HomeContent.js","content/NotFoundContent/NotFoundContent.js","layout/AuthProviderList/AuthProviderList.js","dialogs/SignUpDialog/SignUpDialog.js","dialogs/SignInDialog/SignInDialog.js","dialogs/ResetPasswordDialog/ResetPasswordDialog.js","dialogs/WelcomeDialog/WelcomeDialog.js","layout/Profile/Profile.js","dialogs/ConfirmationDialog/ConfirmationDialog.js","tabs/settings/AccountTab/AccountTab.js","tabs/settings/AppearanceTab/AppearanceTab.js","dialogs/SettingsDialog/SettingsDialog.js","dialogs/InputDialog/InputDialog.js","App/App.js","serviceWorker.js","index.js"],"names":["colors","id","name","import","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","settings","title","theme","primaryColor","secondaryColor","type","credentials","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authProviders","constraints","signUp","emailAddress","email","presence","allowEmpty","password","length","minimum","passwordConfirmation","equality","signIn","resetPassword","addAvatar","avatar","url","message","changeAvatar","addDisplayName","displayName","changeDisplayName","addEmailAddress","LaunchScreen","classes","this","props","react_default","a","createElement","CircularProgress","className","circularProgress","Component","withStyles","position","top","left","Bar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","_this$props","isPerformingAuthAction","isSignedIn","user","_this$props2","onSignUpClick","onSignInClick","AppBar","color","Toolbar","variant","Typography","style","flexGrow","Fragment","IconButton","disabled","onClick","photoURL","Avatar","alt","src","Person_default","Menu","open","Boolean","onClose","MenuItem","Button","signUpButton","marginRight","spacing","EmptyState","icon","description","button","center","transform","textAlign","HomeContent","layout_EmptyState_EmptyState","Home_default","emptyStateIcon","Fab","component","Link","to","Code_default","href","rel","target","GithubCircle_default","buttonIcon","fontSize","marginTop","NotFoundContent","FindInPage_default","AuthProviderList","onAuthProviderClick","Hidden","only","DialogActions","dialogActions","facebook","auth","FacebookAuthProvider","FacebookBox_default","google","GoogleAuthProvider","Google_default","gitHub","GithubAuthProvider","twitter","TwitterAuthProvider","Twitter_default","dialogActionsMobile","disableSpacing","concat","buttonMobile","justifyContent","marginBottom","display","backgroundColor","initialState","errors","SignUpDialog","_this$state","validate","handleExited","handleKeyPress","key","altKey","ctrlKey","metaKey","shiftKey","handleEmailAddressChange","value","handlePasswordChange","handlePasswordConfirmationChange","handleSignUpClick","fullScreen","_this$state2","Dialog","onExited","onKeyPress","DialogTitle","DialogContent","DialogContentText","layout_AuthProviderList_AuthProviderList","TextField","autoComplete","error","fullWidth","helperText","label","margin","onChange","required","SignInDialog","handleSignInClick","onResetPasswordClick","placeholder","ResetPasswordDialog","preventDefault","handleResetPasswordClick","autoFocus","WelcomeDialog","onOkClick","_this$props3","onCancelClick","onVerifyClick","Profile","onChangeAvatarClick","profile","changeAvatarContainer","Tooltip","size","Edit_default","info","width","marginLeft","height","ConfirmationDialog","contentText","cancelText","okText","disableOkButton","highlightOkButton","AccountTab","openVerifyEmailAddressDialog","verifyEmailAddressDialog","closeVerifyEmailAddressDialog","callback","verifyEmailAddress","onVerifyEmailAddressClick","isVerifyingEmailAddress","onAddAvatarClick","onAddDisplayNameClick","onChangeDisplayNameClick","onAddEmailAddressClick","isUserComplete","layout_Profile_Profile","extraTopMargin","root","dialogContentTextUserComplete","List","ListItem","ListItemIcon","Portrait_default","ListItemText","primary","ListItemSecondaryAction","secondary","Email_default","emailVerified","metadata","lastSignInTime","AccessTime_default","moment","format","creationTime","dialogs_ConfirmationDialog_ConfirmationDialog","types","AppearanceTab","onPrimaryColorChange","onSecondaryColorChange","onTypeChange","FormControl","InputLabel","Select","map","index","charAt","toUpperCase","slice","SettingsDialog","changeTab","selectedTab","changeIndex","handleResetClick","defaultTheme","setTimeout","onResetClick","hasDeviatedFromDefaultSettings","Tabs","tabs","indicatorColor","textColor","Tab","settings_AccountTab_AccountTab","settings_AppearanceTab_AppearanceTab","lib_default","onChangeIndex","InputDialog","textField","_this$props4","initializeApp","performance","useDeviceLanguage","createMuiTheme","palette","App","_isMounted","createUserWithEmailAndPassword","then","closeSignUpDialog","openWelcomeDialog","catch","reason","code","openSnackbar","finally","signInWithEmailAndPassword","closeSignInDialog","signInWithProvider","provider","signInWithPopup","sendPasswordResetEmail","closeResetPasswordDialog","addAvatarDialog","objectSpread","updateProfile","closeAddAvatarDialog","changeAvatarDialog","closeChangeAvatarDialog","_this$state3","addDisplayNameDialog","closeAddDisplayNameDialog","_this$state4","changeDisplayNameDialog","closeChangeDisplayNameDialog","_this$state5","addEmailAddressDialog","updateEmail","closeAddEmailAddressDialog","_this$state6","sendEmailVerification","signOut","closeSignOutDialog","updateTheme","removeLocalStorage","_this$state7","find","localStorage","removeItem","setItem","JSON","stringify","resetTheme","changePrimaryColor","changeSecondaryColor","changeType","openSignUpDialog","signUpDialog","openSignInDialog","signInDialog","openResetPasswordDialog","resetPasswordDialog","welcomeDialog","closeWelcomeDialog","openSettingsDialog","settingsDialog","closeSettingsDialog","openAddAvatarDialog","openChangeAvatarDialog","openAddDisplayNameDialog","openChangeDisplayNameDialog","openAddEmailAddressDialog","openSignOutDialog","signOutDialog","handleAvatarChange","handleDisplayNameChange","snackbar","autoHideDuration","readingTime","time","closeSnackbar","clearMessage","arguments","undefined","isAuthReady","_this2","_this$state8","_this$state9","react_router_dom","basename","MuiThemeProvider","minHeight","layout_LaunchScreen_LaunchScreen","layout_Bar_Bar","react_router","path","exact","render","content_HomeContent_HomeContent","dialogs_WelcomeDialog_WelcomeDialog","dialogs_SettingsDialog_SettingsDialog","dialogs_InputDialog_InputDialog","dialogs_SignUpDialog_SignUpDialog","dialogs_SignInDialog_SignInDialog","dialogs_ResetPasswordDialog_ResetPasswordDialog","Snackbar","_this3","parse","getItem","removeAuthObserver","onAuthStateChanged","window","location","hostname","match","ReactDOM","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.057cb863.chunk.js","sourcesContent":["import red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\nconst colors = [\n  {\n    id: 'red',\n    name: 'Red',\n    import: red\n  },\n  {\n    id: 'pink',\n    name: 'Pink',\n    import: pink\n  },\n  {\n    id: 'purple',\n    name: 'Purple',\n    import: purple\n  },\n  {\n    id: 'deep-purple',\n    name: 'Deep Purple',\n    import: deepPurple\n  },\n  {\n    id: 'indigo',\n    name: 'Indigo',\n    import: indigo\n  },\n  {\n    id: 'blue',\n    name: 'Blue',\n    import: blue\n  },\n  {\n    id: 'light-blue',\n    name: 'Light Blue',\n    import: lightBlue\n  },\n  {\n    id: 'cyan',\n    name: 'Cyan',\n    import: cyan\n  },\n  {\n    id: 'teal',\n    name: 'Teal',\n    import: teal\n  },\n  {\n    id: 'green',\n    name: 'Green',\n    import: green\n  },\n  {\n    id: 'light-green',\n    name: 'Light Green',\n    import: lightGreen\n  },\n  {\n    id: 'lime',\n    name: 'Lime',\n    import: lime\n  },\n  {\n    id: 'yellow',\n    name: 'Yellow',\n    import: yellow\n  },\n  {\n    id: 'amber',\n    name: 'Amber',\n    import: amber\n  },\n  {\n    id: 'orange',\n    name: 'Orange',\n    import: orange\n  },\n  {\n    id: 'deep-orange',\n    name: 'Deep Orange',\n    import: deepOrange\n  },\n  {\n    id: 'brown',\n    name: 'Brown',\n    import: brown\n  },\n  {\n    id: 'gray',\n    name: 'Gray',\n    import: gray\n  },\n  {\n    id: 'blue-gray',\n    name: 'Blue Gray',\n    import: blueGray\n  }\n];\n\nexport default colors;","/* eslint-disable no-unused-vars */\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport gray from '@material-ui/core/colors/grey';\nimport blueGray from '@material-ui/core/colors/blueGrey';\n\n/* eslint-enable no-unused-vars */\n\nconst settings = {\n  title: 'React + Material-UI + Firebase',\n\n  theme: {\n    primaryColor: {\n      name: 'blue',\n      import: blue\n    },\n    secondaryColor: {\n      name: 'red',\n      import: red\n    },\n    type: 'light'\n  },\n\n  credentials: {\n    firebase: {\n      apiKey: 'AIzaSyDYZOrZVpXkPQD6J31mb9t2eIIxmGEJK-Q',\n      authDomain: 'react-material-ui-firebase.firebaseapp.com',\n      databaseURL: 'https://react-material-ui-firebase.firebaseio.com',\n      projectId: 'react-material-ui-firebase',\n      storageBucket: 'react-material-ui-firebase.appspot.com',\n      messagingSenderId: '552659850812',\n      appId: '1:552659850812:web:d685f74f72161d96'\n    }\n  },\n\n  authProviders: [\n    'facebook',\n    'github',\n    'google',\n    'microsoft',\n    'twitter',\n    'yahoo'\n  ],\n\n  constraints: {\n    signUp: {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      },\n\n      password: {\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      },\n\n      passwordConfirmation: {\n        equality: 'password',\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      }\n    },\n\n    signIn: {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      },\n\n      password: {\n        length: {\n          minimum: 6\n        },\n        presence: {\n          allowEmpty: false\n        }\n      }\n    },\n\n    resetPassword: {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      }\n    },\n\n    addAvatar: {\n      avatar: {\n        presence: {\n          allowEmpty: false\n        },\n\n        url: {\n          message: '^Avatar URL is not a valid URL'\n        }\n      }\n    },\n\n    changeAvatar: {\n      avatar: {\n        presence: {\n          allowEmpty: false\n        },\n\n        url: {\n          message: '^Avatar URL is not a valid URL'\n        }\n      }\n    },\n\n    addDisplayName: {\n      displayName: {\n        presence: {\n          allowEmpty: false\n        }\n      }\n    },\n\n    changeDisplayName: {\n      displayName: {\n        presence: {\n          allowEmpty: false\n        }\n      }\n    },\n\n    addEmailAddress: {\n      emailAddress: {\n        email: true,\n        presence: {\n          allowEmpty: false\n        }\n      }\n    }\n  }\n};\n\nexport default settings;","import React, {Component} from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = (theme) => ({\n  circularProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%'\n  }\n});\n\nclass LaunchScreen extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <CircularProgress className={classes.circularProgress} />\n    );\n  }\n}\n\nLaunchScreen.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LaunchScreen);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst styles = (theme) => ({\n  signUpButton: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = (event) => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  handleSettingsClick = () => {\n    this.closeMenu();\n    this.props.onSettingsClick();\n  };\n\n  handleSignOutClick = () => {\n    this.closeMenu();\n    this.props.onSignOutClick();\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { title, isPerformingAuthAction, isSignedIn, user } = this.props;\n\n    // Events\n    const { onSignUpClick, onSignInClick } = this.props;\n\n    const { menu } = this.state;\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar variant=\"regular\">\n          <Typography style={{ flexGrow: 1 }} color=\"inherit\" variant=\"h6\">{title}</Typography>\n\n          {isSignedIn &&\n            <React.Fragment>\n              <IconButton color=\"inherit\" disabled={isPerformingAuthAction} onClick={this.openMenu}>\n                {user.photoURL ? <Avatar alt=\"Avatar\" src={user.photoURL} /> : <PersonIcon />}\n              </IconButton>\n\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\n                <MenuItem disabled={isPerformingAuthAction} onClick={this.handleSettingsClick}>Settings</MenuItem>\n                <MenuItem disabled={isPerformingAuthAction} onClick={this.handleSignOutClick}>Sign out</MenuItem>\n              </Menu>\n            </React.Fragment>\n          }\n\n          {!isSignedIn &&\n            <React.Fragment>\n              <Button className={classes.signUpButton} color=\"secondary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\n              <Button color=\"secondary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\n            </React.Fragment>\n          }\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  \n  title: PropTypes.string.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isSignedIn: PropTypes.bool.isRequired,\n\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Bar);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  center: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center'\n  }\n};\n\nclass EmptyState extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { icon, title, description, button } = this.props;\n\n    return (\n      <div className={classes.center}>\n        {icon}\n        {title && <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>}\n        {description && <Typography color=\"textSecondary\" variant=\"subtitle1\">{description}</Typography>}\n        {button}\n      </div>\n    );\n  }\n}\n\nEmptyState.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  button: PropTypes.element\n};\n\nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport CodeIcon from '@material-ui/icons/Code';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\n\nimport EmptyState from '../../layout/EmptyState/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: theme.spacing(12)\n  },\n\n  button: {\n    marginTop: theme.spacing(1)\n  },\n\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass HomeContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { isSignedIn, title } = this.props;\n\n    if (isSignedIn) {\n      return (\n        <EmptyState\n          icon={<HomeIcon className={classes.emptyStateIcon} color=\"action\" />}\n          title=\"Home\"\n          description=\"Use React + Material-UI + Firebase as the starting-point for your project\"\n          button={\n            <Fab className={classes.button} color=\"secondary\" component={Link} to=\"/some-magic\" variant=\"extended\">\n              Click For Some Magic\n            </Fab>\n          }\n        />\n      );\n    }\n\n    return (\n      <EmptyState\n        icon={<CodeIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title={title}\n        description=\"The three musketeers, all in one pack in the form of a boilerplate app\"\n        button={\n          <Fab className={classes.button} color=\"secondary\" href=\"https://github.com/Phoqe/react-material-ui-firebase\" rel=\"noopener noreferrer\" target=\"_blank\" variant=\"extended\">\n            <GitHubCircleIcon className={classes.buttonIcon} />\n            GitHub\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nHomeContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  isSignedIn: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(HomeContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\n\nimport FindIcon from '@material-ui/icons/FindInPage';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport EmptyState from '../../layout/EmptyState/EmptyState';\n\nconst styles = (theme) => ({\n  emptyStateIcon: {\n    fontSize: theme.spacing(12)\n  },\n\n  button: {\n    marginTop: theme.spacing(1)\n  },\n\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass NotFoundContent extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <EmptyState\n        icon={<FindIcon className={classes.emptyStateIcon} color=\"action\" />}\n        title=\"Content Not Found\"\n        description=\"The requested URL was not found on this server\"\n        button={\n          <Fab className={classes.button} color=\"secondary\" component={Link} to=\"/\" variant=\"extended\">\n            <HomeIcon className={classes.buttonIcon} /> Go Home\n          </Fab>\n        }\n      />\n    );\n  }\n}\n\nNotFoundContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NotFoundContent);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport firebase from 'firebase/app';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\n\nconst styles = (theme) => ({\n  dialogActions: {\n    justifyContent: 'center',\n\n    marginTop: theme.spacing(2.5),\n    marginBottom: theme.spacing(1)\n  },\n\n  dialogActionsMobile: {\n    display: 'grid',\n    justifyContent: 'stretch',\n\n    marginTop: theme.spacing(2.5),\n    marginBottom: -theme.spacing(0.5)\n  },\n\n  buttonMobile: {\n    marginBottom: theme.spacing(1.5)\n  },\n\n  facebook: {\n    backgroundColor: '#3c5a99',\n    color: '#ffffff'\n  },\n\n  google: {\n    backgroundColor: '#4285f4',\n    color: '#ffffff'\n  },\n\n  gitHub: {\n    backgroundColor: '#24292e',\n    color: '#ffffff'\n  },\n\n  twitter: {\n    backgroundColor: '#1da1f2',\n    color: '#ffffff'\n  },\n\n  icon: {\n    marginRight: theme.spacing(0.5)\n  }\n});\n\nclass AuthProviderList extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    return (\n      <React.Fragment>\n        <Hidden only=\"xs\">\n          <DialogActions className={classes.dialogActions}>\n            <Button className={classes.facebook} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={classes.google} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={classes.gitHub} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n\n            <Button className={classes.twitter} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n          </DialogActions>\n        </Hidden>\n\n        <Hidden only={['sm', 'md', 'lg', 'xl']}>\n          <DialogActions className={classes.dialogActionsMobile} disableSpacing>\n            <Button className={`${classes.facebook} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.FacebookAuthProvider())}>\n              <FacebookBoxIcon className={classes.icon} />\n              Facebook\n            </Button>\n\n            <Button className={`${classes.google} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GoogleAuthProvider())}>\n              <GoogleIcon className={classes.icon} />\n              Google\n            </Button>\n\n            <Button className={`${classes.gitHub} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.GithubAuthProvider())}>\n              <GitHubCircleIcon className={classes.icon} />\n              GitHub\n            </Button>\n\n            <Button className={`${classes.twitter} ${classes.buttonMobile}`} disabled={isPerformingAuthAction} variant=\"contained\" onClick={() => onAuthProviderClick(new firebase.auth.TwitterAuthProvider())}>\n              <TwitterIcon className={classes.icon} />\n              Twitter\n            </Button>\n          </DialogActions>\n        </Hidden>\n      </React.Fragment>\n    );\n  }\n}\n\nAuthProviderList.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool,\n\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AuthProviderList);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AuthProviderList from '../../layout/AuthProviderList/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const { emailAddress, password, passwordConfirmation } = this.state;\n    \n    const errors = validate({ emailAddress, password, passwordConfirmation }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signUp(emailAddress, password, passwordConfirmation);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({ passwordConfirmation });\n  };\n\n  handleSignUpClick = () => {\n    this.signUp();\n  };\n\n  render() {\n    // Properties\n    const { fullScreen, open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick } = this.props;\n\n    const { emailAddress, password, passwordConfirmation, errors } = this.state;\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Create an account to access features that are unavailable to users who haven't signed up.\n          </DialogContentText>\n\n          <AuthProviderList isPerformingAuthAction={isPerformingAuthAction} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              label=\"E-mail address\"\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"new-password\"\n              error={!!(errors && errors.password)}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              label=\"Password\"\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              required\n              type=\"password\"\n              value={password}\n            />\n\n            <TextField\n              autoComplete=\"password\"\n              error={!!(errors && errors.passwordConfirmation)}\n              fullWidth\n              helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n              label=\"Password confirmation\"\n              margin=\"normal\"\n              onChange={this.handlePasswordConfirmationChange}\n              required\n              type=\"password\"\n              value={passwordConfirmation}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password || !passwordConfirmation) || isPerformingAuthAction} variant=\"contained\" onClick={this.handleSignUpClick}>Sign Up</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  constraints: PropTypes.object.isRequired,\n\n  signUp: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default SignUpDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AuthProviderList from '../../layout/AuthProviderList/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signIn = () => {\n    const { emailAddress, password } = this.state;\n    \n    const errors = validate({ emailAddress, password }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signIn(emailAddress, password);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signIn();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handleSignInClick = () => {\n    this.signIn();\n  };\n\n  render() {\n    // Properties\n    const { fullScreen, open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick, onResetPasswordClick } = this.props;\n\n    const { emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign in to your account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Some features might be unavailable until you sign in.\n            While you're signed in you can manage your account.\n          </DialogContentText>\n\n          <AuthProviderList isPerformingAuthAction={isPerformingAuthAction} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"current-password\"\n              error={!!(errors && errors.password)}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              value={password}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"outlined\" onClick={onResetPasswordClick}>Reset Password</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password) || isPerformingAuthAction} variant=\"contained\" onClick={this.handleSignInClick}>Sign In</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  constraints: PropTypes.object.isRequired,\n\n  signIn: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired,\n  onResetPasswordClick: PropTypes.func.isRequired\n};\n\nexport default SignInDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  emailAddress: '',\n\n  errors: null\n};\n\nclass ResetPasswordDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n    \n    const errors = validate({ emailAddress }, this.props.constraints);\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.resetPassword(emailAddress);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.resetPassword();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handleResetPasswordClick = () => {\n    this.resetPassword();\n  };\n\n  render() {\n    // Properties\n    const { open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Reset your password\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            An e-mail will be sent to your e-mail address containing instructions on how to reset your password.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={!emailAddress || isPerformingAuthAction} variant=\"contained\" onClick={this.handleResetPasswordClick}>Reset Password</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nResetPasswordDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  constraints: PropTypes.object.isRequired,\n\n  resetPassword: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default ResetPasswordDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass WelcomeDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Dialog Properties\n    const { fullScreen, open } = this.props;\n\n    // Custom Properties\n    const { title, isPerformingAuthAction } = this.props;\n\n    // Dialog Events\n    const { onClose } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onVerifyClick } = this.props;\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Welcome to {title}!\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Complete your account by verifying your e-mail address.\n            An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onCancelClick}>Cancel</Button>\n          <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onVerifyClick}>Verify</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nWelcomeDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n\n  onCancelClick: PropTypes.func.isRequired,\n  onVerifyClick: PropTypes.func.isRequired\n};\n\nexport default WelcomeDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fab from '@material-ui/core/Fab';\nimport Typography from '@material-ui/core/Typography';\n\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = (theme) => ({\n  profile: {\n    textAlign: 'center',\n\n    marginTop: theme.spacing(1)\n  },\n\n  changeAvatarContainer: {\n    position: 'relative',\n    width: '50%',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n\n  avatar: {\n    width: theme.spacing(12),\n    height: theme.spacing(12),\n    marginRight: 'auto',\n    marginLeft: 'auto'\n  },\n\n  changeAvatar: {\n    position: 'absolute',\n    top: '-7.5%',\n    left: '60%',\n  },\n\n  info: {\n    marginTop: theme.spacing(0.5)\n  },\n\n  emailAddress: {\n    marginTop: -theme.spacing(0.5)\n  },\n});\n\nclass Profile extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onChangeAvatarClick } = this.props;\n\n    if (!user.photoURL || !user.displayName || !user.email) {\n      return null;\n    }\n\n    return (\n      <div className={classes.profile}>\n        <div className={classes.changeAvatarContainer}>\n          <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n\n          {onChangeAvatarClick &&\n            <Tooltip title=\"Change avatar\">\n              <Fab className={classes.changeAvatar} color=\"primary\" disabled={isPerformingAuthAction} size=\"small\" onClick={onChangeAvatarClick}>\n                <EditIcon />\n              </Fab>\n            </Tooltip>\n          }\n        </div>\n\n        <div className={classes.info}>\n          <Typography variant=\"h6\">{user.displayName}</Typography>\n          <Typography className={classes.emailAddress} color=\"textSecondary\" variant=\"body1\">{user.email}</Typography>\n        </div>\n      </div>\n    );\n  }\n}\n\nProfile.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool,\n\n  onChangeAvatarClick: PropTypes.func\n};\n\nexport default withStyles(styles)(Profile);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass ConfirmationDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Dialog Properties\n    const { open } = this.props;\n\n    // Custom Properties\n    const {\n      title,\n      contentText,\n      cancelText,\n      okText,\n      disableOkButton,\n      highlightOkButton\n    } = this.props;\n\n    // Dialog Events\n    const { onClose } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onOkClick } = this.props;\n\n    if (!onClose) {\n      return null;\n    }\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" disabled={disableOkButton} variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default ConfirmationDialog;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport PortraitIcon from '@material-ui/icons/Portrait';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport Profile from '../../../layout/Profile/Profile';\n\nimport ConfirmationDialog from '../../../dialogs/ConfirmationDialog/ConfirmationDialog';\n\nconst styles = (theme) => ({\n  root: {\n    marginBottom: theme.spacing(0)\n  },\n\n  dialogContentTextUserComplete: {\n    marginTop: theme.spacing(1)\n  }\n});\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    };\n  }\n\n  openVerifyEmailAddressDialog = () => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeVerifyEmailAddressDialog = (callback) => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.closeVerifyEmailAddressDialog(() => {\n      this.props.onVerifyEmailAddressClick();\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user, isPerformingAuthAction, isVerifyingEmailAddress } = this.props;\n\n    // Events\n    const { onAddAvatarClick, onChangeAvatarClick, onAddDisplayNameClick, onChangeDisplayNameClick, onAddEmailAddressClick } = this.props;\n\n    const { verifyEmailAddressDialog } = this.state;\n\n    const isUserComplete = (user.photoURL && user.displayName && user.email);\n\n    return (\n      <React.Fragment>\n        <Profile user={user} isPerformingAuthAction={isPerformingAuthAction} extraTopMargin onChangeAvatarClick={onChangeAvatarClick} />\n\n        <DialogContentText classes={{ root: classes.root }} className={isUserComplete && classes.dialogContentTextUserComplete}>\n          Here's some info about your account. You can manage your account through the tabs.\n        </DialogContentText>\n\n        <List>\n          {!user.photoURL &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Avatar\">\n                  <PortraitIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have an avatar. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddAvatarClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.displayName &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Display name\">\n                  <PersonIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Display name\" secondary={user.displayName} />\n\n              <ListItemSecondaryAction>\n                <Tooltip title=\"Change\">\n                  <IconButton disabled={isPerformingAuthAction} onClick={onChangeDisplayNameClick}>\n                    <EditIcon />\n                  </IconButton>\n                </Tooltip>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {!user.displayName &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Display name\">\n                  <PersonIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have a display name. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddDisplayNameClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.email &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"E-mail address\">\n                  <EmailIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText\n                primary={user.email}\n                secondary={\n                  <React.Fragment>\n                    {user.emailVerified && 'Verified'}\n                    {(!user.emailVerified && isVerifyingEmailAddress) && 'Awaiting e-mail address verification'}\n                    {(!user.emailVerified && !isVerifyingEmailAddress) && 'Not verified'}\n                  </React.Fragment>\n                }\n              />\n\n              {!user.emailVerified &&\n                <ListItemSecondaryAction>\n                  {isVerifyingEmailAddress && <CircularProgress />}\n                  {!isVerifyingEmailAddress && <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={this.openVerifyEmailAddressDialog}>Verify</Button>}\n                </ListItemSecondaryAction>\n              }\n            </ListItem>\n          }\n\n          {!user.email &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"E-mail address\">\n                  <EmailIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have an e-mail address. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddEmailAddressClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.metadata.lastSignInTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Last sign-in\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Last sign-in\" secondary={moment(user.metadata.lastSignInTime).format('LLLL')} />\n            </ListItem>\n          }\n\n          {user.metadata.creationTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Signed up\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Signed up\" secondary={moment(user.metadata.creationTime).format('LLLL')} />\n            </ListItem>\n          }\n        </List>\n\n        <ConfirmationDialog\n          open={verifyEmailAddressDialog.open}\n\n          title=\"Send verification e-mail?\"\n          contentText=\"An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\"\n          okText=\"Send\"\n          disableOkButton={isPerformingAuthAction}\n          highlightOkButton\n\n          onClose={this.closeVerifyEmailAddressDialog}\n\n          onCancelClick={this.closeVerifyEmailAddressDialog}\n          onOkClick={this.verifyEmailAddress}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nAccountTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n\n  onAddAvatarClick: PropTypes.func.isRequired,\n  onChangeAvatarClick: PropTypes.func.isRequired,\n  onAddDisplayNameClick: PropTypes.func.isRequired,\n  onChangeDisplayNameClick: PropTypes.func.isRequired,\n  onAddEmailAddressClick: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = (theme) => ({\n  root: {\n    marginBottom: theme.spacing(0)\n  }\n});\n\nconst types = [\n  'light',\n  'dark'\n];\n\nclass AppearanceTab extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { colors, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    return (\n      <React.Fragment>\n        <DialogContentText classes={{ root: classes.root }}>\n          The app's primary and secondary colors, and their variants, help create a color theme that is harmonious,\n          ensures accessible text, and distinguishes UI elements and surfaces from one another.\n        </DialogContentText>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Primary color</InputLabel>\n\n          <Select onChange={onPrimaryColorChange} value={primaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Secondary color</InputLabel>\n\n          <Select onChange={onSecondaryColorChange} value={secondaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Type</InputLabel>\n\n          <Select onChange={onTypeChange} value={type}>\n            {types.map((type, index) => {\n              return (<MenuItem key={index} value={type}>{type.charAt(0).toUpperCase() + type.slice(1)}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nAppearanceTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  colors: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AppearanceTab);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport AccountTab from '../../tabs/settings/AccountTab/AccountTab';\nimport AppearanceTab from '../../tabs/settings/AppearanceTab/AppearanceTab';\n\nconst styles = (theme) => ({\n  tabs: {\n    marginBottom: theme.spacing(1)\n  }\n});\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedTab: 0\n    };\n  }\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onClose();\n    }\n  };\n\n  changeTab = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  changeIndex = (index) => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  handleResetClick = () => {\n    const { primaryColor, secondaryColor, type, defaultTheme } = this.props;\n\n    if (primaryColor !== defaultTheme.primaryColor || secondaryColor !== defaultTheme.secondaryColor || type !== defaultTheme.type) {\n      setTimeout(this.props.onResetClick, 137.5);\n    }\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const {\n      fullScreen,\n      open,\n      user,\n      isPerformingAuthAction,\n      isVerifyingEmailAddress,\n      colors,\n      primaryColor,\n      secondaryColor,\n      type,\n      defaultTheme\n    } = this.props;\n\n    // Events\n    const {\n      onClose,\n      onAddAvatarClick,\n      onChangeAvatarClick,\n      onAddDisplayNameClick,\n      onChangeDisplayNameClick,\n      onAddEmailAddressClick,\n      onVerifyEmailAddressClick,\n      onPrimaryColorChange,\n      onSecondaryColorChange,\n      onTypeChange\n    } = this.props;\n\n    const { selectedTab } = this.state;\n\n    let hasDeviatedFromDefaultSettings = false;\n\n    if (defaultTheme) {\n      hasDeviatedFromDefaultSettings = (\n        primaryColor !== defaultTheme.primaryColor.name ||\n        secondaryColor !== defaultTheme.secondaryColor.name ||\n        type !== defaultTheme.type\n      );\n    }\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>Settings</DialogTitle>\n\n        <Tabs className={classes.tabs} indicatorColor=\"primary\" textColor=\"primary\" onChange={this.changeTab} value={selectedTab} variant=\"fullWidth\">\n          <Tab label=\"Account\" />\n          <Tab label=\"Appearance\" />\n        </Tabs>\n\n        <DialogContent>\n          <Hidden only=\"xs\">\n            {selectedTab === 0 &&\n              <AccountTab\n                user={user}\n                isPerformingAuthAction={isPerformingAuthAction}\n                isVerifyingEmailAddress={isVerifyingEmailAddress}\n                onAddAvatarClick={onAddAvatarClick}\n                onChangeAvatarClick={onChangeAvatarClick}\n                onAddDisplayNameClick={onAddDisplayNameClick}\n                onChangeDisplayNameClick={onChangeDisplayNameClick}\n                onAddEmailAddressClick={onAddEmailAddressClick}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n            }\n\n            {selectedTab === 1 &&\n              <AppearanceTab\n                colors={colors}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            }\n          </Hidden>\n\n          <Hidden only={['sm', 'md', 'lg', 'xl']}>\n            <SwipeableViews index={selectedTab} onChangeIndex={this.changeIndex}>\n              <AccountTab\n                user={user}\n                isPerformingAuthAction={isPerformingAuthAction}\n                isVerifyingEmailAddress={isVerifyingEmailAddress}\n                onAddAvatarClick={onAddAvatarClick}\n                onChangeAvatarClick={onChangeAvatarClick}\n                onAddDisplayNameClick={onAddDisplayNameClick}\n                onChangeDisplayNameClick={onChangeDisplayNameClick}\n                onAddEmailAddressClick={onAddEmailAddressClick}\n                onVerifyEmailAddressClick={onVerifyEmailAddressClick}\n              />\n\n              <AppearanceTab\n                colors={colors}\n                primaryColor={primaryColor}\n                secondaryColor={secondaryColor}\n                type={type}\n                onPrimaryColorChange={onPrimaryColorChange}\n                onSecondaryColorChange={onSecondaryColorChange}\n                onTypeChange={onTypeChange}\n              />\n            </SwipeableViews>\n          </Hidden>\n        </DialogContent>\n\n        {(selectedTab === 1 && hasDeviatedFromDefaultSettings) &&\n          <React.Fragment>\n            <Hidden only=\"xs\">\n              <DialogActions>\n                <Button color=\"primary\" variant=\"contained\" onClick={this.handleResetClick}>Reset</Button>\n              </DialogActions>\n            </Hidden>\n\n            <Hidden only={['sm', 'md', 'lg', 'xl']}>\n              <DialogActions>\n                <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n                <Button color=\"primary\" variant=\"outlined\" onClick={this.handleResetClick}>Reset</Button>\n                <Button color=\"primary\" variant=\"contained\" onClick={onClose}>OK</Button>\n              </DialogActions>\n            </Hidden>\n          </React.Fragment>\n        }\n\n        {(selectedTab !== 1 || !hasDeviatedFromDefaultSettings) &&\n          <Hidden only={['sm', 'md', 'lg', 'xl']}>\n            <DialogActions>\n              <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n              <Button color=\"primary\" variant=\"contained\" onClick={onClose}>OK</Button>\n            </DialogActions>\n          </Hidden>\n        }\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n  colors: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAddAvatarClick: PropTypes.func.isRequired,\n  onChangeAvatarClick: PropTypes.func.isRequired,\n  onAddDisplayNameClick: PropTypes.func.isRequired,\n  onChangeDisplayNameClick: PropTypes.func.isRequired,\n  onAddEmailAddressClick: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired,\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired,\n  onResetClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SettingsDialog);","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass InputDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Dialog Properties\n    const { fullScreen, open } = this.props;\n\n    // Custom Properties\n    const { title, contentText, textField, cancelText, okText, disableOkButton, highlightOkButton } = this.props;\n\n    // Dialog Events\n    const { onClose, onExited } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onOkClick } = this.props;\n\n    if (!onClose) {\n      return null;\n    }\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={onExited} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n\n            {textField &&\n              <form>\n                {textField}\n              </form>\n            }\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" disabled={disableOkButton} variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nInputDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  textField: PropTypes.element,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default InputDialog;","// React\nimport React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// validate.js\nimport validate from 'validate.js';\n\n// Firebase\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/performance';\n\nimport readingTime from 'reading-time';\n\n// Material-UI\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n// Custom\nimport colors from '../colors';\nimport settings from '../settings';\n\nimport LaunchScreen from '../layout/LaunchScreen/LaunchScreen';\n\nimport Bar from '../layout/Bar/Bar';\n\nimport HomeContent from '../content/HomeContent/HomeContent';\nimport NotFoundContent from '../content/NotFoundContent/NotFoundContent';\n\nimport SignUpDialog from '../dialogs/SignUpDialog/SignUpDialog';\nimport SignInDialog from '../dialogs/SignInDialog/SignInDialog';\nimport ResetPasswordDialog from '../dialogs/ResetPasswordDialog/ResetPasswordDialog';\nimport WelcomeDialog from '../dialogs/WelcomeDialog/WelcomeDialog';\nimport SettingsDialog from '../dialogs/SettingsDialog/SettingsDialog';\nimport InputDialog from '../dialogs/InputDialog/InputDialog';\nimport ConfirmationDialog from '../dialogs/ConfirmationDialog/ConfirmationDialog';\n\nfirebase.initializeApp(settings.credentials.firebase);\n\nconst auth = firebase.auth();\n\n// eslint-disable-next-line no-unused-vars\nconst performance = firebase.performance();\n\nauth.useDeviceLanguage();\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: settings.theme.primaryColor.import,\n    secondary: settings.theme.secondaryColor.import,\n    type: settings.theme.type\n  }\n});\n\nclass App extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      primaryColor: settings.theme.primaryColor.name,\n      secondaryColor: settings.theme.secondaryColor.name,\n      type: settings.theme.type,\n\n      isAuthReady: false,\n      isPerformingAuthAction: false,\n      isVerifyingEmailAddress: false,\n      isSignedIn: false,\n\n      user: null,\n      avatar: '',\n      displayName: '',\n      emailAddress: '',\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      resetPasswordDialog: {\n        open: false\n      },\n\n      welcomeDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      addAvatarDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      changeAvatarDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      addDisplayNameDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      changeDisplayNameDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      addEmailAddressDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  signUp = (emailAddress, password, passwordConfirmation) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password || !passwordConfirmation) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress,\n      password,\n      passwordConfirmation\n    }, settings.constraints.signUp);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.openWelcomeDialog();\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/email-already-in-use':\n          case 'auth/invalid-email':\n          case 'auth/operation-not-allowed':\n          case 'auth/weak-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  signIn = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress,\n      password,\n    }, settings.constraints.signIn);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignInDialog(() => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/user-disabled':\n          case 'auth/user-not-found':\n          case 'auth/wrong-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  signInWithProvider = (provider) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!provider) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithPopup(provider).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.closeSignInDialog(() => {\n            const user = value.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n          });\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  resetPassword = (emailAddress) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress\n    }, settings.constraints.resetPassword);\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.sendPasswordResetEmail(emailAddress).then(() => {\n        this.closeResetPasswordDialog(() => {\n          this.openSnackbar(`Password reset e-mail sent to ${emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n          case 'auth/user-not-found':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  addAvatar = () => {\n    const { user, isSignedIn, avatar } = this.state;\n\n    if (!user || !isSignedIn || !avatar) {\n      return;\n    }\n\n    if (user.photoURL) {\n      return;\n    }\n\n    const errors = validate({ avatar }, settings.constraints.addAvatar);\n\n    if (errors) {\n      this.setState((state) => ({\n        addAvatarDialog: {\n          ...state.addAvatarDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ photoURL: avatar }).then(() => {\n        this.closeAddAvatarDialog(() => {\n          this.openSnackbar('Avatar added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  changeAvatar = () => {\n    const { user, isSignedIn, avatar } = this.state;\n\n    if (!user || !isSignedIn || !avatar) {\n      return;\n    }\n\n    const errors = validate({ avatar }, settings.constraints.changeAvatar);\n\n    if (errors) {\n      this.setState((state) => ({\n        changeAvatarDialog: {\n          ...state.changeAvatarDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    if (user.photoURL === avatar) {\n      this.openSnackbar('Avatar already being used');\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ photoURL: avatar }).then(() => {\n        this.closeChangeAvatarDialog(() => {\n          this.openSnackbar('Avatar changed');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  addDisplayName = () => {\n    const { user, isSignedIn, displayName } = this.state;\n\n    if (!user || !isSignedIn || !displayName) {\n      return;\n    }\n\n    if (user.displayName) {\n      return;\n    }\n\n    const errors = validate({ displayName }, settings.constraints.addDisplayName);\n\n    if (errors) {\n      this.setState((state) => ({\n        addDisplayNameDialog: {\n          ...state.addDisplayNameDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ displayName }).then(() => {\n        this.closeAddDisplayNameDialog(() => {\n          this.openSnackbar('Display name added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  changeDisplayName = () => {\n    const { user, isSignedIn, displayName } = this.state;\n\n    if (!user || !isSignedIn || !displayName) {\n      return;\n    }\n\n    const errors = validate({ displayName }, settings.constraints.changeDisplayName);\n\n    if (errors) {\n      this.setState((state) => ({\n        changeDisplayNameDialog: {\n          ...state.changeDisplayNameDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    if (displayName === user.displayName) {\n      this.openSnackbar(`Display name is already ${displayName}`);\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ displayName }).then(() => {\n        this.closeChangeDisplayNameDialog(() => {\n          this.openSnackbar('Display name changed');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  addEmailAddress = () => {\n    const { user, isSignedIn, emailAddress } = this.state;\n\n    if (!user || !isSignedIn || !emailAddress) {\n      return;\n    }\n\n    if (user.email) {\n      return;\n    }\n\n    const errors = validate({ emailAddress }, settings.constraints.addEmailAddress);\n\n    if (errors) {\n      this.setState((state) => ({\n        addEmailAddressDialog: {\n          ...state.addEmailAddressDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateEmail(emailAddress).then(() => {\n        this.closeAddEmailAddressDialog(() => {\n          this.openSnackbar('E-mail address added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  verifyEmailAddress = (callback) => {\n    const { user, isSignedIn } = this.state;\n\n    if (!user || !user.email || !isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.sendEmailVerification().then(() => {\n        this.setState({\n          isVerifyingEmailAddress: true\n        }, () => {\n          const emailAddress = user.email;\n\n          this.openSnackbar(`Verification e-mail sent to ${emailAddress}`);\n\n          if (callback && typeof callback === 'function') {\n            callback();\n          }\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  signOut = () => {\n    if (!this.state.isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signOut().then(() => {\n        this.closeSignOutDialog(() => {\n          this.openSnackbar('Signed out');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  updateTheme = (palette, removeLocalStorage, callback) => {\n    const { primaryColor, secondaryColor, type } = this.state;\n\n    if (!palette.primaryColor) {\n      palette.primaryColor = primaryColor;\n    }\n\n    if (!palette.secondaryColor) {\n      palette.secondaryColor = secondaryColor;\n    }\n\n    if (!palette.type) {\n      palette.type = type;\n    }\n\n    theme = createMuiTheme({\n      palette: {\n        primary: colors.find(color => color.id === palette.primaryColor).import,\n        secondary: colors.find(color => color.id === palette.secondaryColor).import,\n        type: palette.type\n      }\n    });\n\n    this.setState({\n      primaryColor: palette.primaryColor,\n      secondaryColor: palette.secondaryColor,\n      type: palette.type\n    }, () => {\n      if (removeLocalStorage) {\n        localStorage.removeItem('theme');\n      } else {\n        localStorage.setItem('theme', JSON.stringify({\n          primaryColor: palette.primaryColor,\n          secondaryColor: palette.secondaryColor,\n          type: palette.type\n        }));\n      }\n\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  resetTheme = () => {\n    this.updateTheme({\n      primaryColor: settings.theme.primaryColor.name,\n      secondaryColor: settings.theme.secondaryColor.name,\n      type: settings.theme.type\n    }, true, () => {\n      this.openSnackbar('Settings reset');\n    });\n  };\n\n  changePrimaryColor = (event) => {\n    const primaryColor = event.target.value;\n\n    this.updateTheme({\n      primaryColor\n    });\n  };\n\n  changeSecondaryColor = (event) => {\n    const secondaryColor = event.target.value;\n\n    this.updateTheme({\n      secondaryColor\n    });\n  };\n\n  changeType = (event) => {\n    const type = event.target.value;\n\n    this.updateTheme({\n      type\n    });\n  };\n\n  openSignUpDialog = () => {\n    this.setState({\n      signUpDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignUpDialog = (callback) => {\n    this.setState({\n      signUpDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSignInDialog = () => {\n    this.setState({\n      signInDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignInDialog = (callback) => {\n    this.setState({\n      signInDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openResetPasswordDialog = () => {\n    this.setState({\n      resetPasswordDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeResetPasswordDialog = (callback) => {\n    this.setState({\n      resetPasswordDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openWelcomeDialog = () => {\n    this.setState({\n      welcomeDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeWelcomeDialog = (callback) => {\n    this.setState({\n      welcomeDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSettingsDialog = () => {\n    this.setState({\n      settingsDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSettingsDialog = (callback) => {\n    this.setState({\n      settingsDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddAvatarDialog = () => {\n    this.setState({\n      addAvatarDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddAvatarDialog = (callback) => {\n    this.setState({\n      addAvatarDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openChangeAvatarDialog = () => {\n    this.setState({\n      changeAvatarDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeChangeAvatarDialog = (callback) => {\n    this.setState({\n      changeAvatarDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddDisplayNameDialog = () => {\n    this.setState({\n      addDisplayNameDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddDisplayNameDialog = (callback) => {\n    this.setState({\n      addDisplayNameDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openChangeDisplayNameDialog = () => {\n    this.setState({\n      changeDisplayNameDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeChangeDisplayNameDialog = (callback) => {\n    this.setState({\n      changeDisplayNameDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddEmailAddressDialog = () => {\n    this.setState({\n      addEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddEmailAddressDialog = (callback) => {\n    this.setState({\n      addEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSignOutDialog = () => {\n    this.setState({\n      signOutDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignOutDialog = (callback) => {\n    this.setState({\n      signOutDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  handleAvatarChange = (event) => {\n    const avatar = event.target.value;\n\n    this.setState({ avatar });\n  };\n\n  handleDisplayNameChange = (event) => {\n    const displayName = event.target.value;\n\n    this.setState({ displayName });\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  openSnackbar = (message) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * 2,\n        message,\n        open: true\n      }\n    });\n  };\n\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    const {\n      primaryColor,\n      secondaryColor,\n      type,\n      isAuthReady,\n      isPerformingAuthAction,\n      isVerifyingEmailAddress,\n      isSignedIn,\n      user,\n      avatar,\n      displayName,\n      emailAddress\n    } = this.state;\n\n    const {\n      signUpDialog,\n      signInDialog,\n      resetPasswordDialog,\n      welcomeDialog,\n      settingsDialog,\n      addAvatarDialog,\n      changeAvatarDialog,\n      addDisplayNameDialog,\n      changeDisplayNameDialog,\n      addEmailAddressDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    return (\n      <Router basename=\"/react-material-ui-firebase\">\n        <MuiThemeProvider theme={theme}>\n          <div style={{ minHeight: '100vh', backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa' }}>\n            {!isAuthReady &&\n              <LaunchScreen />\n            }\n\n            {isAuthReady &&\n              <React.Fragment>\n                <Bar\n                  title={settings.title}\n\n                  isSignedIn={isSignedIn}\n                  isPerformingAuthAction={isPerformingAuthAction}\n\n                  user={user}\n\n                  onSignUpClick={this.openSignUpDialog}\n                  onSignInClick={this.openSignInDialog}\n\n                  onSettingsClick={this.openSettingsDialog}\n                  onSignOutClick={this.openSignOutDialog}\n                />\n\n                <Switch>\n                  <Route path=\"/\" exact render={() => (<HomeContent isSignedIn={isSignedIn} title={settings.title} />)} />\n                  <Route component={NotFoundContent} />\n                </Switch>\n\n                {isSignedIn &&\n                  <React.Fragment>\n                    <Hidden only=\"xs\">\n                      <WelcomeDialog\n                        open={welcomeDialog.open}\n\n                        title={settings.title}\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        onClose={this.closeWelcomeDialog}\n\n                        onCancelClick={this.closeWelcomeDialog}\n                        onVerifyClick={() => {\n                          this.verifyEmailAddress(() => {\n                            this.closeWelcomeDialog()\n                          })\n                        }}\n                      />\n\n                      <SettingsDialog\n                        open={settingsDialog.open}\n\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        isVerifyingEmailAddress={isVerifyingEmailAddress}\n                        colors={colors}\n                        primaryColor={primaryColor}\n                        secondaryColor={secondaryColor}\n                        type={type}\n                        defaultTheme={settings.theme}\n\n                        onClose={this.closeSettingsDialog}\n                        onAddAvatarClick={this.openAddAvatarDialog}\n                        onChangeAvatarClick={this.openChangeAvatarDialog}\n                        onAddDisplayNameClick={this.openAddDisplayNameDialog}\n                        onChangeDisplayNameClick={this.openChangeDisplayNameDialog}\n                        onAddEmailAddressClick={this.openAddEmailAddressDialog}\n                        onVerifyEmailAddressClick={this.verifyEmailAddress}\n                        onPrimaryColorChange={this.changePrimaryColor}\n                        onSecondaryColorChange={this.changeSecondaryColor}\n                        onTypeChange={this.changeType}\n                        onResetClick={this.resetTheme}\n                      />\n\n                      <InputDialog\n                        open={addAvatarDialog.open}\n\n                        title=\"Add avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(addAvatarDialog.errors && addAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(addAvatarDialog.errors && addAvatarDialog.errors.avatar) ? addAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder=\"Avatar URL\"\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddAvatarDialog}\n                        onOkClick={this.addAvatar}\n                      />\n\n                      <InputDialog\n                        open={changeAvatarDialog.open}\n\n                        title=\"Change avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar) ? changeAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder={user.photoURL}\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeAvatarDialog}\n                        onOkClick={this.changeAvatar}\n                      />\n\n                      <InputDialog\n                        open={addDisplayNameDialog.open}\n\n                        title=\"Add display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName) ? addDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder=\"Display name\"\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddDisplayNameDialog}\n                        onOkClick={this.addDisplayName}\n                      />\n\n                      <InputDialog\n                        open={changeDisplayNameDialog.open}\n\n                        title=\"Change display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName) ? changeDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder={user.displayName}\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeDisplayNameDialog}\n                        onOkClick={this.changeDisplayName}\n                      />\n\n                      <InputDialog\n                        open={addEmailAddressDialog.open}\n\n                        title=\"Add e-mail address\"\n                        contentText=\"Your e-mail address is used to identify you. It's not visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"email\"\n                            autoFocus\n                            error={!!(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress)}\n                            fullWidth\n                            helperText={(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress) ? addEmailAddressDialog.errors.emailAddress[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleEmailAddressChange}\n                            placeholder=\"E-mail address\"\n                            required\n                            type=\"email\"\n                            value={emailAddress}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!emailAddress || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddEmailAddressDialog}\n                        onExited={() => {\n                          this.setState({\n                            emailAddress: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddEmailAddressDialog}\n                        onOkClick={this.addEmailAddress}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <WelcomeDialog\n                        fullScreen\n                        open={welcomeDialog.open}\n\n                        title={settings.title}\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        onClose={this.closeWelcomeDialog}\n\n                        onCancelClick={this.closeWelcomeDialog}\n                        onVerifyClick={() => {\n                          this.verifyEmailAddress(() => {\n                            this.closeWelcomeDialog()\n                          })\n                        }}\n                      />\n\n                      <SettingsDialog\n                        fullScreen\n                        open={settingsDialog.open}\n\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        isVerifyingEmailAddress={isVerifyingEmailAddress}\n                        colors={colors}\n                        primaryColor={primaryColor}\n                        secondaryColor={secondaryColor}\n                        type={type}\n                        defaultTheme={settings.theme}\n\n                        onClose={this.closeSettingsDialog}\n                        onAddAvatarClick={this.openAddAvatarDialog}\n                        onChangeAvatarClick={this.openChangeAvatarDialog}\n                        onAddDisplayNameClick={this.openAddDisplayNameDialog}\n                        onChangeDisplayNameClick={this.openChangeDisplayNameDialog}\n                        onAddEmailAddressClick={this.openAddEmailAddressDialog}\n                        onVerifyEmailAddressClick={this.verifyEmailAddress}\n                        onPrimaryColorChange={this.changePrimaryColor}\n                        onSecondaryColorChange={this.changeSecondaryColor}\n                        onTypeChange={this.changeType}\n                        onResetClick={this.resetTheme}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={addAvatarDialog.open}\n\n                        title=\"Add avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(addAvatarDialog.errors && addAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(addAvatarDialog.errors && addAvatarDialog.errors.avatar) ? addAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder=\"Avatar URL\"\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddAvatarDialog}\n                        onOkClick={this.addAvatar}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={changeAvatarDialog.open}\n\n                        title=\"Change avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar) ? changeAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder={user.photoURL}\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeAvatarDialog}\n                        onOkClick={this.changeAvatar}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={addDisplayNameDialog.open}\n\n                        title=\"Add display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName) ? addDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder=\"Display name\"\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddDisplayNameDialog}\n                        onOkClick={this.addDisplayName}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={changeDisplayNameDialog.open}\n\n                        title=\"Change display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName) ? changeDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder={user.displayName}\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeDisplayNameDialog}\n                        onOkClick={this.changeDisplayName}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={addEmailAddressDialog.open}\n\n                        title=\"Add e-mail address\"\n                        contentText=\"Your e-mail address is used to identify you. It's not visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"email\"\n                            autoFocus\n                            error={!!(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress)}\n                            fullWidth\n                            helperText={(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress) ? addEmailAddressDialog.errors.emailAddress[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleEmailAddressChange}\n                            placeholder=\"E-mail address\"\n                            required\n                            type=\"email\"\n                            value={emailAddress}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!emailAddress || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddEmailAddressDialog}\n                        onExited={() => {\n                          this.setState({\n                            emailAddress: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddEmailAddressDialog}\n                        onOkClick={this.addEmailAddress}\n                      />\n                    </Hidden>\n\n                    <ConfirmationDialog\n                      open={signOutDialog.open}\n\n                      title=\"Sign out?\"\n                      contentText=\"While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\"\n                      okText=\"Sign Out\"\n                      disableOkButton={isPerformingAuthAction}\n                      highlightOkButton\n\n                      onClose={this.closeSignOutDialog}\n                      onCancelClick={this.closeSignOutDialog}\n                      onOkClick={this.signOut}\n                    />\n                  </React.Fragment>\n                }\n\n                {!isSignedIn &&\n                  <React.Fragment>\n                    <Hidden only=\"xs\">\n                      <SignUpDialog\n                        open={signUpDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={settings.constraints.signUp}\n\n                        signUp={this.signUp}\n\n                        onClose={this.closeSignUpDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                      />\n\n                      <SignInDialog\n                        open={signInDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={settings.constraints.signIn}\n\n                        signIn={this.signIn}\n\n                        onClose={this.closeSignInDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                        onResetPasswordClick={this.openResetPasswordDialog}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <SignUpDialog\n                        fullScreen\n                        open={signUpDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={settings.constraints.signUp}\n\n                        signUp={this.signUp}\n\n                        onClose={this.closeSignUpDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                      />\n\n                      <SignInDialog\n                        fullScreen\n                        open={signInDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        constraints={settings.constraints.signIn}\n\n                        signIn={this.signIn}\n\n                        onClose={this.closeSignInDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                        onResetPasswordClick={this.openResetPasswordDialog}\n                      />\n                    </Hidden>\n\n                    <ResetPasswordDialog\n                      open={resetPasswordDialog.open}\n\n                      isPerformingAuthAction={isPerformingAuthAction}\n                      constraints={settings.constraints.resetPassword}\n\n                      resetPassword={this.resetPassword}\n\n                      onClose={this.closeResetPasswordDialog}\n                    />\n                  </React.Fragment>\n                }\n\n                <Snackbar\n                  autoHideDuration={snackbar.autoHideDuration}\n                  message={snackbar.message}\n                  open={snackbar.open}\n                  onClose={this.closeSnackbar}\n                />\n              </React.Fragment>\n            }\n          </div>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    const theme = JSON.parse(localStorage.getItem('theme'));\n\n    if (theme) {\n      this.updateTheme(theme);\n    }\n\n    this.removeAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      if (this._isMounted) {\n        this.setState({\n          isAuthReady: true,\n          isSignedIn: !!user,\n          user\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n\n    this.removeAuthObserver();\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}